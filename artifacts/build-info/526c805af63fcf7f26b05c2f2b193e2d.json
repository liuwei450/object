{
	"id": "526c805af63fcf7f26b05c2f2b193e2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Basic - 1/contracts/MTK.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MtkContracts {\r\n    //枚举\r\n    enum StakingPeriod { ThirtyDays, NinetyDays, HundredEightyDays, OneYear }\r\n    mapping(StakingPeriod => uint256) public apy; // 年化收益率（百分比，如20表示20%）\r\n    \r\n    //定义结构体\r\n    struct Stake{\r\n        uint256 stakeIndex;         //唯一索引\r\n        uint256 amount;             // 质押数量\r\n        uint256 startTime;          // 质押开始时间\r\n        uint256 endTime;            // 质押结束时间\r\n        uint256 rewardRate;         // 收益率（根据期限计算）\r\n        bool isActive;              // 订单是否有效\r\n    }\r\n    \r\n\r\n    IERC20 public  stakingToken;//\r\n \r\n    mapping(address => Stake[]) public userStakes; // 用户的所有质押订单\r\n    mapping(StakingPeriod => uint256) public aprs; // 不同期限（秒）对应的年化收益率\r\n    mapping(StakingPeriod=>uint256) public durations; // 不同期限对应的秒数 )\r\n\r\n     event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        StakingPeriod period,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event Withdrawn(\r\n        address indexed user,\r\n        uint256 totalAmount,\r\n        uint256 stakeIndex\r\n    );\r\n\r\n    constructor(IERC20 _mtkToken) {\r\n        stakingToken = _mtkToken;\r\n\r\n        durations[StakingPeriod.ThirtyDays] = 30 days;\r\n        durations[StakingPeriod.NinetyDays] = 90 days;\r\n        durations[StakingPeriod.HundredEightyDays] = 180 days;\r\n        durations[StakingPeriod.OneYear] = 365 days;\r\n\r\n        apy[StakingPeriod.ThirtyDays] = 10;   // 10% 年化\r\n        apy[StakingPeriod.NinetyDays] = 15;   // 15% 年化\r\n        apy[StakingPeriod.HundredEightyDays] = 18; // 18% 年化\r\n        apy[StakingPeriod.OneYear] = 20;      // 20% 年化\r\n    }\r\n\r\n    function stake(uint256 amount, StakingPeriod period) external {\r\n       \r\n        require(amount>0,\"amount must be greater than zero\");\r\n        require(stakingToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\r\n\r\n        uint256 duration=_getDuration(period);//获取分钟\r\n        uint256 periodDays=durations[period];\r\n        uint256 rate=apy[period]*periodDays*1**18/360;\r\n        uint256 start = block.timestamp;//区块开始时间\r\n        uint256 end = start + duration;//结束时间\r\n        \r\n        Stake memory newStake = Stake({\r\n            stakeIndex: userStakes[msg.sender].length,\r\n            amount: amount,\r\n            startTime: start,\r\n            endTime: end,\r\n            rewardRate: rate, // 收益率（根据期限计算）\r\n            isActive: true    // 订单是否有效\r\n        });\r\n\r\n        userStakes[msg.sender].push(newStake);\r\n        //触发事件\r\n        emit Staked(msg.sender, amount, period, end);\r\n    }\r\n\r\n    // 内部函数：根据期限返回秒数\r\n    function _getDuration(StakingPeriod period) internal pure returns (uint256) {\r\n        if(period==StakingPeriod.ThirtyDays){\r\n            return  1 minutes;\r\n        }else if(period==StakingPeriod.NinetyDays){\r\n            return  3 minutes;\r\n        }else if(period==StakingPeriod.HundredEightyDays){\r\n            return  5 minutes;\r\n        }else {\r\n            return  10 minutes;\r\n        }\r\n    }\r\n        \r\n    //提现\r\n    function withdraw(uint256 stakeIndex) external {\r\n        require(stakeIndex<userStakes[msg.sender].length,\"Invalid stake index\");\r\n        Stake storage stk = userStakes[msg.sender][stakeIndex];\r\n        require(stk.isActive, \"stk is not active\");\r\n        //质押时间没有到\r\n        require(block.timestamp >= stk.endTime, \"Staking period is not over\");\r\n        stk.isActive=false;\r\n        \r\n        uint256 reward = stk.amount * stk.rewardRate  / 100/10**18;\r\n        uint256 totalAmount = stk.amount + reward;\r\n        // 将质押的代币和收益转移给用户\r\n        stakingToken.transfer(msg.sender, totalAmount);\r\n        emit Withdrawn(msg.sender, totalAmount, stakeIndex);\r\n    }\r\n   \r\n\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Basic - 1/contracts/MTK.sol": {
				"MtkContracts": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_mtkToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "period",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "aprs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "apy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "durations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "period",
									"type": "uint8"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Basic - 1/contracts/MTK.sol\":174:4142  contract MtkContracts {... */\n  mstore(0x40, 0x80)\n    /* \"Basic - 1/contracts/MTK.sol\":1395:1951  constructor(IERC20 _mtkToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Basic - 1/contracts/MTK.sol\":1451:1460  _mtkToken */\n  dup1\n    /* \"Basic - 1/contracts/MTK.sol\":1436:1448  stakingToken */\n  0x01\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1436:1460  stakingToken = _mtkToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1511:1518  30 days */\n  0x278d00\n    /* \"Basic - 1/contracts/MTK.sol\":1473:1482  durations */\n  0x04\n    /* \"Basic - 1/contracts/MTK.sol\":1473:1508  durations[StakingPeriod.ThirtyDays] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1483:1507  StakingPeriod.ThirtyDays */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1473:1508  durations[StakingPeriod.ThirtyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_6\n  jumpi\n  tag_7\n  tag_8\n  jump\t// in\ntag_7:\ntag_6:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_10\n  tag_8\n  jump\t// in\ntag_10:\ntag_9:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1473:1518  durations[StakingPeriod.ThirtyDays] = 30 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1567:1574  90 days */\n  0x76a700\n    /* \"Basic - 1/contracts/MTK.sol\":1529:1538  durations */\n  0x04\n    /* \"Basic - 1/contracts/MTK.sol\":1529:1564  durations[StakingPeriod.NinetyDays] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1539:1563  StakingPeriod.NinetyDays */\n  0x01\n    /* \"Basic - 1/contracts/MTK.sol\":1529:1564  durations[StakingPeriod.NinetyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_8\n  jump\t// in\ntag_12:\ntag_11:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_8\n  jump\t// in\ntag_14:\ntag_13:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1529:1574  durations[StakingPeriod.NinetyDays] = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1630:1638  180 days */\n  0xed4e00\n    /* \"Basic - 1/contracts/MTK.sol\":1585:1594  durations */\n  0x04\n    /* \"Basic - 1/contracts/MTK.sol\":1585:1627  durations[StakingPeriod.HundredEightyDays] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1595:1626  StakingPeriod.HundredEightyDays */\n  0x02\n    /* \"Basic - 1/contracts/MTK.sol\":1585:1627  durations[StakingPeriod.HundredEightyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_8\n  jump\t// in\ntag_16:\ntag_15:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_8\n  jump\t// in\ntag_18:\ntag_17:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1585:1638  durations[StakingPeriod.HundredEightyDays] = 180 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1684:1692  365 days */\n  0x01e13380\n    /* \"Basic - 1/contracts/MTK.sol\":1649:1658  durations */\n  0x04\n    /* \"Basic - 1/contracts/MTK.sol\":1649:1681  durations[StakingPeriod.OneYear] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1659:1680  StakingPeriod.OneYear */\n  0x03\n    /* \"Basic - 1/contracts/MTK.sol\":1649:1681  durations[StakingPeriod.OneYear] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_8\n  jump\t// in\ntag_20:\ntag_19:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_8\n  jump\t// in\ntag_22:\ntag_21:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1649:1692  durations[StakingPeriod.OneYear] = 365 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1737:1739  10 */\n  0x0a\n    /* \"Basic - 1/contracts/MTK.sol\":1705:1708  apy */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1705:1734  apy[StakingPeriod.ThirtyDays] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1709:1733  StakingPeriod.ThirtyDays */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1705:1734  apy[StakingPeriod.ThirtyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_8\n  jump\t// in\ntag_24:\ntag_23:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_8\n  jump\t// in\ntag_26:\ntag_25:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1705:1739  apy[StakingPeriod.ThirtyDays] = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1798:1800  15 */\n  0x0f\n    /* \"Basic - 1/contracts/MTK.sol\":1766:1769  apy */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1766:1795  apy[StakingPeriod.NinetyDays] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1770:1794  StakingPeriod.NinetyDays */\n  0x01\n    /* \"Basic - 1/contracts/MTK.sol\":1766:1795  apy[StakingPeriod.NinetyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\ntag_27:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_8\n  jump\t// in\ntag_30:\ntag_29:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1766:1800  apy[StakingPeriod.NinetyDays] = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1866:1868  18 */\n  0x12\n    /* \"Basic - 1/contracts/MTK.sol\":1827:1830  apy */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1827:1863  apy[StakingPeriod.HundredEightyDays] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1831:1862  StakingPeriod.HundredEightyDays */\n  0x02\n    /* \"Basic - 1/contracts/MTK.sol\":1827:1863  apy[StakingPeriod.HundredEightyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_8\n  jump\t// in\ntag_32:\ntag_31:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  tag_34\n  tag_8\n  jump\t// in\ntag_34:\ntag_33:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1827:1868  apy[StakingPeriod.HundredEightyDays] = 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1922:1924  20 */\n  0x14\n    /* \"Basic - 1/contracts/MTK.sol\":1893:1896  apy */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1893:1919  apy[StakingPeriod.OneYear] */\n  0x00\n    /* \"Basic - 1/contracts/MTK.sol\":1897:1918  StakingPeriod.OneYear */\n  0x03\n    /* \"Basic - 1/contracts/MTK.sol\":1893:1919  apy[StakingPeriod.OneYear] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  tag_36\n  tag_8\n  jump\t// in\ntag_36:\ntag_35:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  tag_38\n  tag_8\n  jump\t// in\ntag_38:\ntag_37:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Basic - 1/contracts/MTK.sol\":1893:1924  apy[StakingPeriod.OneYear] = 20 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":1395:1951  constructor(IERC20 _mtkToken) {... */\n  pop\n    /* \"Basic - 1/contracts/MTK.sol\":174:4142  contract MtkContracts {... */\n  jump(tag_39)\n    /* \"#utility.yul\":88:205   */\ntag_41:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_43:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_44:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_43\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_45:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_56\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_44\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_46:\n    /* \"#utility.yul\":771:809   */\n  tag_58\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_45\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_59:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_47:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_61\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_46\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_64\n  tag_41\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1118:1237   */\ntag_63:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_65\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_47\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1582   */\ntag_8:\n    /* \"#utility.yul\":1450:1527   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1447:1448   */\n  0x00\n    /* \"#utility.yul\":1440:1528   */\n  mstore\n    /* \"#utility.yul\":1547:1551   */\n  0x21\n    /* \"#utility.yul\":1544:1545   */\n  0x04\n    /* \"#utility.yul\":1537:1552   */\n  mstore\n    /* \"#utility.yul\":1571:1575   */\n  0x24\n    /* \"#utility.yul\":1568:1569   */\n  0x00\n    /* \"#utility.yul\":1561:1576   */\n  revert\n    /* \"Basic - 1/contracts/MTK.sol\":174:4142  contract MtkContracts {... */\ntag_39:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Basic - 1/contracts/MTK.sol\":174:4142  contract MtkContracts {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4931fa75\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb5d5b5fa\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0ae355d3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10087fb1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1f1accb2\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Basic - 1/contracts/MTK.sol\":1040:1088  mapping(StakingPeriod=>uint256) public durations */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basic - 1/contracts/MTK.sol\":1959:2941  function stake(uint256 amount, StakingPeriod period) external {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"Basic - 1/contracts/MTK.sol\":296:340  mapping(StakingPeriod => uint256) public apy */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basic - 1/contracts/MTK.sol\":3428:4130  function withdraw(uint256 stakeIndex) external {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Basic - 1/contracts/MTK.sol\":939:984  mapping(StakingPeriod => uint256) public aprs */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basic - 1/contracts/MTK.sol\":817:844  IERC20 public  stakingToken */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basic - 1/contracts/MTK.sol\":856:901  mapping(address => Stake[]) public userStakes */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basic - 1/contracts/MTK.sol\":1040:1088  mapping(StakingPeriod=>uint256) public durations */\n    tag_14:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":1959:2941  function stake(uint256 amount, StakingPeriod period) external {... */\n    tag_20:\n        /* \"Basic - 1/contracts/MTK.sol\":2056:2057  0 */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2049:2055  amount */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":2049:2057  amount>0 */\n      gt\n        /* \"Basic - 1/contracts/MTK.sol\":2041:2093  require(amount>0,\"amount must be greater than zero\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"Basic - 1/contracts/MTK.sol\":2112:2124  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basic - 1/contracts/MTK.sol\":2112:2137  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Basic - 1/contracts/MTK.sol\":2138:2148  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":2158:2162  this */\n      address\n        /* \"Basic - 1/contracts/MTK.sol\":2165:2171  amount */\n      dup6\n        /* \"Basic - 1/contracts/MTK.sol\":2112:2172  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"Basic - 1/contracts/MTK.sol\":2104:2192  require(stakingToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"Basic - 1/contracts/MTK.sol\":2205:2221  uint256 duration */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2222:2242  _getDuration(period) */\n      tag_56\n        /* \"Basic - 1/contracts/MTK.sol\":2235:2241  period */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":2222:2234  _getDuration */\n      tag_57\n        /* \"Basic - 1/contracts/MTK.sol\":2222:2242  _getDuration(period) */\n      jump\t// in\n    tag_56:\n        /* \"Basic - 1/contracts/MTK.sol\":2205:2242  uint256 duration=_getDuration(period) */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2267:2285  uint256 periodDays */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2286:2295  durations */\n      0x04\n        /* \"Basic - 1/contracts/MTK.sol\":2286:2303  durations[period] */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2296:2302  period */\n      dup5\n        /* \"Basic - 1/contracts/MTK.sol\":2286:2303  durations[period] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_58\n      jumpi\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_61\n      jumpi\n      tag_62\n      tag_60\n      jump\t// in\n    tag_62:\n    tag_61:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Basic - 1/contracts/MTK.sol\":2267:2303  uint256 periodDays=durations[period] */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2314:2326  uint256 rate */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2356:2359  360 */\n      0x0168\n        /* \"Basic - 1/contracts/MTK.sol\":2350:2355  1**18 */\n      0x01\n        /* \"Basic - 1/contracts/MTK.sol\":2339:2349  periodDays */\n      dup4\n        /* \"Basic - 1/contracts/MTK.sol\":2327:2330  apy */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2327:2338  apy[period] */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2331:2337  period */\n      dup9\n        /* \"Basic - 1/contracts/MTK.sol\":2327:2338  apy[period] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      tag_64\n      tag_60\n      jump\t// in\n    tag_64:\n    tag_63:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      tag_66\n      tag_60\n      jump\t// in\n    tag_66:\n    tag_65:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Basic - 1/contracts/MTK.sol\":2327:2349  apy[period]*periodDays */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"Basic - 1/contracts/MTK.sol\":2327:2355  apy[period]*periodDays*1**18 */\n      tag_69\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_69:\n        /* \"Basic - 1/contracts/MTK.sol\":2327:2359  apy[period]*periodDays*1**18/360 */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"Basic - 1/contracts/MTK.sol\":2314:2359  uint256 rate=apy[period]*periodDays*1**18/360 */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2370:2383  uint256 start */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2386:2401  block.timestamp */\n      timestamp\n        /* \"Basic - 1/contracts/MTK.sol\":2370:2401  uint256 start = block.timestamp */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2432:2443  uint256 end */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2454:2462  duration */\n      dup5\n        /* \"Basic - 1/contracts/MTK.sol\":2446:2451  start */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":2446:2462  start + duration */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"Basic - 1/contracts/MTK.sol\":2432:2462  uint256 end = start + duration */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2497:2518  Stake memory newStake */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Basic - 1/contracts/MTK.sol\":2554:2564  userStakes */\n      0x02\n        /* \"Basic - 1/contracts/MTK.sol\":2554:2576  userStakes[msg.sender] */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2565:2575  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":2554:2576  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Basic - 1/contracts/MTK.sol\":2554:2583  userStakes[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Basic - 1/contracts/MTK.sol\":2606:2612  amount */\n      dup10\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Basic - 1/contracts/MTK.sol\":2638:2643  start */\n      dup5\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Basic - 1/contracts/MTK.sol\":2667:2670  end */\n      dup4\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Basic - 1/contracts/MTK.sol\":2697:2701  rate */\n      dup6\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Basic - 1/contracts/MTK.sol\":2763:2767  true */\n      0x01\n        /* \"Basic - 1/contracts/MTK.sol\":2521:2804  Stake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2497:2804  Stake memory newStake = Stake({... */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2817:2827  userStakes */\n      0x02\n        /* \"Basic - 1/contracts/MTK.sol\":2817:2839  userStakes[msg.sender] */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":2828:2838  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":2817:2839  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Basic - 1/contracts/MTK.sol\":2845:2853  newStake */\n      dup2\n        /* \"Basic - 1/contracts/MTK.sol\":2817:2854  userStakes[msg.sender].push(newStake) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2901:2911  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":2894:2933  Staked(msg.sender, amount, period, end) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbde7f0ba1630d25515c7ab99ba47d5640b7ffb4c673b2a5464ae679195589298\n        /* \"Basic - 1/contracts/MTK.sol\":2913:2919  amount */\n      dup10\n        /* \"Basic - 1/contracts/MTK.sol\":2921:2927  period */\n      dup10\n        /* \"Basic - 1/contracts/MTK.sol\":2929:2932  end */\n      dup6\n        /* \"Basic - 1/contracts/MTK.sol\":2894:2933  Staked(msg.sender, amount, period, end) */\n      mload(0x40)\n      tag_75\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Basic - 1/contracts/MTK.sol\":2021:2941  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":1959:2941  function stake(uint256 amount, StakingPeriod period) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":296:340  mapping(StakingPeriod => uint256) public apy */\n    tag_23:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":3428:4130  function withdraw(uint256 stakeIndex) external {... */\n    tag_28:\n        /* \"Basic - 1/contracts/MTK.sol\":3505:3515  userStakes */\n      0x02\n        /* \"Basic - 1/contracts/MTK.sol\":3505:3527  userStakes[msg.sender] */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3516:3526  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":3505:3527  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Basic - 1/contracts/MTK.sol\":3505:3534  userStakes[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":3494:3504  stakeIndex */\n      dup2\n        /* \"Basic - 1/contracts/MTK.sol\":3494:3534  stakeIndex<userStakes[msg.sender].length */\n      lt\n        /* \"Basic - 1/contracts/MTK.sol\":3486:3557  require(stakeIndex<userStakes[msg.sender].length,\"Invalid stake index\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"Basic - 1/contracts/MTK.sol\":3568:3585  Stake storage stk */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3588:3598  userStakes */\n      0x02\n        /* \"Basic - 1/contracts/MTK.sol\":3588:3610  userStakes[msg.sender] */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3599:3609  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":3588:3610  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Basic - 1/contracts/MTK.sol\":3611:3621  stakeIndex */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":3588:3622  userStakes[msg.sender][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_81\n      jumpi\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n    tag_81:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"Basic - 1/contracts/MTK.sol\":3568:3622  Stake storage stk = userStakes[msg.sender][stakeIndex] */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":3641:3644  stk */\n      dup1\n        /* \"Basic - 1/contracts/MTK.sol\":3641:3653  stk.isActive */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Basic - 1/contracts/MTK.sol\":3633:3675  require(stk.isActive, \"stk is not active\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"Basic - 1/contracts/MTK.sol\":3746:3749  stk */\n      dup1\n        /* \"Basic - 1/contracts/MTK.sol\":3746:3757  stk.endTime */\n      0x03\n      add\n      sload\n        /* \"Basic - 1/contracts/MTK.sol\":3727:3742  block.timestamp */\n      timestamp\n        /* \"Basic - 1/contracts/MTK.sol\":3727:3757  block.timestamp >= stk.endTime */\n      lt\n      iszero\n        /* \"Basic - 1/contracts/MTK.sol\":3719:3788  require(block.timestamp >= stk.endTime, \"Staking period is not over\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Basic - 1/contracts/MTK.sol\":3812:3817  false */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3799:3802  stk */\n      dup2\n        /* \"Basic - 1/contracts/MTK.sol\":3799:3811  stk.isActive */\n      0x05\n      add\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3799:3817  stk.isActive=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":3838:3852  uint256 reward */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3890:3896  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Basic - 1/contracts/MTK.sol\":3886:3889  100 */\n      0x64\n        /* \"Basic - 1/contracts/MTK.sol\":3868:3871  stk */\n      dup4\n        /* \"Basic - 1/contracts/MTK.sol\":3868:3882  stk.rewardRate */\n      0x04\n      add\n      sload\n        /* \"Basic - 1/contracts/MTK.sol\":3855:3858  stk */\n      dup5\n        /* \"Basic - 1/contracts/MTK.sol\":3855:3865  stk.amount */\n      0x01\n      add\n      sload\n        /* \"Basic - 1/contracts/MTK.sol\":3855:3882  stk.amount * stk.rewardRate */\n      tag_91\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_91:\n        /* \"Basic - 1/contracts/MTK.sol\":3855:3889  stk.amount * stk.rewardRate  / 100 */\n      tag_92\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_92:\n        /* \"Basic - 1/contracts/MTK.sol\":3855:3896  stk.amount * stk.rewardRate  / 100/10**18 */\n      tag_93\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_93:\n        /* \"Basic - 1/contracts/MTK.sol\":3838:3896  uint256 reward = stk.amount * stk.rewardRate  / 100/10**18 */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":3907:3926  uint256 totalAmount */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3942:3948  reward */\n      dup2\n        /* \"Basic - 1/contracts/MTK.sol\":3929:3932  stk */\n      dup4\n        /* \"Basic - 1/contracts/MTK.sol\":3929:3939  stk.amount */\n      0x01\n      add\n      sload\n        /* \"Basic - 1/contracts/MTK.sol\":3929:3948  stk.amount + reward */\n      tag_94\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_94:\n        /* \"Basic - 1/contracts/MTK.sol\":3907:3948  uint256 totalAmount = stk.amount + reward */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":4014:4026  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basic - 1/contracts/MTK.sol\":4014:4035  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Basic - 1/contracts/MTK.sol\":4036:4046  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":4048:4059  totalAmount */\n      dup4\n        /* \"Basic - 1/contracts/MTK.sol\":4014:4060  stakingToken.transfer(msg.sender, totalAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_99:\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":4086:4096  msg.sender */\n      caller\n        /* \"Basic - 1/contracts/MTK.sol\":4076:4122  Withdrawn(msg.sender, totalAmount, stakeIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"Basic - 1/contracts/MTK.sol\":4098:4109  totalAmount */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":4111:4121  stakeIndex */\n      dup7\n        /* \"Basic - 1/contracts/MTK.sol\":4076:4122  Withdrawn(msg.sender, totalAmount, stakeIndex) */\n      mload(0x40)\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Basic - 1/contracts/MTK.sol\":3475:4130  {... */\n      pop\n      pop\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":3428:4130  function withdraw(uint256 stakeIndex) external {... */\n      pop\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":939:984  mapping(StakingPeriod => uint256) public aprs */\n    tag_31:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":817:844  IERC20 public  stakingToken */\n    tag_34:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":856:901  mapping(address => Stake[]) public userStakes */\n    tag_40:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"Basic - 1/contracts/MTK.sol\":2997:3398  function _getDuration(StakingPeriod period) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"Basic - 1/contracts/MTK.sol\":3064:3071  uint256 */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3095:3119  StakingPeriod.ThirtyDays */\n      0x00\n        /* \"Basic - 1/contracts/MTK.sol\":3087:3119  period==StakingPeriod.ThirtyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_105\n      jumpi\n      tag_106\n      tag_60\n      jump\t// in\n    tag_106:\n    tag_105:\n        /* \"Basic - 1/contracts/MTK.sol\":3087:3093  period */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":3087:3119  period==StakingPeriod.ThirtyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      tag_108\n      tag_60\n      jump\t// in\n    tag_108:\n    tag_107:\n      sub\n        /* \"Basic - 1/contracts/MTK.sol\":3084:3391  if(period==StakingPeriod.ThirtyDays){... */\n      tag_109\n      jumpi\n        /* \"Basic - 1/contracts/MTK.sol\":3143:3152  1 minutes */\n      0x3c\n        /* \"Basic - 1/contracts/MTK.sol\":3135:3152  return  1 minutes */\n      swap1\n      pop\n      jump(tag_104)\n        /* \"Basic - 1/contracts/MTK.sol\":3084:3391  if(period==StakingPeriod.ThirtyDays){... */\n    tag_109:\n        /* \"Basic - 1/contracts/MTK.sol\":3180:3204  StakingPeriod.NinetyDays */\n      0x01\n        /* \"Basic - 1/contracts/MTK.sol\":3172:3204  period==StakingPeriod.NinetyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_111\n      jumpi\n      tag_112\n      tag_60\n      jump\t// in\n    tag_112:\n    tag_111:\n        /* \"Basic - 1/contracts/MTK.sol\":3172:3178  period */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":3172:3204  period==StakingPeriod.NinetyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_113\n      jumpi\n      tag_114\n      tag_60\n      jump\t// in\n    tag_114:\n    tag_113:\n      sub\n        /* \"Basic - 1/contracts/MTK.sol\":3169:3391  if(period==StakingPeriod.NinetyDays){... */\n      tag_115\n      jumpi\n        /* \"Basic - 1/contracts/MTK.sol\":3228:3237  3 minutes */\n      0xb4\n        /* \"Basic - 1/contracts/MTK.sol\":3220:3237  return  3 minutes */\n      swap1\n      pop\n      jump(tag_104)\n        /* \"Basic - 1/contracts/MTK.sol\":3169:3391  if(period==StakingPeriod.NinetyDays){... */\n    tag_115:\n        /* \"Basic - 1/contracts/MTK.sol\":3265:3296  StakingPeriod.HundredEightyDays */\n      0x02\n        /* \"Basic - 1/contracts/MTK.sol\":3257:3296  period==StakingPeriod.HundredEightyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_117\n      jumpi\n      tag_118\n      tag_60\n      jump\t// in\n    tag_118:\n    tag_117:\n        /* \"Basic - 1/contracts/MTK.sol\":3257:3263  period */\n      dup3\n        /* \"Basic - 1/contracts/MTK.sol\":3257:3296  period==StakingPeriod.HundredEightyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      tag_120\n      tag_60\n      jump\t// in\n    tag_120:\n    tag_119:\n      sub\n        /* \"Basic - 1/contracts/MTK.sol\":3254:3391  if(period==StakingPeriod.HundredEightyDays){... */\n      tag_121\n      jumpi\n        /* \"Basic - 1/contracts/MTK.sol\":3320:3329  5 minutes */\n      0x012c\n        /* \"Basic - 1/contracts/MTK.sol\":3312:3329  return  5 minutes */\n      swap1\n      pop\n      jump(tag_104)\n        /* \"Basic - 1/contracts/MTK.sol\":3254:3391  if(period==StakingPeriod.HundredEightyDays){... */\n    tag_121:\n        /* \"Basic - 1/contracts/MTK.sol\":3369:3379  10 minutes */\n      0x0258\n        /* \"Basic - 1/contracts/MTK.sol\":3361:3379  return  10 minutes */\n      swap1\n      pop\n        /* \"Basic - 1/contracts/MTK.sol\":2997:3398  function _getDuration(StakingPeriod period) internal pure returns (uint256) {... */\n    tag_104:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_124:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:450   */\n    tag_126:\n        /* \"#utility.yul\":424:425   */\n      0x04\n        /* \"#utility.yul\":417:422   */\n      dup2\n        /* \"#utility.yul\":414:426   */\n      lt\n        /* \"#utility.yul\":404:444   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":437:438   */\n      0x00\n        /* \"#utility.yul\":430:442   */\n      revert\n        /* \"#utility.yul\":404:444   */\n    tag_168:\n        /* \"#utility.yul\":334:450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":456:629   */\n    tag_127:\n        /* \"#utility.yul\":519:524   */\n      0x00\n        /* \"#utility.yul\":557:563   */\n      dup2\n        /* \"#utility.yul\":544:564   */\n      calldataload\n        /* \"#utility.yul\":535:564   */\n      swap1\n      pop\n        /* \"#utility.yul\":573:623   */\n      tag_170\n        /* \"#utility.yul\":617:622   */\n      dup2\n        /* \"#utility.yul\":573:623   */\n      tag_126\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":456:629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:998   */\n    tag_13:\n        /* \"#utility.yul\":711:717   */\n      0x00\n        /* \"#utility.yul\":760:762   */\n      0x20\n        /* \"#utility.yul\":748:757   */\n      dup3\n        /* \"#utility.yul\":739:746   */\n      dup5\n        /* \"#utility.yul\":735:758   */\n      sub\n        /* \"#utility.yul\":731:763   */\n      slt\n        /* \"#utility.yul\":728:847   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":766:845   */\n      tag_173\n      tag_124\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":728:847   */\n    tag_172:\n        /* \"#utility.yul\":886:887   */\n      0x00\n        /* \"#utility.yul\":911:981   */\n      tag_174\n        /* \"#utility.yul\":973:980   */\n      dup5\n        /* \"#utility.yul\":964:970   */\n      dup3\n        /* \"#utility.yul\":953:962   */\n      dup6\n        /* \"#utility.yul\":949:971   */\n      add\n        /* \"#utility.yul\":911:981   */\n      tag_127\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":901:981   */\n      swap2\n      pop\n        /* \"#utility.yul\":857:991   */\n      pop\n        /* \"#utility.yul\":635:998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1004:1081   */\n    tag_128:\n        /* \"#utility.yul\":1041:1048   */\n      0x00\n        /* \"#utility.yul\":1070:1075   */\n      dup2\n        /* \"#utility.yul\":1059:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":1004:1081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1087:1205   */\n    tag_129:\n        /* \"#utility.yul\":1174:1198   */\n      tag_177\n        /* \"#utility.yul\":1192:1197   */\n      dup2\n        /* \"#utility.yul\":1174:1198   */\n      tag_128\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1169:1172   */\n      dup3\n        /* \"#utility.yul\":1162:1199   */\n      mstore\n        /* \"#utility.yul\":1087:1205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1433   */\n    tag_16:\n        /* \"#utility.yul\":1304:1308   */\n      0x00\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1331:1340   */\n      dup3\n        /* \"#utility.yul\":1327:1345   */\n      add\n        /* \"#utility.yul\":1319:1345   */\n      swap1\n      pop\n        /* \"#utility.yul\":1355:1426   */\n      tag_179\n        /* \"#utility.yul\":1423:1424   */\n      0x00\n        /* \"#utility.yul\":1412:1421   */\n      dup4\n        /* \"#utility.yul\":1408:1425   */\n      add\n        /* \"#utility.yul\":1399:1405   */\n      dup5\n        /* \"#utility.yul\":1355:1426   */\n      tag_129\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1211:1433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1561   */\n    tag_130:\n        /* \"#utility.yul\":1512:1536   */\n      tag_181\n        /* \"#utility.yul\":1530:1535   */\n      dup2\n        /* \"#utility.yul\":1512:1536   */\n      tag_128\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1505:1510   */\n      dup2\n        /* \"#utility.yul\":1502:1537   */\n      eq\n        /* \"#utility.yul\":1492:1555   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1551:1552   */\n      0x00\n        /* \"#utility.yul\":1548:1549   */\n      0x00\n        /* \"#utility.yul\":1541:1553   */\n      revert\n        /* \"#utility.yul\":1492:1555   */\n    tag_182:\n        /* \"#utility.yul\":1439:1561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1567:1706   */\n    tag_131:\n        /* \"#utility.yul\":1613:1618   */\n      0x00\n        /* \"#utility.yul\":1651:1657   */\n      dup2\n        /* \"#utility.yul\":1638:1658   */\n      calldataload\n        /* \"#utility.yul\":1629:1658   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1700   */\n      tag_184\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1667:1700   */\n      tag_130\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1567:1706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1712:2220   */\n    tag_19:\n        /* \"#utility.yul\":1797:1803   */\n      0x00\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1854:1856   */\n      0x40\n        /* \"#utility.yul\":1842:1851   */\n      dup4\n        /* \"#utility.yul\":1833:1840   */\n      dup6\n        /* \"#utility.yul\":1829:1852   */\n      sub\n        /* \"#utility.yul\":1825:1857   */\n      slt\n        /* \"#utility.yul\":1822:1941   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1860:1939   */\n      tag_187\n      tag_124\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1822:1941   */\n    tag_186:\n        /* \"#utility.yul\":1980:1981   */\n      0x00\n        /* \"#utility.yul\":2005:2058   */\n      tag_188\n        /* \"#utility.yul\":2050:2057   */\n      dup6\n        /* \"#utility.yul\":2041:2047   */\n      dup3\n        /* \"#utility.yul\":2030:2039   */\n      dup7\n        /* \"#utility.yul\":2026:2048   */\n      add\n        /* \"#utility.yul\":2005:2058   */\n      tag_131\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1995:2058   */\n      swap3\n      pop\n        /* \"#utility.yul\":1951:2068   */\n      pop\n        /* \"#utility.yul\":2107:2109   */\n      0x20\n        /* \"#utility.yul\":2133:2203   */\n      tag_189\n        /* \"#utility.yul\":2195:2202   */\n      dup6\n        /* \"#utility.yul\":2186:2192   */\n      dup3\n        /* \"#utility.yul\":2175:2184   */\n      dup7\n        /* \"#utility.yul\":2171:2193   */\n      add\n        /* \"#utility.yul\":2133:2203   */\n      tag_127\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2123:2203   */\n      swap2\n      pop\n        /* \"#utility.yul\":2078:2213   */\n      pop\n        /* \"#utility.yul\":1712:2220   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_27:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_192\n      tag_124\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2302:2421   */\n    tag_191:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_193\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_131\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_132:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2753   */\n    tag_133:\n        /* \"#utility.yul\":2721:2724   */\n      0x00\n        /* \"#utility.yul\":2742:2747   */\n      dup2\n        /* \"#utility.yul\":2735:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2901   */\n    tag_134:\n        /* \"#utility.yul\":2809:2818   */\n      0x00\n        /* \"#utility.yul\":2842:2895   */\n      tag_197\n        /* \"#utility.yul\":2860:2894   */\n      tag_198\n        /* \"#utility.yul\":2869:2893   */\n      tag_199\n        /* \"#utility.yul\":2887:2892   */\n      dup5\n        /* \"#utility.yul\":2869:2893   */\n      tag_132\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2860:2894   */\n      tag_133\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2842:2895   */\n      tag_132\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2829:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:2901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2907:3033   */\n    tag_135:\n        /* \"#utility.yul\":2957:2966   */\n      0x00\n        /* \"#utility.yul\":2990:3027   */\n      tag_201\n        /* \"#utility.yul\":3021:3026   */\n      dup3\n        /* \"#utility.yul\":2990:3027   */\n      tag_134\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2977:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2907:3033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3179   */\n    tag_136:\n        /* \"#utility.yul\":3103:3112   */\n      0x00\n        /* \"#utility.yul\":3136:3173   */\n      tag_203\n        /* \"#utility.yul\":3167:3172   */\n      dup3\n        /* \"#utility.yul\":3136:3173   */\n      tag_135\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3123:3173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3185:3344   */\n    tag_137:\n        /* \"#utility.yul\":3286:3337   */\n      tag_205\n        /* \"#utility.yul\":3331:3336   */\n      dup2\n        /* \"#utility.yul\":3286:3337   */\n      tag_136\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3281:3284   */\n      dup3\n        /* \"#utility.yul\":3274:3338   */\n      mstore\n        /* \"#utility.yul\":3185:3344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3600   */\n    tag_36:\n        /* \"#utility.yul\":3457:3461   */\n      0x00\n        /* \"#utility.yul\":3495:3497   */\n      0x20\n        /* \"#utility.yul\":3484:3493   */\n      dup3\n        /* \"#utility.yul\":3480:3498   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3508:3593   */\n      tag_207\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3579:3588   */\n      dup4\n        /* \"#utility.yul\":3575:3592   */\n      add\n        /* \"#utility.yul\":3566:3572   */\n      dup5\n        /* \"#utility.yul\":3508:3593   */\n      tag_137\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3350:3600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3606:3702   */\n    tag_138:\n        /* \"#utility.yul\":3643:3650   */\n      0x00\n        /* \"#utility.yul\":3672:3696   */\n      tag_209\n        /* \"#utility.yul\":3690:3695   */\n      dup3\n        /* \"#utility.yul\":3672:3696   */\n      tag_132\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3661:3696   */\n      swap1\n      pop\n        /* \"#utility.yul\":3606:3702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3830   */\n    tag_139:\n        /* \"#utility.yul\":3781:3805   */\n      tag_211\n        /* \"#utility.yul\":3799:3804   */\n      dup2\n        /* \"#utility.yul\":3781:3805   */\n      tag_138\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3774:3779   */\n      dup2\n        /* \"#utility.yul\":3771:3806   */\n      eq\n        /* \"#utility.yul\":3761:3824   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3820:3821   */\n      0x00\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3810:3822   */\n      revert\n        /* \"#utility.yul\":3761:3824   */\n    tag_212:\n        /* \"#utility.yul\":3708:3830   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3836:3975   */\n    tag_140:\n        /* \"#utility.yul\":3882:3887   */\n      0x00\n        /* \"#utility.yul\":3920:3926   */\n      dup2\n        /* \"#utility.yul\":3907:3927   */\n      calldataload\n        /* \"#utility.yul\":3898:3927   */\n      swap1\n      pop\n        /* \"#utility.yul\":3936:3969   */\n      tag_214\n        /* \"#utility.yul\":3963:3968   */\n      dup2\n        /* \"#utility.yul\":3936:3969   */\n      tag_139\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3836:3975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3981:4455   */\n    tag_39:\n        /* \"#utility.yul\":4049:4055   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      0x00\n        /* \"#utility.yul\":4106:4108   */\n      0x40\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4085:4092   */\n      dup6\n        /* \"#utility.yul\":4081:4104   */\n      sub\n        /* \"#utility.yul\":4077:4109   */\n      slt\n        /* \"#utility.yul\":4074:4193   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":4112:4191   */\n      tag_217\n      tag_124\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4074:4193   */\n    tag_216:\n        /* \"#utility.yul\":4232:4233   */\n      0x00\n        /* \"#utility.yul\":4257:4310   */\n      tag_218\n        /* \"#utility.yul\":4302:4309   */\n      dup6\n        /* \"#utility.yul\":4293:4299   */\n      dup3\n        /* \"#utility.yul\":4282:4291   */\n      dup7\n        /* \"#utility.yul\":4278:4300   */\n      add\n        /* \"#utility.yul\":4257:4310   */\n      tag_140\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4247:4310   */\n      swap3\n      pop\n        /* \"#utility.yul\":4203:4320   */\n      pop\n        /* \"#utility.yul\":4359:4361   */\n      0x20\n        /* \"#utility.yul\":4385:4438   */\n      tag_219\n        /* \"#utility.yul\":4430:4437   */\n      dup6\n        /* \"#utility.yul\":4421:4427   */\n      dup3\n        /* \"#utility.yul\":4410:4419   */\n      dup7\n        /* \"#utility.yul\":4406:4428   */\n      add\n        /* \"#utility.yul\":4385:4438   */\n      tag_131\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4375:4438   */\n      swap2\n      pop\n        /* \"#utility.yul\":4330:4448   */\n      pop\n        /* \"#utility.yul\":3981:4455   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4461:4551   */\n    tag_141:\n        /* \"#utility.yul\":4495:4502   */\n      0x00\n        /* \"#utility.yul\":4538:4543   */\n      dup2\n        /* \"#utility.yul\":4531:4544   */\n      iszero\n        /* \"#utility.yul\":4524:4545   */\n      iszero\n        /* \"#utility.yul\":4513:4545   */\n      swap1\n      pop\n        /* \"#utility.yul\":4461:4551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4557:4666   */\n    tag_142:\n        /* \"#utility.yul\":4638:4659   */\n      tag_222\n        /* \"#utility.yul\":4653:4658   */\n      dup2\n        /* \"#utility.yul\":4638:4659   */\n      tag_141\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4633:4636   */\n      dup3\n        /* \"#utility.yul\":4626:4660   */\n      mstore\n        /* \"#utility.yul\":4557:4666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:5435   */\n    tag_42:\n        /* \"#utility.yul\":4899:4903   */\n      0x00\n        /* \"#utility.yul\":4937:4940   */\n      0xc0\n        /* \"#utility.yul\":4926:4935   */\n      dup3\n        /* \"#utility.yul\":4922:4941   */\n      add\n        /* \"#utility.yul\":4914:4941   */\n      swap1\n      pop\n        /* \"#utility.yul\":4951:5022   */\n      tag_224\n        /* \"#utility.yul\":5019:5020   */\n      0x00\n        /* \"#utility.yul\":5008:5017   */\n      dup4\n        /* \"#utility.yul\":5004:5021   */\n      add\n        /* \"#utility.yul\":4995:5001   */\n      dup10\n        /* \"#utility.yul\":4951:5022   */\n      tag_129\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5032:5104   */\n      tag_225\n        /* \"#utility.yul\":5100:5102   */\n      0x20\n        /* \"#utility.yul\":5089:5098   */\n      dup4\n        /* \"#utility.yul\":5085:5103   */\n      add\n        /* \"#utility.yul\":5076:5082   */\n      dup9\n        /* \"#utility.yul\":5032:5104   */\n      tag_129\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5114:5186   */\n      tag_226\n        /* \"#utility.yul\":5182:5184   */\n      0x40\n        /* \"#utility.yul\":5171:5180   */\n      dup4\n        /* \"#utility.yul\":5167:5185   */\n      add\n        /* \"#utility.yul\":5158:5164   */\n      dup8\n        /* \"#utility.yul\":5114:5186   */\n      tag_129\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5196:5268   */\n      tag_227\n        /* \"#utility.yul\":5264:5266   */\n      0x60\n        /* \"#utility.yul\":5253:5262   */\n      dup4\n        /* \"#utility.yul\":5249:5267   */\n      add\n        /* \"#utility.yul\":5240:5246   */\n      dup7\n        /* \"#utility.yul\":5196:5268   */\n      tag_129\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5278:5351   */\n      tag_228\n        /* \"#utility.yul\":5346:5349   */\n      0x80\n        /* \"#utility.yul\":5335:5344   */\n      dup4\n        /* \"#utility.yul\":5331:5350   */\n      add\n        /* \"#utility.yul\":5322:5328   */\n      dup6\n        /* \"#utility.yul\":5278:5351   */\n      tag_129\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5361:5428   */\n      tag_229\n        /* \"#utility.yul\":5423:5426   */\n      0xa0\n        /* \"#utility.yul\":5412:5421   */\n      dup4\n        /* \"#utility.yul\":5408:5427   */\n      add\n        /* \"#utility.yul\":5399:5405   */\n      dup5\n        /* \"#utility.yul\":5361:5428   */\n      tag_142\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4672:5435   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5441:5610   */\n    tag_143:\n        /* \"#utility.yul\":5525:5536   */\n      0x00\n        /* \"#utility.yul\":5559:5565   */\n      dup3\n        /* \"#utility.yul\":5554:5557   */\n      dup3\n        /* \"#utility.yul\":5547:5566   */\n      mstore\n        /* \"#utility.yul\":5599:5603   */\n      0x20\n        /* \"#utility.yul\":5594:5597   */\n      dup3\n        /* \"#utility.yul\":5590:5604   */\n      add\n        /* \"#utility.yul\":5575:5604   */\n      swap1\n      pop\n        /* \"#utility.yul\":5441:5610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5616:5798   */\n    tag_144:\n        /* \"#utility.yul\":5756:5790   */\n      0x616d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5744:5750   */\n      dup3\n        /* \"#utility.yul\":5740:5754   */\n      add\n        /* \"#utility.yul\":5733:5791   */\n      mstore\n        /* \"#utility.yul\":5616:5798   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:6170   */\n    tag_145:\n        /* \"#utility.yul\":5946:5949   */\n      0x00\n        /* \"#utility.yul\":5967:6034   */\n      tag_233\n        /* \"#utility.yul\":6031:6033   */\n      0x20\n        /* \"#utility.yul\":6026:6029   */\n      dup4\n        /* \"#utility.yul\":5967:6034   */\n      tag_143\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5960:6034   */\n      swap2\n      pop\n        /* \"#utility.yul\":6043:6136   */\n      tag_234\n        /* \"#utility.yul\":6132:6135   */\n      dup3\n        /* \"#utility.yul\":6043:6136   */\n      tag_144\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6161:6163   */\n      0x20\n        /* \"#utility.yul\":6156:6159   */\n      dup3\n        /* \"#utility.yul\":6152:6164   */\n      add\n        /* \"#utility.yul\":6145:6164   */\n      swap1\n      pop\n        /* \"#utility.yul\":5804:6170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6176:6595   */\n    tag_46:\n        /* \"#utility.yul\":6342:6346   */\n      0x00\n        /* \"#utility.yul\":6380:6382   */\n      0x20\n        /* \"#utility.yul\":6369:6378   */\n      dup3\n        /* \"#utility.yul\":6365:6383   */\n      add\n        /* \"#utility.yul\":6357:6383   */\n      swap1\n      pop\n        /* \"#utility.yul\":6429:6438   */\n      dup2\n        /* \"#utility.yul\":6423:6427   */\n      dup2\n        /* \"#utility.yul\":6419:6439   */\n      sub\n        /* \"#utility.yul\":6415:6416   */\n      0x00\n        /* \"#utility.yul\":6404:6413   */\n      dup4\n        /* \"#utility.yul\":6400:6417   */\n      add\n        /* \"#utility.yul\":6393:6440   */\n      mstore\n        /* \"#utility.yul\":6457:6588   */\n      tag_236\n        /* \"#utility.yul\":6583:6587   */\n      dup2\n        /* \"#utility.yul\":6457:6588   */\n      tag_145\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6449:6588   */\n      swap1\n      pop\n        /* \"#utility.yul\":6176:6595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6719   */\n    tag_146:\n        /* \"#utility.yul\":6688:6712   */\n      tag_238\n        /* \"#utility.yul\":6706:6711   */\n      dup2\n        /* \"#utility.yul\":6688:6712   */\n      tag_138\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6683:6686   */\n      dup3\n        /* \"#utility.yul\":6676:6713   */\n      mstore\n        /* \"#utility.yul\":6601:6719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6725:7167   */\n    tag_48:\n        /* \"#utility.yul\":6874:6878   */\n      0x00\n        /* \"#utility.yul\":6912:6914   */\n      0x60\n        /* \"#utility.yul\":6901:6910   */\n      dup3\n        /* \"#utility.yul\":6897:6915   */\n      add\n        /* \"#utility.yul\":6889:6915   */\n      swap1\n      pop\n        /* \"#utility.yul\":6925:6996   */\n      tag_240\n        /* \"#utility.yul\":6993:6994   */\n      0x00\n        /* \"#utility.yul\":6982:6991   */\n      dup4\n        /* \"#utility.yul\":6978:6995   */\n      add\n        /* \"#utility.yul\":6969:6975   */\n      dup7\n        /* \"#utility.yul\":6925:6996   */\n      tag_146\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7006:7078   */\n      tag_241\n        /* \"#utility.yul\":7074:7076   */\n      0x20\n        /* \"#utility.yul\":7063:7072   */\n      dup4\n        /* \"#utility.yul\":7059:7077   */\n      add\n        /* \"#utility.yul\":7050:7056   */\n      dup6\n        /* \"#utility.yul\":7006:7078   */\n      tag_146\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7088:7160   */\n      tag_242\n        /* \"#utility.yul\":7156:7158   */\n      0x40\n        /* \"#utility.yul\":7145:7154   */\n      dup4\n        /* \"#utility.yul\":7141:7159   */\n      add\n        /* \"#utility.yul\":7132:7138   */\n      dup5\n        /* \"#utility.yul\":7088:7160   */\n      tag_129\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6725:7167   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7173:7289   */\n    tag_147:\n        /* \"#utility.yul\":7243:7264   */\n      tag_244\n        /* \"#utility.yul\":7258:7263   */\n      dup2\n        /* \"#utility.yul\":7243:7264   */\n      tag_141\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7236:7241   */\n      dup2\n        /* \"#utility.yul\":7233:7265   */\n      eq\n        /* \"#utility.yul\":7223:7283   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7279:7280   */\n      0x00\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7281   */\n      revert\n        /* \"#utility.yul\":7223:7283   */\n    tag_245:\n        /* \"#utility.yul\":7173:7289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7295:7432   */\n    tag_148:\n        /* \"#utility.yul\":7349:7354   */\n      0x00\n        /* \"#utility.yul\":7380:7386   */\n      dup2\n        /* \"#utility.yul\":7374:7387   */\n      mload\n        /* \"#utility.yul\":7365:7387   */\n      swap1\n      pop\n        /* \"#utility.yul\":7396:7426   */\n      tag_247\n        /* \"#utility.yul\":7420:7425   */\n      dup2\n        /* \"#utility.yul\":7396:7426   */\n      tag_147\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7295:7432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7438:7783   */\n    tag_52:\n        /* \"#utility.yul\":7505:7511   */\n      0x00\n        /* \"#utility.yul\":7554:7556   */\n      0x20\n        /* \"#utility.yul\":7542:7551   */\n      dup3\n        /* \"#utility.yul\":7533:7540   */\n      dup5\n        /* \"#utility.yul\":7529:7552   */\n      sub\n        /* \"#utility.yul\":7525:7557   */\n      slt\n        /* \"#utility.yul\":7522:7641   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":7560:7639   */\n      tag_250\n      tag_124\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7522:7641   */\n    tag_249:\n        /* \"#utility.yul\":7680:7681   */\n      0x00\n        /* \"#utility.yul\":7705:7766   */\n      tag_251\n        /* \"#utility.yul\":7758:7765   */\n      dup5\n        /* \"#utility.yul\":7749:7755   */\n      dup3\n        /* \"#utility.yul\":7738:7747   */\n      dup6\n        /* \"#utility.yul\":7734:7756   */\n      add\n        /* \"#utility.yul\":7705:7766   */\n      tag_148\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7695:7766   */\n      swap2\n      pop\n        /* \"#utility.yul\":7651:7776   */\n      pop\n        /* \"#utility.yul\":7438:7783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7789:7954   */\n    tag_149:\n        /* \"#utility.yul\":7929:7946   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":7925:7926   */\n      0x00\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7913:7927   */\n      add\n        /* \"#utility.yul\":7906:7947   */\n      mstore\n        /* \"#utility.yul\":7789:7954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7960:8326   */\n    tag_150:\n        /* \"#utility.yul\":8102:8105   */\n      0x00\n        /* \"#utility.yul\":8123:8190   */\n      tag_254\n        /* \"#utility.yul\":8187:8189   */\n      0x0f\n        /* \"#utility.yul\":8182:8185   */\n      dup4\n        /* \"#utility.yul\":8123:8190   */\n      tag_143\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8116:8190   */\n      swap2\n      pop\n        /* \"#utility.yul\":8199:8292   */\n      tag_255\n        /* \"#utility.yul\":8288:8291   */\n      dup3\n        /* \"#utility.yul\":8199:8292   */\n      tag_149\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8317:8319   */\n      0x20\n        /* \"#utility.yul\":8312:8315   */\n      dup3\n        /* \"#utility.yul\":8308:8320   */\n      add\n        /* \"#utility.yul\":8301:8320   */\n      swap1\n      pop\n        /* \"#utility.yul\":7960:8326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8332:8751   */\n    tag_55:\n        /* \"#utility.yul\":8498:8502   */\n      0x00\n        /* \"#utility.yul\":8536:8538   */\n      0x20\n        /* \"#utility.yul\":8525:8534   */\n      dup3\n        /* \"#utility.yul\":8521:8539   */\n      add\n        /* \"#utility.yul\":8513:8539   */\n      swap1\n      pop\n        /* \"#utility.yul\":8585:8594   */\n      dup2\n        /* \"#utility.yul\":8579:8583   */\n      dup2\n        /* \"#utility.yul\":8575:8595   */\n      sub\n        /* \"#utility.yul\":8571:8572   */\n      0x00\n        /* \"#utility.yul\":8560:8569   */\n      dup4\n        /* \"#utility.yul\":8556:8573   */\n      add\n        /* \"#utility.yul\":8549:8596   */\n      mstore\n        /* \"#utility.yul\":8613:8744   */\n      tag_257\n        /* \"#utility.yul\":8739:8743   */\n      dup2\n        /* \"#utility.yul\":8613:8744   */\n      tag_150\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8605:8744   */\n      swap1\n      pop\n        /* \"#utility.yul\":8332:8751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:8937   */\n    tag_60:\n        /* \"#utility.yul\":8805:8882   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8802:8803   */\n      0x00\n        /* \"#utility.yul\":8795:8883   */\n      mstore\n        /* \"#utility.yul\":8902:8906   */\n      0x21\n        /* \"#utility.yul\":8899:8900   */\n      0x04\n        /* \"#utility.yul\":8892:8907   */\n      mstore\n        /* \"#utility.yul\":8926:8930   */\n      0x24\n        /* \"#utility.yul\":8923:8924   */\n      0x00\n        /* \"#utility.yul\":8916:8931   */\n      revert\n        /* \"#utility.yul\":8943:9123   */\n    tag_151:\n        /* \"#utility.yul\":8991:9068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8988:8989   */\n      0x00\n        /* \"#utility.yul\":8981:9069   */\n      mstore\n        /* \"#utility.yul\":9088:9092   */\n      0x11\n        /* \"#utility.yul\":9085:9086   */\n      0x04\n        /* \"#utility.yul\":9078:9093   */\n      mstore\n        /* \"#utility.yul\":9112:9116   */\n      0x24\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9102:9117   */\n      revert\n        /* \"#utility.yul\":9129:9539   */\n    tag_68:\n        /* \"#utility.yul\":9169:9176   */\n      0x00\n        /* \"#utility.yul\":9192:9212   */\n      tag_261\n        /* \"#utility.yul\":9210:9211   */\n      dup3\n        /* \"#utility.yul\":9192:9212   */\n      tag_128\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9187:9212   */\n      swap2\n      pop\n        /* \"#utility.yul\":9226:9246   */\n      tag_262\n        /* \"#utility.yul\":9244:9245   */\n      dup4\n        /* \"#utility.yul\":9226:9246   */\n      tag_128\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9221:9246   */\n      swap3\n      pop\n        /* \"#utility.yul\":9281:9282   */\n      dup3\n        /* \"#utility.yul\":9278:9279   */\n      dup3\n        /* \"#utility.yul\":9274:9283   */\n      mul\n        /* \"#utility.yul\":9303:9333   */\n      tag_263\n        /* \"#utility.yul\":9321:9332   */\n      dup2\n        /* \"#utility.yul\":9303:9333   */\n      tag_128\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9292:9333   */\n      swap2\n      pop\n        /* \"#utility.yul\":9482:9483   */\n      dup3\n        /* \"#utility.yul\":9473:9480   */\n      dup3\n        /* \"#utility.yul\":9469:9484   */\n      div\n        /* \"#utility.yul\":9466:9467   */\n      dup5\n        /* \"#utility.yul\":9463:9485   */\n      eq\n        /* \"#utility.yul\":9443:9444   */\n      dup4\n        /* \"#utility.yul\":9436:9445   */\n      iszero\n        /* \"#utility.yul\":9416:9499   */\n      or\n        /* \"#utility.yul\":9393:9532   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9512:9530   */\n      tag_265\n      tag_151\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9393:9532   */\n    tag_264:\n        /* \"#utility.yul\":9177:9539   */\n      pop\n        /* \"#utility.yul\":9129:9539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9545:9725   */\n    tag_152:\n        /* \"#utility.yul\":9593:9670   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9590:9591   */\n      0x00\n        /* \"#utility.yul\":9583:9671   */\n      mstore\n        /* \"#utility.yul\":9690:9694   */\n      0x12\n        /* \"#utility.yul\":9687:9688   */\n      0x04\n        /* \"#utility.yul\":9680:9695   */\n      mstore\n        /* \"#utility.yul\":9714:9718   */\n      0x24\n        /* \"#utility.yul\":9711:9712   */\n      0x00\n        /* \"#utility.yul\":9704:9719   */\n      revert\n        /* \"#utility.yul\":9731:9916   */\n    tag_71:\n        /* \"#utility.yul\":9771:9772   */\n      0x00\n        /* \"#utility.yul\":9788:9808   */\n      tag_268\n        /* \"#utility.yul\":9806:9807   */\n      dup3\n        /* \"#utility.yul\":9788:9808   */\n      tag_128\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9783:9808   */\n      swap2\n      pop\n        /* \"#utility.yul\":9822:9842   */\n      tag_269\n        /* \"#utility.yul\":9840:9841   */\n      dup4\n        /* \"#utility.yul\":9822:9842   */\n      tag_128\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9817:9842   */\n      swap3\n      pop\n        /* \"#utility.yul\":9861:9862   */\n      dup3\n        /* \"#utility.yul\":9851:9886   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":9866:9884   */\n      tag_271\n      tag_152\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9851:9886   */\n    tag_270:\n        /* \"#utility.yul\":9908:9909   */\n      dup3\n        /* \"#utility.yul\":9905:9906   */\n      dup3\n        /* \"#utility.yul\":9901:9910   */\n      div\n        /* \"#utility.yul\":9896:9910   */\n      swap1\n      pop\n        /* \"#utility.yul\":9731:9916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9922:10113   */\n    tag_73:\n        /* \"#utility.yul\":9962:9965   */\n      0x00\n        /* \"#utility.yul\":9981:10001   */\n      tag_273\n        /* \"#utility.yul\":9999:10000   */\n      dup3\n        /* \"#utility.yul\":9981:10001   */\n      tag_128\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9976:10001   */\n      swap2\n      pop\n        /* \"#utility.yul\":10015:10035   */\n      tag_274\n        /* \"#utility.yul\":10033:10034   */\n      dup4\n        /* \"#utility.yul\":10015:10035   */\n      tag_128\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10010:10035   */\n      swap3\n      pop\n        /* \"#utility.yul\":10058:10059   */\n      dup3\n        /* \"#utility.yul\":10055:10056   */\n      dup3\n        /* \"#utility.yul\":10051:10060   */\n      add\n        /* \"#utility.yul\":10044:10060   */\n      swap1\n      pop\n        /* \"#utility.yul\":10079:10082   */\n      dup1\n        /* \"#utility.yul\":10076:10077   */\n      dup3\n        /* \"#utility.yul\":10073:10083   */\n      gt\n        /* \"#utility.yul\":10070:10106   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":10086:10104   */\n      tag_276\n      tag_151\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10070:10106   */\n    tag_275:\n        /* \"#utility.yul\":9922:10113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10119:10241   */\n    tag_153:\n        /* \"#utility.yul\":10209:10210   */\n      0x04\n        /* \"#utility.yul\":10202:10207   */\n      dup2\n        /* \"#utility.yul\":10199:10211   */\n      lt\n        /* \"#utility.yul\":10189:10235   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":10215:10233   */\n      tag_279\n      tag_60\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10189:10235   */\n    tag_278:\n        /* \"#utility.yul\":10119:10241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10247:10392   */\n    tag_154:\n        /* \"#utility.yul\":10301:10308   */\n      0x00\n        /* \"#utility.yul\":10330:10335   */\n      dup2\n        /* \"#utility.yul\":10319:10335   */\n      swap1\n      pop\n        /* \"#utility.yul\":10336:10386   */\n      tag_281\n        /* \"#utility.yul\":10380:10385   */\n      dup3\n        /* \"#utility.yul\":10336:10386   */\n      tag_153\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10247:10392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10398:10543   */\n    tag_155:\n        /* \"#utility.yul\":10463:10472   */\n      0x00\n        /* \"#utility.yul\":10496:10537   */\n      tag_283\n        /* \"#utility.yul\":10531:10536   */\n      dup3\n        /* \"#utility.yul\":10496:10537   */\n      tag_154\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10483:10537   */\n      swap1\n      pop\n        /* \"#utility.yul\":10398:10543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10549:10710   */\n    tag_156:\n        /* \"#utility.yul\":10651:10703   */\n      tag_285\n        /* \"#utility.yul\":10697:10702   */\n      dup2\n        /* \"#utility.yul\":10651:10703   */\n      tag_155\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10646:10649   */\n      dup3\n        /* \"#utility.yul\":10639:10704   */\n      mstore\n        /* \"#utility.yul\":10549:10710   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10716:11188   */\n    tag_76:\n        /* \"#utility.yul\":10880:10884   */\n      0x00\n        /* \"#utility.yul\":10918:10920   */\n      0x60\n        /* \"#utility.yul\":10907:10916   */\n      dup3\n        /* \"#utility.yul\":10903:10921   */\n      add\n        /* \"#utility.yul\":10895:10921   */\n      swap1\n      pop\n        /* \"#utility.yul\":10931:11002   */\n      tag_287\n        /* \"#utility.yul\":10999:11000   */\n      0x00\n        /* \"#utility.yul\":10988:10997   */\n      dup4\n        /* \"#utility.yul\":10984:11001   */\n      add\n        /* \"#utility.yul\":10975:10981   */\n      dup7\n        /* \"#utility.yul\":10931:11002   */\n      tag_129\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11012:11099   */\n      tag_288\n        /* \"#utility.yul\":11095:11097   */\n      0x20\n        /* \"#utility.yul\":11084:11093   */\n      dup4\n        /* \"#utility.yul\":11080:11098   */\n      add\n        /* \"#utility.yul\":11071:11077   */\n      dup6\n        /* \"#utility.yul\":11012:11099   */\n      tag_156\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11109:11181   */\n      tag_289\n        /* \"#utility.yul\":11177:11179   */\n      0x40\n        /* \"#utility.yul\":11166:11175   */\n      dup4\n        /* \"#utility.yul\":11162:11180   */\n      add\n        /* \"#utility.yul\":11153:11159   */\n      dup5\n        /* \"#utility.yul\":11109:11181   */\n      tag_129\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10716:11188   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11194:11363   */\n    tag_157:\n        /* \"#utility.yul\":11334:11355   */\n      0x496e76616c6964207374616b6520696e64657800000000000000000000000000\n        /* \"#utility.yul\":11330:11331   */\n      0x00\n        /* \"#utility.yul\":11322:11328   */\n      dup3\n        /* \"#utility.yul\":11318:11332   */\n      add\n        /* \"#utility.yul\":11311:11356   */\n      mstore\n        /* \"#utility.yul\":11194:11363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11369:11735   */\n    tag_158:\n        /* \"#utility.yul\":11511:11514   */\n      0x00\n        /* \"#utility.yul\":11532:11599   */\n      tag_292\n        /* \"#utility.yul\":11596:11598   */\n      0x13\n        /* \"#utility.yul\":11591:11594   */\n      dup4\n        /* \"#utility.yul\":11532:11599   */\n      tag_143\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11525:11599   */\n      swap2\n      pop\n        /* \"#utility.yul\":11608:11701   */\n      tag_293\n        /* \"#utility.yul\":11697:11700   */\n      dup3\n        /* \"#utility.yul\":11608:11701   */\n      tag_157\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":11726:11728   */\n      0x20\n        /* \"#utility.yul\":11721:11724   */\n      dup3\n        /* \"#utility.yul\":11717:11729   */\n      add\n        /* \"#utility.yul\":11710:11729   */\n      swap1\n      pop\n        /* \"#utility.yul\":11369:11735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11741:12160   */\n    tag_80:\n        /* \"#utility.yul\":11907:11911   */\n      0x00\n        /* \"#utility.yul\":11945:11947   */\n      0x20\n        /* \"#utility.yul\":11934:11943   */\n      dup3\n        /* \"#utility.yul\":11930:11948   */\n      add\n        /* \"#utility.yul\":11922:11948   */\n      swap1\n      pop\n        /* \"#utility.yul\":11994:12003   */\n      dup2\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11984:12004   */\n      sub\n        /* \"#utility.yul\":11980:11981   */\n      0x00\n        /* \"#utility.yul\":11969:11978   */\n      dup4\n        /* \"#utility.yul\":11965:11982   */\n      add\n        /* \"#utility.yul\":11958:12005   */\n      mstore\n        /* \"#utility.yul\":12022:12153   */\n      tag_295\n        /* \"#utility.yul\":12148:12152   */\n      dup2\n        /* \"#utility.yul\":12022:12153   */\n      tag_158\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":12014:12153   */\n      swap1\n      pop\n        /* \"#utility.yul\":11741:12160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12166:12346   */\n    tag_83:\n        /* \"#utility.yul\":12214:12291   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12211:12212   */\n      0x00\n        /* \"#utility.yul\":12204:12292   */\n      mstore\n        /* \"#utility.yul\":12311:12315   */\n      0x32\n        /* \"#utility.yul\":12308:12309   */\n      0x04\n        /* \"#utility.yul\":12301:12316   */\n      mstore\n        /* \"#utility.yul\":12335:12339   */\n      0x24\n        /* \"#utility.yul\":12332:12333   */\n      0x00\n        /* \"#utility.yul\":12325:12340   */\n      revert\n        /* \"#utility.yul\":12352:12519   */\n    tag_159:\n        /* \"#utility.yul\":12492:12511   */\n      0x73746b206973206e6f7420616374697665000000000000000000000000000000\n        /* \"#utility.yul\":12488:12489   */\n      0x00\n        /* \"#utility.yul\":12480:12486   */\n      dup3\n        /* \"#utility.yul\":12476:12490   */\n      add\n        /* \"#utility.yul\":12469:12512   */\n      mstore\n        /* \"#utility.yul\":12352:12519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12525:12891   */\n    tag_160:\n        /* \"#utility.yul\":12667:12670   */\n      0x00\n        /* \"#utility.yul\":12688:12755   */\n      tag_299\n        /* \"#utility.yul\":12752:12754   */\n      0x11\n        /* \"#utility.yul\":12747:12750   */\n      dup4\n        /* \"#utility.yul\":12688:12755   */\n      tag_143\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":12681:12755   */\n      swap2\n      pop\n        /* \"#utility.yul\":12764:12857   */\n      tag_300\n        /* \"#utility.yul\":12853:12856   */\n      dup3\n        /* \"#utility.yul\":12764:12857   */\n      tag_159\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12882:12884   */\n      0x20\n        /* \"#utility.yul\":12877:12880   */\n      dup3\n        /* \"#utility.yul\":12873:12885   */\n      add\n        /* \"#utility.yul\":12866:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12525:12891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12897:13316   */\n    tag_87:\n        /* \"#utility.yul\":13063:13067   */\n      0x00\n        /* \"#utility.yul\":13101:13103   */\n      0x20\n        /* \"#utility.yul\":13090:13099   */\n      dup3\n        /* \"#utility.yul\":13086:13104   */\n      add\n        /* \"#utility.yul\":13078:13104   */\n      swap1\n      pop\n        /* \"#utility.yul\":13150:13159   */\n      dup2\n        /* \"#utility.yul\":13144:13148   */\n      dup2\n        /* \"#utility.yul\":13140:13160   */\n      sub\n        /* \"#utility.yul\":13136:13137   */\n      0x00\n        /* \"#utility.yul\":13125:13134   */\n      dup4\n        /* \"#utility.yul\":13121:13138   */\n      add\n        /* \"#utility.yul\":13114:13161   */\n      mstore\n        /* \"#utility.yul\":13178:13309   */\n      tag_302\n        /* \"#utility.yul\":13304:13308   */\n      dup2\n        /* \"#utility.yul\":13178:13309   */\n      tag_160\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":13170:13309   */\n      swap1\n      pop\n        /* \"#utility.yul\":12897:13316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13322:13498   */\n    tag_161:\n        /* \"#utility.yul\":13462:13490   */\n      0x5374616b696e6720706572696f64206973206e6f74206f766572000000000000\n        /* \"#utility.yul\":13458:13459   */\n      0x00\n        /* \"#utility.yul\":13450:13456   */\n      dup3\n        /* \"#utility.yul\":13446:13460   */\n      add\n        /* \"#utility.yul\":13439:13491   */\n      mstore\n        /* \"#utility.yul\":13322:13498   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13504:13870   */\n    tag_162:\n        /* \"#utility.yul\":13646:13649   */\n      0x00\n        /* \"#utility.yul\":13667:13734   */\n      tag_305\n        /* \"#utility.yul\":13731:13733   */\n      0x1a\n        /* \"#utility.yul\":13726:13729   */\n      dup4\n        /* \"#utility.yul\":13667:13734   */\n      tag_143\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13660:13734   */\n      swap2\n      pop\n        /* \"#utility.yul\":13743:13836   */\n      tag_306\n        /* \"#utility.yul\":13832:13835   */\n      dup3\n        /* \"#utility.yul\":13743:13836   */\n      tag_161\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13861:13863   */\n      0x20\n        /* \"#utility.yul\":13856:13859   */\n      dup3\n        /* \"#utility.yul\":13852:13864   */\n      add\n        /* \"#utility.yul\":13845:13864   */\n      swap1\n      pop\n        /* \"#utility.yul\":13504:13870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13876:14295   */\n    tag_90:\n        /* \"#utility.yul\":14042:14046   */\n      0x00\n        /* \"#utility.yul\":14080:14082   */\n      0x20\n        /* \"#utility.yul\":14069:14078   */\n      dup3\n        /* \"#utility.yul\":14065:14083   */\n      add\n        /* \"#utility.yul\":14057:14083   */\n      swap1\n      pop\n        /* \"#utility.yul\":14129:14138   */\n      dup2\n        /* \"#utility.yul\":14123:14127   */\n      dup2\n        /* \"#utility.yul\":14119:14139   */\n      sub\n        /* \"#utility.yul\":14115:14116   */\n      0x00\n        /* \"#utility.yul\":14104:14113   */\n      dup4\n        /* \"#utility.yul\":14100:14117   */\n      add\n        /* \"#utility.yul\":14093:14140   */\n      mstore\n        /* \"#utility.yul\":14157:14288   */\n      tag_308\n        /* \"#utility.yul\":14283:14287   */\n      dup2\n        /* \"#utility.yul\":14157:14288   */\n      tag_162\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14149:14288   */\n      swap1\n      pop\n        /* \"#utility.yul\":13876:14295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14301:14633   */\n    tag_96:\n        /* \"#utility.yul\":14422:14426   */\n      0x00\n        /* \"#utility.yul\":14460:14462   */\n      0x40\n        /* \"#utility.yul\":14449:14458   */\n      dup3\n        /* \"#utility.yul\":14445:14463   */\n      add\n        /* \"#utility.yul\":14437:14463   */\n      swap1\n      pop\n        /* \"#utility.yul\":14473:14544   */\n      tag_310\n        /* \"#utility.yul\":14541:14542   */\n      0x00\n        /* \"#utility.yul\":14530:14539   */\n      dup4\n        /* \"#utility.yul\":14526:14543   */\n      add\n        /* \"#utility.yul\":14517:14523   */\n      dup6\n        /* \"#utility.yul\":14473:14544   */\n      tag_146\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":14554:14626   */\n      tag_311\n        /* \"#utility.yul\":14622:14624   */\n      0x20\n        /* \"#utility.yul\":14611:14620   */\n      dup4\n        /* \"#utility.yul\":14607:14625   */\n      add\n        /* \"#utility.yul\":14598:14604   */\n      dup5\n        /* \"#utility.yul\":14554:14626   */\n      tag_129\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":14301:14633   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14639:14971   */\n    tag_101:\n        /* \"#utility.yul\":14760:14764   */\n      0x00\n        /* \"#utility.yul\":14798:14800   */\n      0x40\n        /* \"#utility.yul\":14787:14796   */\n      dup3\n        /* \"#utility.yul\":14783:14801   */\n      add\n        /* \"#utility.yul\":14775:14801   */\n      swap1\n      pop\n        /* \"#utility.yul\":14811:14882   */\n      tag_313\n        /* \"#utility.yul\":14879:14880   */\n      0x00\n        /* \"#utility.yul\":14868:14877   */\n      dup4\n        /* \"#utility.yul\":14864:14881   */\n      add\n        /* \"#utility.yul\":14855:14861   */\n      dup6\n        /* \"#utility.yul\":14811:14882   */\n      tag_129\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":14892:14964   */\n      tag_314\n        /* \"#utility.yul\":14960:14962   */\n      0x20\n        /* \"#utility.yul\":14949:14958   */\n      dup4\n        /* \"#utility.yul\":14945:14963   */\n      add\n        /* \"#utility.yul\":14936:14942   */\n      dup5\n        /* \"#utility.yul\":14892:14964   */\n      tag_129\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":14639:14971   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205d14b7c33087a95e8c5375275840b1677c9f6df2d92e100f6fe407a18426e51764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$877_fromMemory": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$877_fromMemory": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$877": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$877": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1585:7",
										"nodeType": "YulBlock",
										"src": "0:1585:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "627:51:7",
													"nodeType": "YulBlock",
													"src": "627:51:7",
													"statements": [
														{
															"nativeSrc": "637:35:7",
															"nodeType": "YulAssignment",
															"src": "637:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:7"
																},
																"nativeSrc": "648:24:7",
																"nodeType": "YulFunctionCall",
																"src": "648:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$877",
												"nativeSrc": "568:110:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:7",
														"nodeType": "YulTypedName",
														"src": "609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:7",
														"nodeType": "YulTypedName",
														"src": "619:7:7",
														"type": ""
													}
												],
												"src": "568:110:7"
											},
											{
												"body": {
													"nativeSrc": "741:93:7",
													"nodeType": "YulBlock",
													"src": "741:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:7",
																"nodeType": "YulBlock",
																"src": "812:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:7",
																					"nodeType": "YulLiteral",
																					"src": "824:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:7"
																			},
																			"nativeSrc": "814:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:7"
																		},
																		"nativeSrc": "814:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$877",
																					"nativeSrc": "771:31:7",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:7"
																				},
																				"nativeSrc": "771:38:7",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:7"
																		},
																		"nativeSrc": "761:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:7"
																},
																"nativeSrc": "754:57:7",
																"nodeType": "YulFunctionCall",
																"src": "754:57:7"
															},
															"nativeSrc": "751:77:7",
															"nodeType": "YulIf",
															"src": "751:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$877",
												"nativeSrc": "684:150:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:7",
														"nodeType": "YulTypedName",
														"src": "734:5:7",
														"type": ""
													}
												],
												"src": "684:150:7"
											},
											{
												"body": {
													"nativeSrc": "917:94:7",
													"nodeType": "YulBlock",
													"src": "917:94:7",
													"statements": [
														{
															"nativeSrc": "927:22:7",
															"nodeType": "YulAssignment",
															"src": "927:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:7"
																},
																"nativeSrc": "936:13:7",
																"nodeType": "YulFunctionCall",
																"src": "936:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$877",
																	"nativeSrc": "958:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:7"
																},
																"nativeSrc": "958:47:7",
																"nodeType": "YulFunctionCall",
																"src": "958:47:7"
															},
															"nativeSrc": "958:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$877_fromMemory",
												"nativeSrc": "840:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:7",
														"nodeType": "YulTypedName",
														"src": "895:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:7",
														"nodeType": "YulTypedName",
														"src": "903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:7",
														"nodeType": "YulTypedName",
														"src": "911:5:7",
														"type": ""
													}
												],
												"src": "840:171:7"
											},
											{
												"body": {
													"nativeSrc": "1108:288:7",
													"nodeType": "YulBlock",
													"src": "1108:288:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:7",
																"nodeType": "YulBlock",
																"src": "1154:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:7"
																			},
																			"nativeSrc": "1156:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:7"
																		},
																		"nativeSrc": "1156:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:7"
																		},
																		"nativeSrc": "1125:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:7"
																},
																"nativeSrc": "1121:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:7"
															},
															"nativeSrc": "1118:119:7",
															"nodeType": "YulIf",
															"src": "1118:119:7"
														},
														{
															"nativeSrc": "1247:142:7",
															"nodeType": "YulBlock",
															"src": "1247:142:7",
															"statements": [
																{
																	"nativeSrc": "1262:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:7",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:7"
																				},
																				"nativeSrc": "1347:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$877_fromMemory",
																			"nativeSrc": "1301:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:7"
																		},
																		"nativeSrc": "1301:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$877_fromMemory",
												"nativeSrc": "1017:379:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:7",
														"nodeType": "YulTypedName",
														"src": "1078:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:7",
														"nodeType": "YulTypedName",
														"src": "1089:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:7",
														"nodeType": "YulTypedName",
														"src": "1101:6:7",
														"type": ""
													}
												],
												"src": "1017:379:7"
											},
											{
												"body": {
													"nativeSrc": "1430:152:7",
													"nodeType": "YulBlock",
													"src": "1430:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1447:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1447:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1450:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1450:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1440:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:7"
																},
																"nativeSrc": "1440:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:88:7"
															},
															"nativeSrc": "1440:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1440:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1544:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1544:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1547:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1547:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:7"
																},
																"nativeSrc": "1537:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1537:15:7"
															},
															"nativeSrc": "1537:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1537:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1568:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1568:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1571:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1571:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1561:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:7"
																},
																"nativeSrc": "1561:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1561:15:7"
															},
															"nativeSrc": "1561:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1561:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1402:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1402:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$877(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$877(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$877(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$877_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$877(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$877_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$877_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13FA CODESIZE SUB DUP1 PUSH2 0x13FA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x278D00 PUSH1 0x4 PUSH0 PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B JUMPI PUSH2 0x8A PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9D JUMPI PUSH2 0x9C PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x4 PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC9 JUMPI PUSH2 0xC8 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDB JUMPI PUSH2 0xDA PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH3 0xED4E00 PUSH1 0x4 PUSH0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x107 JUMPI PUSH2 0x106 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x119 JUMPI PUSH2 0x118 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH4 0x1E13380 PUSH1 0x4 PUSH0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH0 PUSH0 PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17F JUMPI PUSH2 0x17E PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x191 JUMPI PUSH2 0x190 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH0 PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BA JUMPI PUSH2 0x1B9 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x12 PUSH0 PUSH0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH2 0x1F4 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x207 JUMPI PUSH2 0x206 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH0 PUSH0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x22F JUMPI PUSH2 0x22E PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x241 JUMPI PUSH2 0x240 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x31F JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x285 DUP3 PUSH2 0x25C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x296 DUP3 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x28C JUMP JUMPDEST DUP2 EQ PUSH2 0x2B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C1 DUP2 PUSH2 0x29D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E9 DUP5 DUP3 DUP6 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x10CE DUP1 PUSH2 0x32C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x4931FA75 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x165 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xAE355D3 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x10087FB1 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x1F1ACCB2 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2D8 DUP3 PUSH2 0x880 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F0 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x168 PUSH1 0x1 DUP4 PUSH0 PUSH0 DUP9 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH2 0x32E PUSH2 0xD3F JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x341 JUMPI PUSH2 0x340 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x36D SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBDE7F0BA1630D25515C7AB99BA47D5640B7FFB4C673B2A5464AE679195589298 DUP10 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EB PUSH2 0xF4D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP3 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x83B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8A7 JUMPI PUSH2 0x8A6 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B5 JUMPI PUSH1 0x3C SWAP1 POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0xD3F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8EA JUMPI PUSH1 0xB4 SWAP1 POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x920 JUMPI PUSH2 0x12C SWAP1 POP PUSH2 0x926 JUMP JUMPDEST PUSH2 0x258 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x93B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94C DUP2 PUSH2 0x92F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x974 DUP5 DUP3 DUP6 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98F DUP2 PUSH2 0x97D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B7 DUP2 PUSH2 0x97D JUMP JUMPDEST DUP2 EQ PUSH2 0x9C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D2 DUP2 PUSH2 0x9AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9FB DUP6 DUP3 DUP7 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA0C DUP6 DUP3 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH2 0xA2A PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA38 DUP5 DUP3 DUP6 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA83 PUSH2 0xA7E PUSH2 0xA79 DUP5 PUSH2 0xA41 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA94 DUP3 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA5 DUP3 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0xA9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACE PUSH0 DUP4 ADD DUP5 PUSH2 0xAAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xADE DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEE DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB09 DUP2 PUSH2 0xAE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH2 0xB24 PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB32 DUP6 DUP3 DUP7 ADD PUSH2 0xAFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB43 DUP6 DUP3 DUP7 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB61 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xB7A PUSH0 DUP4 ADD DUP10 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xB87 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xB94 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xBA1 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xBAE PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xBBB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xB58 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC0A PUSH1 0x20 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC15 DUP3 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC37 DUP2 PUSH2 0xBFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC60 PUSH0 DUP4 ADD DUP7 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0xC6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0xC7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC8B DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xC95 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA6 DUP2 PUSH2 0xC82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH2 0xCC0 PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCE DUP5 DUP3 DUP6 ADD PUSH2 0xC98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD0B PUSH1 0xF DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD16 DUP3 PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD38 DUP2 PUSH2 0xCFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA3 DUP3 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDBC DUP2 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDD3 JUMPI PUSH2 0xDD2 PUSH2 0xD6C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE11 DUP3 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0xE1C DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0xDDA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE41 DUP3 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0xE4C DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0xD6C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xE7B JUMPI PUSH2 0xE7A PUSH2 0xD3F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0xE8B DUP3 PUSH2 0xE6A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE9A DUP3 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAA DUP2 PUSH2 0xE90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEC3 PUSH0 DUP4 ADD DUP7 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xED0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0xEDD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 PUSH1 0x13 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF46 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x73746B206973206E6F7420616374697665000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAE PUSH1 0x11 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB9 DUP3 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDB DUP2 PUSH2 0xFA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206973206E6F74206F766572000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1016 PUSH1 0x1A DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 PUSH2 0x100A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x105D PUSH0 DUP4 ADD DUP6 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x106A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1084 PUSH0 DUP4 ADD DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x1091 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE EQ 0xB7 0xC3 ADDRESS DUP8 0xA9 MCOPY DUP13 MSTORE8 PUSH22 0x275840B1677C9F6DF2D92E100F6FE407A18426E51764 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "174:3968:6:-:0;;;1395:556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:9;1436:12;;:24;;;;;;;;;;;;;;;;;;1511:7;1473:9;:35;1483:24;1473:35;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;;;1567:7;1529:9;:35;1539:24;1529:35;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;;;1630:8;1585:9;:42;1595:31;1585:42;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:53;;;;1684:8;1649:9;:32;1659:21;1649:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;1737:2;1705:3;:29;1709:24;1705:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1798:2;1766:3;:29;1770:24;1766:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1866:2;1827:3;:36;1831:31;1827:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;;;;1922:2;1893:3;:26;1897:21;1893:26;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;;1395:556;174:3968;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:180::-;1450:77;1447:1;1440:88;1547:4;1544:1;1537:15;1571:4;1568:1;1561:15;174:3968:6;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getDuration_1200": {
									"entryPoint": 2176,
									"id": 1200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@aprs_974": {
									"entryPoint": 2024,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@apy_947": {
									"entryPoint": 1286,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@durations_979": {
									"entryPoint": 410,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1164": {
									"entryPoint": 431,
									"id": 1164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_963": {
									"entryPoint": 2045,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userStakes_969": {
									"entryPoint": 2082,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1284": {
									"entryPoint": 1306,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_StakingPeriod_$942": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_StakingPeriod_$942": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$942": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_StakingPeriod_$942_to_t_uint8_fromStack": {
									"entryPoint": 3745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$942_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 2919,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_StakingPeriod_$942": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_StakingPeriod_$942_to_t_uint8": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 3287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad": {
									"entryPoint": 3030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507": {
									"entryPoint": 4066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_StakingPeriod_$942": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_StakingPeriod_$942": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14974:7",
										"nodeType": "YulBlock",
										"src": "0:14974:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "394:56:7",
													"nodeType": "YulBlock",
													"src": "394:56:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "428:16:7",
																"nodeType": "YulBlock",
																"src": "428:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "437:1:7",
																					"nodeType": "YulLiteral",
																					"src": "437:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "440:1:7",
																					"nodeType": "YulLiteral",
																					"src": "440:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "430:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "430:6:7"
																			},
																			"nativeSrc": "430:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "430:12:7"
																		},
																		"nativeSrc": "430:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "430:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "417:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "417:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "424:1:7",
																				"nodeType": "YulLiteral",
																				"src": "424:1:7",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "414:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "414:2:7"
																		},
																		"nativeSrc": "414:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "414:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "407:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "407:6:7"
																},
																"nativeSrc": "407:20:7",
																"nodeType": "YulFunctionCall",
																"src": "407:20:7"
															},
															"nativeSrc": "404:40:7",
															"nodeType": "YulIf",
															"src": "404:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_StakingPeriod_$942",
												"nativeSrc": "334:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "387:5:7",
														"nodeType": "YulTypedName",
														"src": "387:5:7",
														"type": ""
													}
												],
												"src": "334:116:7"
											},
											{
												"body": {
													"nativeSrc": "525:104:7",
													"nodeType": "YulBlock",
													"src": "525:104:7",
													"statements": [
														{
															"nativeSrc": "535:29:7",
															"nodeType": "YulAssignment",
															"src": "535:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "557:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "557:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "544:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "544:12:7"
																},
																"nativeSrc": "544:20:7",
																"nodeType": "YulFunctionCall",
																"src": "544:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "535:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "535:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "617:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "617:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_StakingPeriod_$942",
																	"nativeSrc": "573:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "573:43:7"
																},
																"nativeSrc": "573:50:7",
																"nodeType": "YulFunctionCall",
																"src": "573:50:7"
															},
															"nativeSrc": "573:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "573:50:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_StakingPeriod_$942",
												"nativeSrc": "456:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "503:6:7",
														"nodeType": "YulTypedName",
														"src": "503:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "511:3:7",
														"nodeType": "YulTypedName",
														"src": "511:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "519:5:7",
														"nodeType": "YulTypedName",
														"src": "519:5:7",
														"type": ""
													}
												],
												"src": "456:173:7"
											},
											{
												"body": {
													"nativeSrc": "718:280:7",
													"nodeType": "YulBlock",
													"src": "718:280:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "764:83:7",
																"nodeType": "YulBlock",
																"src": "764:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "766:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "766:77:7"
																			},
																			"nativeSrc": "766:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "766:79:7"
																		},
																		"nativeSrc": "766:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "766:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "739:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "739:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "748:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "748:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "735:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "735:3:7"
																		},
																		"nativeSrc": "735:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "735:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "731:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "731:3:7"
																},
																"nativeSrc": "731:32:7",
																"nodeType": "YulFunctionCall",
																"src": "731:32:7"
															},
															"nativeSrc": "728:119:7",
															"nodeType": "YulIf",
															"src": "728:119:7"
														},
														{
															"nativeSrc": "857:134:7",
															"nodeType": "YulBlock",
															"src": "857:134:7",
															"statements": [
																{
																	"nativeSrc": "872:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "872:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "886:1:7",
																		"nodeType": "YulLiteral",
																		"src": "886:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "876:6:7",
																			"nodeType": "YulTypedName",
																			"src": "876:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "901:80:7",
																	"nodeType": "YulAssignment",
																	"src": "901:80:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "953:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "964:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "964:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "949:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:7"
																				},
																				"nativeSrc": "949:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "949:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "973:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "973:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$942",
																			"nativeSrc": "911:37:7",
																			"nodeType": "YulIdentifier",
																			"src": "911:37:7"
																		},
																		"nativeSrc": "911:70:7",
																		"nodeType": "YulFunctionCall",
																		"src": "911:70:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "901:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "901:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_StakingPeriod_$942",
												"nativeSrc": "635:363:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "688:9:7",
														"nodeType": "YulTypedName",
														"src": "688:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "699:7:7",
														"nodeType": "YulTypedName",
														"src": "699:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "711:6:7",
														"nodeType": "YulTypedName",
														"src": "711:6:7",
														"type": ""
													}
												],
												"src": "635:363:7"
											},
											{
												"body": {
													"nativeSrc": "1049:32:7",
													"nodeType": "YulBlock",
													"src": "1049:32:7",
													"statements": [
														{
															"nativeSrc": "1059:16:7",
															"nodeType": "YulAssignment",
															"src": "1059:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1070:5:7",
																"nodeType": "YulIdentifier",
																"src": "1070:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1059:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1004:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1031:5:7",
														"nodeType": "YulTypedName",
														"src": "1031:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1041:7:7",
														"nodeType": "YulTypedName",
														"src": "1041:7:7",
														"type": ""
													}
												],
												"src": "1004:77:7"
											},
											{
												"body": {
													"nativeSrc": "1152:53:7",
													"nodeType": "YulBlock",
													"src": "1152:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1169:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1169:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1192:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1192:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1174:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1174:17:7"
																		},
																		"nativeSrc": "1174:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:7"
																},
																"nativeSrc": "1162:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1162:37:7"
															},
															"nativeSrc": "1162:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1162:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1087:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1140:5:7",
														"nodeType": "YulTypedName",
														"src": "1140:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1147:3:7",
														"nodeType": "YulTypedName",
														"src": "1147:3:7",
														"type": ""
													}
												],
												"src": "1087:118:7"
											},
											{
												"body": {
													"nativeSrc": "1309:124:7",
													"nodeType": "YulBlock",
													"src": "1309:124:7",
													"statements": [
														{
															"nativeSrc": "1319:26:7",
															"nodeType": "YulAssignment",
															"src": "1319:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1331:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1327:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:7"
																},
																"nativeSrc": "1327:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1327:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1319:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1319:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1399:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1423:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1408:3:7"
																		},
																		"nativeSrc": "1408:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1355:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1355:43:7"
																},
																"nativeSrc": "1355:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1355:71:7"
															},
															"nativeSrc": "1355:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1355:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1211:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1281:9:7",
														"nodeType": "YulTypedName",
														"src": "1281:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1293:6:7",
														"nodeType": "YulTypedName",
														"src": "1293:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1304:4:7",
														"nodeType": "YulTypedName",
														"src": "1304:4:7",
														"type": ""
													}
												],
												"src": "1211:222:7"
											},
											{
												"body": {
													"nativeSrc": "1482:79:7",
													"nodeType": "YulBlock",
													"src": "1482:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1539:16:7",
																"nodeType": "YulBlock",
																"src": "1539:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1548:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1551:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1551:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1541:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1541:6:7"
																			},
																			"nativeSrc": "1541:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1541:12:7"
																		},
																		"nativeSrc": "1541:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1541:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1505:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1505:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1530:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1530:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1512:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1512:17:7"
																				},
																				"nativeSrc": "1512:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1512:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1502:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1502:2:7"
																		},
																		"nativeSrc": "1502:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:7"
																},
																"nativeSrc": "1495:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1495:43:7"
															},
															"nativeSrc": "1492:63:7",
															"nodeType": "YulIf",
															"src": "1492:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1439:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1475:5:7",
														"nodeType": "YulTypedName",
														"src": "1475:5:7",
														"type": ""
													}
												],
												"src": "1439:122:7"
											},
											{
												"body": {
													"nativeSrc": "1619:87:7",
													"nodeType": "YulBlock",
													"src": "1619:87:7",
													"statements": [
														{
															"nativeSrc": "1629:29:7",
															"nodeType": "YulAssignment",
															"src": "1629:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1651:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1638:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1638:12:7"
																},
																"nativeSrc": "1638:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1638:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1629:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1629:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1694:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1667:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1667:26:7"
																},
																"nativeSrc": "1667:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1667:33:7"
															},
															"nativeSrc": "1667:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1667:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1567:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1597:6:7",
														"nodeType": "YulTypedName",
														"src": "1597:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1605:3:7",
														"nodeType": "YulTypedName",
														"src": "1605:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1613:5:7",
														"nodeType": "YulTypedName",
														"src": "1613:5:7",
														"type": ""
													}
												],
												"src": "1567:139:7"
											},
											{
												"body": {
													"nativeSrc": "1812:408:7",
													"nodeType": "YulBlock",
													"src": "1812:408:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1858:83:7",
																"nodeType": "YulBlock",
																"src": "1858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1860:77:7"
																			},
																			"nativeSrc": "1860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1860:79:7"
																		},
																		"nativeSrc": "1860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1829:3:7"
																		},
																		"nativeSrc": "1829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1854:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1825:3:7"
																},
																"nativeSrc": "1825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1825:32:7"
															},
															"nativeSrc": "1822:119:7",
															"nodeType": "YulIf",
															"src": "1822:119:7"
														},
														{
															"nativeSrc": "1951:117:7",
															"nodeType": "YulBlock",
															"src": "1951:117:7",
															"statements": [
																{
																	"nativeSrc": "1966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:7"
																				},
																				"nativeSrc": "2026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2005:20:7"
																		},
																		"nativeSrc": "2005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1995:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2078:135:7",
															"nodeType": "YulBlock",
															"src": "2078:135:7",
															"statements": [
																{
																	"nativeSrc": "2093:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2107:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2107:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:80:7",
																	"nodeType": "YulAssignment",
																	"src": "2123:80:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2175:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2175:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2186:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2186:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2171:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2171:3:7"
																				},
																				"nativeSrc": "2171:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2171:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2195:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2195:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$942",
																			"nativeSrc": "2133:37:7",
																			"nodeType": "YulIdentifier",
																			"src": "2133:37:7"
																		},
																		"nativeSrc": "2133:70:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:70:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2123:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$942",
												"nativeSrc": "1712:508:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1774:9:7",
														"nodeType": "YulTypedName",
														"src": "1774:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1785:7:7",
														"nodeType": "YulTypedName",
														"src": "1785:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1797:6:7",
														"nodeType": "YulTypedName",
														"src": "1797:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1805:6:7",
														"nodeType": "YulTypedName",
														"src": "1805:6:7",
														"type": ""
													}
												],
												"src": "1712:508:7"
											},
											{
												"body": {
													"nativeSrc": "2292:263:7",
													"nodeType": "YulBlock",
													"src": "2292:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:83:7",
																"nodeType": "YulBlock",
																"src": "2338:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2340:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:7"
																			},
																			"nativeSrc": "2340:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:7"
																		},
																		"nativeSrc": "2340:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2313:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2322:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2309:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:7"
																		},
																		"nativeSrc": "2309:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2305:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:7"
																},
																"nativeSrc": "2305:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2305:32:7"
															},
															"nativeSrc": "2302:119:7",
															"nodeType": "YulIf",
															"src": "2302:119:7"
														},
														{
															"nativeSrc": "2431:117:7",
															"nodeType": "YulBlock",
															"src": "2431:117:7",
															"statements": [
																{
																	"nativeSrc": "2446:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2460:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2450:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2475:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2475:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:7"
																				},
																				"nativeSrc": "2506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2530:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2485:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:7"
																		},
																		"nativeSrc": "2485:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2475:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2226:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2262:9:7",
														"nodeType": "YulTypedName",
														"src": "2262:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2273:7:7",
														"nodeType": "YulTypedName",
														"src": "2273:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2285:6:7",
														"nodeType": "YulTypedName",
														"src": "2285:6:7",
														"type": ""
													}
												],
												"src": "2226:329:7"
											},
											{
												"body": {
													"nativeSrc": "2606:81:7",
													"nodeType": "YulBlock",
													"src": "2606:81:7",
													"statements": [
														{
															"nativeSrc": "2616:65:7",
															"nodeType": "YulAssignment",
															"src": "2616:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:7"
																},
																"nativeSrc": "2627:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:7",
														"nodeType": "YulTypedName",
														"src": "2588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:7",
														"nodeType": "YulTypedName",
														"src": "2598:7:7",
														"type": ""
													}
												],
												"src": "2561:126:7"
											},
											{
												"body": {
													"nativeSrc": "2725:28:7",
													"nodeType": "YulBlock",
													"src": "2725:28:7",
													"statements": [
														{
															"nativeSrc": "2735:12:7",
															"nodeType": "YulAssignment",
															"src": "2735:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2742:5:7",
																"nodeType": "YulIdentifier",
																"src": "2742:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2735:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2693:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2711:5:7",
														"nodeType": "YulTypedName",
														"src": "2711:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2721:3:7",
														"nodeType": "YulTypedName",
														"src": "2721:3:7",
														"type": ""
													}
												],
												"src": "2693:60:7"
											},
											{
												"body": {
													"nativeSrc": "2819:82:7",
													"nodeType": "YulBlock",
													"src": "2819:82:7",
													"statements": [
														{
															"nativeSrc": "2829:66:7",
															"nodeType": "YulAssignment",
															"src": "2829:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2887:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2887:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2869:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2869:17:7"
																				},
																				"nativeSrc": "2869:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2869:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2860:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2860:8:7"
																		},
																		"nativeSrc": "2860:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2842:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2842:17:7"
																},
																"nativeSrc": "2842:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2842:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2829:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2829:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2759:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2799:5:7",
														"nodeType": "YulTypedName",
														"src": "2799:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2809:9:7",
														"nodeType": "YulTypedName",
														"src": "2809:9:7",
														"type": ""
													}
												],
												"src": "2759:142:7"
											},
											{
												"body": {
													"nativeSrc": "2967:66:7",
													"nodeType": "YulBlock",
													"src": "2967:66:7",
													"statements": [
														{
															"nativeSrc": "2977:50:7",
															"nodeType": "YulAssignment",
															"src": "2977:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3021:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3021:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2990:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2990:30:7"
																},
																"nativeSrc": "2990:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2990:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2977:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2977:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2907:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2947:5:7",
														"nodeType": "YulTypedName",
														"src": "2947:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2957:9:7",
														"nodeType": "YulTypedName",
														"src": "2957:9:7",
														"type": ""
													}
												],
												"src": "2907:126:7"
											},
											{
												"body": {
													"nativeSrc": "3113:66:7",
													"nodeType": "YulBlock",
													"src": "3113:66:7",
													"statements": [
														{
															"nativeSrc": "3123:50:7",
															"nodeType": "YulAssignment",
															"src": "3123:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3167:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3136:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3136:30:7"
																},
																"nativeSrc": "3136:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3136:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3123:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3123:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "3039:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:7",
														"nodeType": "YulTypedName",
														"src": "3093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3103:9:7",
														"nodeType": "YulTypedName",
														"src": "3103:9:7",
														"type": ""
													}
												],
												"src": "3039:140:7"
											},
											{
												"body": {
													"nativeSrc": "3264:80:7",
													"nodeType": "YulBlock",
													"src": "3264:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3281:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3281:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3331:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3331:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "3286:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3286:44:7"
																		},
																		"nativeSrc": "3286:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3286:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:7"
																},
																"nativeSrc": "3274:64:7",
																"nodeType": "YulFunctionCall",
																"src": "3274:64:7"
															},
															"nativeSrc": "3274:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "3274:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "3185:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3252:5:7",
														"nodeType": "YulTypedName",
														"src": "3252:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3259:3:7",
														"nodeType": "YulTypedName",
														"src": "3259:3:7",
														"type": ""
													}
												],
												"src": "3185:159:7"
											},
											{
												"body": {
													"nativeSrc": "3462:138:7",
													"nodeType": "YulBlock",
													"src": "3462:138:7",
													"statements": [
														{
															"nativeSrc": "3472:26:7",
															"nodeType": "YulAssignment",
															"src": "3472:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3484:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3495:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3480:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:7"
																},
																"nativeSrc": "3480:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3480:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3472:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3566:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3590:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:7"
																		},
																		"nativeSrc": "3575:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "3508:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "3508:57:7"
																},
																"nativeSrc": "3508:85:7",
																"nodeType": "YulFunctionCall",
																"src": "3508:85:7"
															},
															"nativeSrc": "3508:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "3508:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "3350:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3434:9:7",
														"nodeType": "YulTypedName",
														"src": "3434:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3446:6:7",
														"nodeType": "YulTypedName",
														"src": "3446:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3457:4:7",
														"nodeType": "YulTypedName",
														"src": "3457:4:7",
														"type": ""
													}
												],
												"src": "3350:250:7"
											},
											{
												"body": {
													"nativeSrc": "3651:51:7",
													"nodeType": "YulBlock",
													"src": "3651:51:7",
													"statements": [
														{
															"nativeSrc": "3661:35:7",
															"nodeType": "YulAssignment",
															"src": "3661:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3690:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3690:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3672:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3672:17:7"
																},
																"nativeSrc": "3672:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3672:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3661:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3661:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3606:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3633:5:7",
														"nodeType": "YulTypedName",
														"src": "3633:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3643:7:7",
														"nodeType": "YulTypedName",
														"src": "3643:7:7",
														"type": ""
													}
												],
												"src": "3606:96:7"
											},
											{
												"body": {
													"nativeSrc": "3751:79:7",
													"nodeType": "YulBlock",
													"src": "3751:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3808:16:7",
																"nodeType": "YulBlock",
																"src": "3808:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3817:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3817:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3820:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3820:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3810:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3810:6:7"
																			},
																			"nativeSrc": "3810:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3810:12:7"
																		},
																		"nativeSrc": "3810:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3810:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3799:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3799:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3781:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3781:17:7"
																				},
																				"nativeSrc": "3781:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3781:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3771:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3771:2:7"
																		},
																		"nativeSrc": "3771:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3771:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																},
																"nativeSrc": "3764:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3764:43:7"
															},
															"nativeSrc": "3761:63:7",
															"nodeType": "YulIf",
															"src": "3761:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3708:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:7",
														"nodeType": "YulTypedName",
														"src": "3744:5:7",
														"type": ""
													}
												],
												"src": "3708:122:7"
											},
											{
												"body": {
													"nativeSrc": "3888:87:7",
													"nodeType": "YulBlock",
													"src": "3888:87:7",
													"statements": [
														{
															"nativeSrc": "3898:29:7",
															"nodeType": "YulAssignment",
															"src": "3898:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3920:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3907:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3907:12:7"
																},
																"nativeSrc": "3907:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3907:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3898:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3898:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3963:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3963:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3936:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3936:26:7"
																},
																"nativeSrc": "3936:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3936:33:7"
															},
															"nativeSrc": "3936:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3936:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3836:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3866:6:7",
														"nodeType": "YulTypedName",
														"src": "3866:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3874:3:7",
														"nodeType": "YulTypedName",
														"src": "3874:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3882:5:7",
														"nodeType": "YulTypedName",
														"src": "3882:5:7",
														"type": ""
													}
												],
												"src": "3836:139:7"
											},
											{
												"body": {
													"nativeSrc": "4064:391:7",
													"nodeType": "YulBlock",
													"src": "4064:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4110:83:7",
																"nodeType": "YulBlock",
																"src": "4110:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4112:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4112:77:7"
																			},
																			"nativeSrc": "4112:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4112:79:7"
																		},
																		"nativeSrc": "4112:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4085:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4094:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4081:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:7"
																		},
																		"nativeSrc": "4081:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4106:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4077:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:7"
																},
																"nativeSrc": "4077:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4077:32:7"
															},
															"nativeSrc": "4074:119:7",
															"nodeType": "YulIf",
															"src": "4074:119:7"
														},
														{
															"nativeSrc": "4203:117:7",
															"nodeType": "YulBlock",
															"src": "4203:117:7",
															"statements": [
																{
																	"nativeSrc": "4218:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4218:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4232:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4222:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4222:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4247:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4247:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4282:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4282:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4293:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4293:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4278:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4278:3:7"
																				},
																				"nativeSrc": "4278:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4278:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4302:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4302:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4257:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4257:20:7"
																		},
																		"nativeSrc": "4257:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4257:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4247:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4247:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4330:118:7",
															"nodeType": "YulBlock",
															"src": "4330:118:7",
															"statements": [
																{
																	"nativeSrc": "4345:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4345:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4359:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4359:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4349:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4349:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4375:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4375:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4410:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4410:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4421:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4421:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4406:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4406:3:7"
																				},
																				"nativeSrc": "4406:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4406:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4430:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4430:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4385:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4385:20:7"
																		},
																		"nativeSrc": "4385:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4385:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4375:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4375:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3981:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4026:9:7",
														"nodeType": "YulTypedName",
														"src": "4026:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4037:7:7",
														"nodeType": "YulTypedName",
														"src": "4037:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4049:6:7",
														"nodeType": "YulTypedName",
														"src": "4049:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4057:6:7",
														"nodeType": "YulTypedName",
														"src": "4057:6:7",
														"type": ""
													}
												],
												"src": "3981:474:7"
											},
											{
												"body": {
													"nativeSrc": "4503:48:7",
													"nodeType": "YulBlock",
													"src": "4503:48:7",
													"statements": [
														{
															"nativeSrc": "4513:32:7",
															"nodeType": "YulAssignment",
															"src": "4513:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4538:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4538:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4531:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4531:6:7"
																		},
																		"nativeSrc": "4531:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4531:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4524:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4524:6:7"
																},
																"nativeSrc": "4524:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4524:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4513:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4513:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4461:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4485:5:7",
														"nodeType": "YulTypedName",
														"src": "4485:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4495:7:7",
														"nodeType": "YulTypedName",
														"src": "4495:7:7",
														"type": ""
													}
												],
												"src": "4461:90:7"
											},
											{
												"body": {
													"nativeSrc": "4616:50:7",
													"nodeType": "YulBlock",
													"src": "4616:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4633:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4633:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4653:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4653:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4638:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "4638:14:7"
																		},
																		"nativeSrc": "4638:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4638:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:7"
																},
																"nativeSrc": "4626:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4626:34:7"
															},
															"nativeSrc": "4626:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4626:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4557:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4604:5:7",
														"nodeType": "YulTypedName",
														"src": "4604:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4611:3:7",
														"nodeType": "YulTypedName",
														"src": "4611:3:7",
														"type": ""
													}
												],
												"src": "4557:109:7"
											},
											{
												"body": {
													"nativeSrc": "4904:531:7",
													"nodeType": "YulBlock",
													"src": "4904:531:7",
													"statements": [
														{
															"nativeSrc": "4914:27:7",
															"nodeType": "YulAssignment",
															"src": "4914:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4926:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4926:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4937:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4937:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4922:3:7"
																},
																"nativeSrc": "4922:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4922:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4914:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4914:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4995:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4995:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5008:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5008:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5019:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5019:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5004:3:7"
																		},
																		"nativeSrc": "5004:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5004:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4951:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4951:43:7"
																},
																"nativeSrc": "4951:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4951:71:7"
															},
															"nativeSrc": "4951:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4951:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5076:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5076:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5089:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5089:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5100:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5100:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:7"
																		},
																		"nativeSrc": "5085:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5032:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5032:43:7"
																},
																"nativeSrc": "5032:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5032:72:7"
															},
															"nativeSrc": "5032:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5032:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5158:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5158:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:7"
																		},
																		"nativeSrc": "5167:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5114:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5114:43:7"
																},
																"nativeSrc": "5114:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5114:72:7"
															},
															"nativeSrc": "5114:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5114:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5240:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5253:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5253:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5264:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5264:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:7"
																		},
																		"nativeSrc": "5249:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5196:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5196:43:7"
																},
																"nativeSrc": "5196:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5196:72:7"
															},
															"nativeSrc": "5196:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5196:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5335:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5335:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5346:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5346:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5331:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:7"
																		},
																		"nativeSrc": "5331:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5331:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5278:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5278:43:7"
																},
																"nativeSrc": "5278:73:7",
																"nodeType": "YulFunctionCall",
																"src": "5278:73:7"
															},
															"nativeSrc": "5278:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "5278:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "5399:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5399:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5412:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5423:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5423:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5408:3:7"
																		},
																		"nativeSrc": "5408:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5408:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5361:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5361:37:7"
																},
																"nativeSrc": "5361:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5361:67:7"
															},
															"nativeSrc": "5361:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5361:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4672:763:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4836:9:7",
														"nodeType": "YulTypedName",
														"src": "4836:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4848:6:7",
														"nodeType": "YulTypedName",
														"src": "4848:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4856:6:7",
														"nodeType": "YulTypedName",
														"src": "4856:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4864:6:7",
														"nodeType": "YulTypedName",
														"src": "4864:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4872:6:7",
														"nodeType": "YulTypedName",
														"src": "4872:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4880:6:7",
														"nodeType": "YulTypedName",
														"src": "4880:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4888:6:7",
														"nodeType": "YulTypedName",
														"src": "4888:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4899:4:7",
														"nodeType": "YulTypedName",
														"src": "4899:4:7",
														"type": ""
													}
												],
												"src": "4672:763:7"
											},
											{
												"body": {
													"nativeSrc": "5537:73:7",
													"nodeType": "YulBlock",
													"src": "5537:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5554:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5559:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5559:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5547:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:7"
																},
																"nativeSrc": "5547:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5547:19:7"
															},
															"nativeSrc": "5547:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5547:19:7"
														},
														{
															"nativeSrc": "5575:29:7",
															"nodeType": "YulAssignment",
															"src": "5575:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5594:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5599:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5599:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5590:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5590:3:7"
																},
																"nativeSrc": "5590:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5590:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5575:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5575:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5441:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5509:3:7",
														"nodeType": "YulTypedName",
														"src": "5509:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5514:6:7",
														"nodeType": "YulTypedName",
														"src": "5514:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5525:11:7",
														"nodeType": "YulTypedName",
														"src": "5525:11:7",
														"type": ""
													}
												],
												"src": "5441:169:7"
											},
											{
												"body": {
													"nativeSrc": "5722:76:7",
													"nodeType": "YulBlock",
													"src": "5722:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5744:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5744:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:7"
																		},
																		"nativeSrc": "5740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5740:14:7"
																	},
																	{
																		"hexValue": "616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "5756:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5756:34:7",
																		"type": "",
																		"value": "amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5733:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:7"
																},
																"nativeSrc": "5733:58:7",
																"nodeType": "YulFunctionCall",
																"src": "5733:58:7"
															},
															"nativeSrc": "5733:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "5733:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
												"nativeSrc": "5616:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5714:6:7",
														"nodeType": "YulTypedName",
														"src": "5714:6:7",
														"type": ""
													}
												],
												"src": "5616:182:7"
											},
											{
												"body": {
													"nativeSrc": "5950:220:7",
													"nodeType": "YulBlock",
													"src": "5950:220:7",
													"statements": [
														{
															"nativeSrc": "5960:74:7",
															"nodeType": "YulAssignment",
															"src": "5960:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6026:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6026:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6031:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6031:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5967:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5967:58:7"
																},
																"nativeSrc": "5967:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5967:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5960:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5960:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6132:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6132:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
																	"nativeSrc": "6043:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6043:88:7"
																},
																"nativeSrc": "6043:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6043:93:7"
															},
															"nativeSrc": "6043:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6043:93:7"
														},
														{
															"nativeSrc": "6145:19:7",
															"nodeType": "YulAssignment",
															"src": "6145:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6156:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6161:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6161:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6152:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6152:3:7"
																},
																"nativeSrc": "6152:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6152:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6145:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6145:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5804:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5938:3:7",
														"nodeType": "YulTypedName",
														"src": "5938:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5946:3:7",
														"nodeType": "YulTypedName",
														"src": "5946:3:7",
														"type": ""
													}
												],
												"src": "5804:366:7"
											},
											{
												"body": {
													"nativeSrc": "6347:248:7",
													"nodeType": "YulBlock",
													"src": "6347:248:7",
													"statements": [
														{
															"nativeSrc": "6357:26:7",
															"nodeType": "YulAssignment",
															"src": "6357:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6369:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6369:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6380:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6380:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6365:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6365:3:7"
																},
																"nativeSrc": "6365:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6365:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6357:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6357:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6415:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6415:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6400:3:7"
																		},
																		"nativeSrc": "6400:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6400:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6423:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6423:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6429:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6429:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6419:3:7"
																		},
																		"nativeSrc": "6419:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6419:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:7"
																},
																"nativeSrc": "6393:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6393:47:7"
															},
															"nativeSrc": "6393:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6393:47:7"
														},
														{
															"nativeSrc": "6449:139:7",
															"nodeType": "YulAssignment",
															"src": "6449:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6583:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6583:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6457:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6457:124:7"
																},
																"nativeSrc": "6457:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6457:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6449:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6449:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6176:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6327:9:7",
														"nodeType": "YulTypedName",
														"src": "6327:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6342:4:7",
														"nodeType": "YulTypedName",
														"src": "6342:4:7",
														"type": ""
													}
												],
												"src": "6176:419:7"
											},
											{
												"body": {
													"nativeSrc": "6666:53:7",
													"nodeType": "YulBlock",
													"src": "6666:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6706:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6706:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6688:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6688:17:7"
																		},
																		"nativeSrc": "6688:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6688:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6676:6:7"
																},
																"nativeSrc": "6676:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6676:37:7"
															},
															"nativeSrc": "6676:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6676:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6601:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6654:5:7",
														"nodeType": "YulTypedName",
														"src": "6654:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6661:3:7",
														"nodeType": "YulTypedName",
														"src": "6661:3:7",
														"type": ""
													}
												],
												"src": "6601:118:7"
											},
											{
												"body": {
													"nativeSrc": "6879:288:7",
													"nodeType": "YulBlock",
													"src": "6879:288:7",
													"statements": [
														{
															"nativeSrc": "6889:26:7",
															"nodeType": "YulAssignment",
															"src": "6889:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6901:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6901:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6912:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6912:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:7"
																},
																"nativeSrc": "6897:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6897:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6889:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6889:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6969:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6969:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6982:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6982:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6993:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6993:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6978:3:7"
																		},
																		"nativeSrc": "6978:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6978:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6925:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6925:43:7"
																},
																"nativeSrc": "6925:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6925:71:7"
															},
															"nativeSrc": "6925:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6925:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7050:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7050:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7074:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7074:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7059:3:7"
																		},
																		"nativeSrc": "7059:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7006:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7006:43:7"
																},
																"nativeSrc": "7006:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7006:72:7"
															},
															"nativeSrc": "7006:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7006:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7132:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7132:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7145:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7145:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7156:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7156:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:7"
																		},
																		"nativeSrc": "7141:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7141:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7088:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7088:43:7"
																},
																"nativeSrc": "7088:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7088:72:7"
															},
															"nativeSrc": "7088:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7088:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6725:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6835:9:7",
														"nodeType": "YulTypedName",
														"src": "6835:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6847:6:7",
														"nodeType": "YulTypedName",
														"src": "6847:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6855:6:7",
														"nodeType": "YulTypedName",
														"src": "6855:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6863:6:7",
														"nodeType": "YulTypedName",
														"src": "6863:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6874:4:7",
														"nodeType": "YulTypedName",
														"src": "6874:4:7",
														"type": ""
													}
												],
												"src": "6725:442:7"
											},
											{
												"body": {
													"nativeSrc": "7213:76:7",
													"nodeType": "YulBlock",
													"src": "7213:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7267:16:7",
																"nodeType": "YulBlock",
																"src": "7267:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7276:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7276:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7279:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7279:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7269:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7269:6:7"
																			},
																			"nativeSrc": "7269:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7269:12:7"
																		},
																		"nativeSrc": "7269:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7269:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7236:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7236:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7258:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7258:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7243:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "7243:14:7"
																				},
																				"nativeSrc": "7243:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7243:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7233:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7233:2:7"
																		},
																		"nativeSrc": "7233:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7233:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7226:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7226:6:7"
																},
																"nativeSrc": "7226:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7226:40:7"
															},
															"nativeSrc": "7223:60:7",
															"nodeType": "YulIf",
															"src": "7223:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7173:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7206:5:7",
														"nodeType": "YulTypedName",
														"src": "7206:5:7",
														"type": ""
													}
												],
												"src": "7173:116:7"
											},
											{
												"body": {
													"nativeSrc": "7355:77:7",
													"nodeType": "YulBlock",
													"src": "7355:77:7",
													"statements": [
														{
															"nativeSrc": "7365:22:7",
															"nodeType": "YulAssignment",
															"src": "7365:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7380:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7380:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7374:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7374:5:7"
																},
																"nativeSrc": "7374:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7374:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7365:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7365:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7420:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7420:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7396:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "7396:23:7"
																},
																"nativeSrc": "7396:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7396:30:7"
															},
															"nativeSrc": "7396:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7396:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7295:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7333:6:7",
														"nodeType": "YulTypedName",
														"src": "7333:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7341:3:7",
														"nodeType": "YulTypedName",
														"src": "7341:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7349:5:7",
														"nodeType": "YulTypedName",
														"src": "7349:5:7",
														"type": ""
													}
												],
												"src": "7295:137:7"
											},
											{
												"body": {
													"nativeSrc": "7512:271:7",
													"nodeType": "YulBlock",
													"src": "7512:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7558:83:7",
																"nodeType": "YulBlock",
																"src": "7558:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7560:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7560:77:7"
																			},
																			"nativeSrc": "7560:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7560:79:7"
																		},
																		"nativeSrc": "7560:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7560:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7533:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7533:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7542:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:7"
																		},
																		"nativeSrc": "7529:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7554:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:7"
																},
																"nativeSrc": "7525:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7525:32:7"
															},
															"nativeSrc": "7522:119:7",
															"nodeType": "YulIf",
															"src": "7522:119:7"
														},
														{
															"nativeSrc": "7651:125:7",
															"nodeType": "YulBlock",
															"src": "7651:125:7",
															"statements": [
																{
																	"nativeSrc": "7666:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7666:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7680:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7680:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7670:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7670:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7695:71:7",
																	"nodeType": "YulAssignment",
																	"src": "7695:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7738:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7738:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7749:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7749:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7734:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7734:3:7"
																				},
																				"nativeSrc": "7734:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7734:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7758:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7758:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7705:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7705:28:7"
																		},
																		"nativeSrc": "7705:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7705:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7695:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7695:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7438:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7482:9:7",
														"nodeType": "YulTypedName",
														"src": "7482:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7493:7:7",
														"nodeType": "YulTypedName",
														"src": "7493:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7505:6:7",
														"nodeType": "YulTypedName",
														"src": "7505:6:7",
														"type": ""
													}
												],
												"src": "7438:345:7"
											},
											{
												"body": {
													"nativeSrc": "7895:59:7",
													"nodeType": "YulBlock",
													"src": "7895:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7917:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7917:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7925:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7925:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7913:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7913:3:7"
																		},
																		"nativeSrc": "7913:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7913:14:7"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7929:17:7",
																		"nodeType": "YulLiteral",
																		"src": "7929:17:7",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7906:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:7"
																},
																"nativeSrc": "7906:41:7",
																"nodeType": "YulFunctionCall",
																"src": "7906:41:7"
															},
															"nativeSrc": "7906:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "7906:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "7789:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7887:6:7",
														"nodeType": "YulTypedName",
														"src": "7887:6:7",
														"type": ""
													}
												],
												"src": "7789:165:7"
											},
											{
												"body": {
													"nativeSrc": "8106:220:7",
													"nodeType": "YulBlock",
													"src": "8106:220:7",
													"statements": [
														{
															"nativeSrc": "8116:74:7",
															"nodeType": "YulAssignment",
															"src": "8116:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8182:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8182:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8187:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8187:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8123:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8123:58:7"
																},
																"nativeSrc": "8123:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8123:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8116:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8288:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8288:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "8199:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8199:88:7"
																},
																"nativeSrc": "8199:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8199:93:7"
															},
															"nativeSrc": "8199:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8199:93:7"
														},
														{
															"nativeSrc": "8301:19:7",
															"nodeType": "YulAssignment",
															"src": "8301:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8312:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8312:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8317:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8317:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8308:3:7"
																},
																"nativeSrc": "8308:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8308:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8301:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7960:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8094:3:7",
														"nodeType": "YulTypedName",
														"src": "8094:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8102:3:7",
														"nodeType": "YulTypedName",
														"src": "8102:3:7",
														"type": ""
													}
												],
												"src": "7960:366:7"
											},
											{
												"body": {
													"nativeSrc": "8503:248:7",
													"nodeType": "YulBlock",
													"src": "8503:248:7",
													"statements": [
														{
															"nativeSrc": "8513:26:7",
															"nodeType": "YulAssignment",
															"src": "8513:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8521:3:7"
																},
																"nativeSrc": "8521:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8521:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8513:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8513:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8560:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8560:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8571:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8571:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8556:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8556:3:7"
																		},
																		"nativeSrc": "8556:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8556:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8579:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8579:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8585:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8585:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:7"
																		},
																		"nativeSrc": "8575:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8575:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8549:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8549:6:7"
																},
																"nativeSrc": "8549:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8549:47:7"
															},
															"nativeSrc": "8549:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8549:47:7"
														},
														{
															"nativeSrc": "8605:139:7",
															"nodeType": "YulAssignment",
															"src": "8605:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8739:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8739:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8613:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8613:124:7"
																},
																"nativeSrc": "8613:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8613:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8605:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8605:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8332:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8483:9:7",
														"nodeType": "YulTypedName",
														"src": "8483:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8498:4:7",
														"nodeType": "YulTypedName",
														"src": "8498:4:7",
														"type": ""
													}
												],
												"src": "8332:419:7"
											},
											{
												"body": {
													"nativeSrc": "8785:152:7",
													"nodeType": "YulBlock",
													"src": "8785:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8802:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8802:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8805:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8805:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8795:6:7"
																},
																"nativeSrc": "8795:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8795:88:7"
															},
															"nativeSrc": "8795:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8795:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8899:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8899:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8902:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:7"
																},
																"nativeSrc": "8892:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8892:15:7"
															},
															"nativeSrc": "8892:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8892:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8923:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8923:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8926:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8926:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:7"
																},
																"nativeSrc": "8916:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8916:15:7"
															},
															"nativeSrc": "8916:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8916:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "8757:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8757:180:7"
											},
											{
												"body": {
													"nativeSrc": "8971:152:7",
													"nodeType": "YulBlock",
													"src": "8971:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8988:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8988:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8991:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8991:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8981:6:7"
																},
																"nativeSrc": "8981:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8981:88:7"
															},
															"nativeSrc": "8981:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8981:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9085:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9085:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9088:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9088:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9078:6:7"
																},
																"nativeSrc": "9078:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9078:15:7"
															},
															"nativeSrc": "9078:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9078:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9109:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9109:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9112:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9112:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9102:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9102:6:7"
																},
																"nativeSrc": "9102:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9102:15:7"
															},
															"nativeSrc": "9102:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9102:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8943:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8943:180:7"
											},
											{
												"body": {
													"nativeSrc": "9177:362:7",
													"nodeType": "YulBlock",
													"src": "9177:362:7",
													"statements": [
														{
															"nativeSrc": "9187:25:7",
															"nodeType": "YulAssignment",
															"src": "9187:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9210:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9210:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9192:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9192:17:7"
																},
																"nativeSrc": "9192:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9192:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9187:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9187:1:7"
																}
															]
														},
														{
															"nativeSrc": "9221:25:7",
															"nodeType": "YulAssignment",
															"src": "9221:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9244:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9244:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9226:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9226:17:7"
																},
																"nativeSrc": "9226:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9226:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9221:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9221:1:7"
																}
															]
														},
														{
															"nativeSrc": "9255:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9255:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9278:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9278:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9281:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9281:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9274:3:7"
																},
																"nativeSrc": "9274:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9274:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9259:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9259:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9292:41:7",
															"nodeType": "YulAssignment",
															"src": "9292:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9321:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9321:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9303:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9303:17:7"
																},
																"nativeSrc": "9303:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9303:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9292:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9292:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9510:22:7",
																"nodeType": "YulBlock",
																"src": "9510:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9512:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9512:16:7"
																			},
																			"nativeSrc": "9512:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9512:18:7"
																		},
																		"nativeSrc": "9512:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9512:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9443:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9443:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9436:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9436:6:7"
																				},
																				"nativeSrc": "9436:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9436:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9466:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9466:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9473:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9473:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9482:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9482:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9469:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9469:3:7"
																						},
																						"nativeSrc": "9469:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9469:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9463:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9463:2:7"
																				},
																				"nativeSrc": "9463:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9463:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9416:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9416:2:7"
																		},
																		"nativeSrc": "9416:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9396:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:7"
																},
																"nativeSrc": "9396:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9396:113:7"
															},
															"nativeSrc": "9393:139:7",
															"nodeType": "YulIf",
															"src": "9393:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9129:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9160:1:7",
														"nodeType": "YulTypedName",
														"src": "9160:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9163:1:7",
														"nodeType": "YulTypedName",
														"src": "9163:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9169:7:7",
														"nodeType": "YulTypedName",
														"src": "9169:7:7",
														"type": ""
													}
												],
												"src": "9129:410:7"
											},
											{
												"body": {
													"nativeSrc": "9573:152:7",
													"nodeType": "YulBlock",
													"src": "9573:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9590:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9590:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9593:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9593:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9583:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9583:6:7"
																},
																"nativeSrc": "9583:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9583:88:7"
															},
															"nativeSrc": "9583:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9583:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9687:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9687:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9690:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9690:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9680:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:7"
																},
																"nativeSrc": "9680:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9680:15:7"
															},
															"nativeSrc": "9680:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9680:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9711:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9711:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9714:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9714:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9704:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9704:6:7"
																},
																"nativeSrc": "9704:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9704:15:7"
															},
															"nativeSrc": "9704:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9704:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9545:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9545:180:7"
											},
											{
												"body": {
													"nativeSrc": "9773:143:7",
													"nodeType": "YulBlock",
													"src": "9773:143:7",
													"statements": [
														{
															"nativeSrc": "9783:25:7",
															"nodeType": "YulAssignment",
															"src": "9783:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9806:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9806:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9788:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9788:17:7"
																},
																"nativeSrc": "9788:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9788:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9783:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9783:1:7"
																}
															]
														},
														{
															"nativeSrc": "9817:25:7",
															"nodeType": "YulAssignment",
															"src": "9817:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9840:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9840:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9822:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9822:17:7"
																},
																"nativeSrc": "9822:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9822:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9817:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9817:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9864:22:7",
																"nodeType": "YulBlock",
																"src": "9864:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9866:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9866:16:7"
																			},
																			"nativeSrc": "9866:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9866:18:7"
																		},
																		"nativeSrc": "9866:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9866:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9861:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9861:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9854:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9854:6:7"
																},
																"nativeSrc": "9854:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9854:9:7"
															},
															"nativeSrc": "9851:35:7",
															"nodeType": "YulIf",
															"src": "9851:35:7"
														},
														{
															"nativeSrc": "9896:14:7",
															"nodeType": "YulAssignment",
															"src": "9896:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9905:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9905:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9908:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9908:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9901:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:7"
																},
																"nativeSrc": "9901:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9901:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9896:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9896:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9731:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9762:1:7",
														"nodeType": "YulTypedName",
														"src": "9762:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9765:1:7",
														"nodeType": "YulTypedName",
														"src": "9765:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9771:1:7",
														"nodeType": "YulTypedName",
														"src": "9771:1:7",
														"type": ""
													}
												],
												"src": "9731:185:7"
											},
											{
												"body": {
													"nativeSrc": "9966:147:7",
													"nodeType": "YulBlock",
													"src": "9966:147:7",
													"statements": [
														{
															"nativeSrc": "9976:25:7",
															"nodeType": "YulAssignment",
															"src": "9976:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9999:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9981:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9981:17:7"
																},
																"nativeSrc": "9981:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9981:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9976:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9976:1:7"
																}
															]
														},
														{
															"nativeSrc": "10010:25:7",
															"nodeType": "YulAssignment",
															"src": "10010:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10033:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10033:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10015:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10015:17:7"
																},
																"nativeSrc": "10015:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10015:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10010:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10010:1:7"
																}
															]
														},
														{
															"nativeSrc": "10044:16:7",
															"nodeType": "YulAssignment",
															"src": "10044:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10055:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10055:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10058:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10058:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10051:3:7"
																},
																"nativeSrc": "10051:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10051:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10044:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10084:22:7",
																"nodeType": "YulBlock",
																"src": "10084:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10086:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10086:16:7"
																			},
																			"nativeSrc": "10086:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10086:18:7"
																		},
																		"nativeSrc": "10086:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10086:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10076:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10076:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10079:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10079:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10073:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10073:2:7"
																},
																"nativeSrc": "10073:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10073:10:7"
															},
															"nativeSrc": "10070:36:7",
															"nodeType": "YulIf",
															"src": "10070:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9922:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9953:1:7",
														"nodeType": "YulTypedName",
														"src": "9953:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9956:1:7",
														"nodeType": "YulTypedName",
														"src": "9956:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9962:3:7",
														"nodeType": "YulTypedName",
														"src": "9962:3:7",
														"type": ""
													}
												],
												"src": "9922:191:7"
											},
											{
												"body": {
													"nativeSrc": "10179:62:7",
													"nodeType": "YulBlock",
													"src": "10179:62:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10213:22:7",
																"nodeType": "YulBlock",
																"src": "10213:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "10215:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10215:16:7"
																			},
																			"nativeSrc": "10215:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10215:18:7"
																		},
																		"nativeSrc": "10215:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10215:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10202:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10202:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10209:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10209:1:7",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10199:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10199:2:7"
																		},
																		"nativeSrc": "10199:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10199:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10192:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10192:6:7"
																},
																"nativeSrc": "10192:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10192:20:7"
															},
															"nativeSrc": "10189:46:7",
															"nodeType": "YulIf",
															"src": "10189:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_StakingPeriod_$942",
												"nativeSrc": "10119:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10172:5:7",
														"nodeType": "YulTypedName",
														"src": "10172:5:7",
														"type": ""
													}
												],
												"src": "10119:122:7"
											},
											{
												"body": {
													"nativeSrc": "10309:83:7",
													"nodeType": "YulBlock",
													"src": "10309:83:7",
													"statements": [
														{
															"nativeSrc": "10319:16:7",
															"nodeType": "YulAssignment",
															"src": "10319:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "10330:5:7",
																"nodeType": "YulIdentifier",
																"src": "10330:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10319:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10319:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10380:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10380:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_StakingPeriod_$942",
																	"nativeSrc": "10336:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10336:43:7"
																},
																"nativeSrc": "10336:50:7",
																"nodeType": "YulFunctionCall",
																"src": "10336:50:7"
															},
															"nativeSrc": "10336:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "10336:50:7"
														}
													]
												},
												"name": "cleanup_t_enum$_StakingPeriod_$942",
												"nativeSrc": "10247:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10291:5:7",
														"nodeType": "YulTypedName",
														"src": "10291:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10301:7:7",
														"nodeType": "YulTypedName",
														"src": "10301:7:7",
														"type": ""
													}
												],
												"src": "10247:145:7"
											},
											{
												"body": {
													"nativeSrc": "10473:70:7",
													"nodeType": "YulBlock",
													"src": "10473:70:7",
													"statements": [
														{
															"nativeSrc": "10483:54:7",
															"nodeType": "YulAssignment",
															"src": "10483:54:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10531:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10531:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_StakingPeriod_$942",
																	"nativeSrc": "10496:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "10496:34:7"
																},
																"nativeSrc": "10496:41:7",
																"nodeType": "YulFunctionCall",
																"src": "10496:41:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10483:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "10483:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_StakingPeriod_$942_to_t_uint8",
												"nativeSrc": "10398:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10453:5:7",
														"nodeType": "YulTypedName",
														"src": "10453:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10463:9:7",
														"nodeType": "YulTypedName",
														"src": "10463:9:7",
														"type": ""
													}
												],
												"src": "10398:145:7"
											},
											{
												"body": {
													"nativeSrc": "10629:81:7",
													"nodeType": "YulBlock",
													"src": "10629:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10646:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10646:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10697:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10697:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_StakingPeriod_$942_to_t_uint8",
																			"nativeSrc": "10651:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "10651:45:7"
																		},
																		"nativeSrc": "10651:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10651:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10639:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10639:6:7"
																},
																"nativeSrc": "10639:65:7",
																"nodeType": "YulFunctionCall",
																"src": "10639:65:7"
															},
															"nativeSrc": "10639:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "10639:65:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_StakingPeriod_$942_to_t_uint8_fromStack",
												"nativeSrc": "10549:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10617:5:7",
														"nodeType": "YulTypedName",
														"src": "10617:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10624:3:7",
														"nodeType": "YulTypedName",
														"src": "10624:3:7",
														"type": ""
													}
												],
												"src": "10549:161:7"
											},
											{
												"body": {
													"nativeSrc": "10885:303:7",
													"nodeType": "YulBlock",
													"src": "10885:303:7",
													"statements": [
														{
															"nativeSrc": "10895:26:7",
															"nodeType": "YulAssignment",
															"src": "10895:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10907:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10907:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10918:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10918:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10903:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10903:3:7"
																},
																"nativeSrc": "10903:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10903:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10895:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10895:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10975:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10975:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10988:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10988:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10999:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10999:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10984:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10984:3:7"
																		},
																		"nativeSrc": "10984:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10984:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10931:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10931:43:7"
																},
																"nativeSrc": "10931:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10931:71:7"
															},
															"nativeSrc": "10931:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10931:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11071:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11071:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11084:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11084:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11095:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11095:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11080:3:7"
																		},
																		"nativeSrc": "11080:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11080:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$942_to_t_uint8_fromStack",
																	"nativeSrc": "11012:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11012:58:7"
																},
																"nativeSrc": "11012:87:7",
																"nodeType": "YulFunctionCall",
																"src": "11012:87:7"
															},
															"nativeSrc": "11012:87:7",
															"nodeType": "YulExpressionStatement",
															"src": "11012:87:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11153:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11153:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11166:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11166:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11177:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11177:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11162:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:7"
																		},
																		"nativeSrc": "11162:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11162:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11109:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11109:43:7"
																},
																"nativeSrc": "11109:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11109:72:7"
															},
															"nativeSrc": "11109:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11109:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$942_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "10716:472:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10841:9:7",
														"nodeType": "YulTypedName",
														"src": "10841:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10853:6:7",
														"nodeType": "YulTypedName",
														"src": "10853:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10861:6:7",
														"nodeType": "YulTypedName",
														"src": "10861:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10869:6:7",
														"nodeType": "YulTypedName",
														"src": "10869:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10880:4:7",
														"nodeType": "YulTypedName",
														"src": "10880:4:7",
														"type": ""
													}
												],
												"src": "10716:472:7"
											},
											{
												"body": {
													"nativeSrc": "11300:63:7",
													"nodeType": "YulBlock",
													"src": "11300:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11322:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11322:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11330:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11330:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11318:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11318:3:7"
																		},
																		"nativeSrc": "11318:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11318:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b6520696e646578",
																		"kind": "string",
																		"nativeSrc": "11334:21:7",
																		"nodeType": "YulLiteral",
																		"src": "11334:21:7",
																		"type": "",
																		"value": "Invalid stake index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11311:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11311:6:7"
																},
																"nativeSrc": "11311:45:7",
																"nodeType": "YulFunctionCall",
																"src": "11311:45:7"
															},
															"nativeSrc": "11311:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "11311:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
												"nativeSrc": "11194:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11292:6:7",
														"nodeType": "YulTypedName",
														"src": "11292:6:7",
														"type": ""
													}
												],
												"src": "11194:169:7"
											},
											{
												"body": {
													"nativeSrc": "11515:220:7",
													"nodeType": "YulBlock",
													"src": "11515:220:7",
													"statements": [
														{
															"nativeSrc": "11525:74:7",
															"nodeType": "YulAssignment",
															"src": "11525:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11591:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11596:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11596:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11532:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11532:58:7"
																},
																"nativeSrc": "11532:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11532:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11525:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11697:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11697:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																	"nativeSrc": "11608:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11608:88:7"
																},
																"nativeSrc": "11608:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11608:93:7"
															},
															"nativeSrc": "11608:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11608:93:7"
														},
														{
															"nativeSrc": "11710:19:7",
															"nodeType": "YulAssignment",
															"src": "11710:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11721:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11721:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11726:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11717:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11717:3:7"
																},
																"nativeSrc": "11717:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11717:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11710:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11369:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11503:3:7",
														"nodeType": "YulTypedName",
														"src": "11503:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11511:3:7",
														"nodeType": "YulTypedName",
														"src": "11511:3:7",
														"type": ""
													}
												],
												"src": "11369:366:7"
											},
											{
												"body": {
													"nativeSrc": "11912:248:7",
													"nodeType": "YulBlock",
													"src": "11912:248:7",
													"statements": [
														{
															"nativeSrc": "11922:26:7",
															"nodeType": "YulAssignment",
															"src": "11922:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11934:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11934:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11945:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11945:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11930:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11930:3:7"
																},
																"nativeSrc": "11930:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11930:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11922:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11922:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11969:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11980:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11980:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11965:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11965:3:7"
																		},
																		"nativeSrc": "11965:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11965:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11988:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11988:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11994:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11994:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11984:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11984:3:7"
																		},
																		"nativeSrc": "11984:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11984:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11958:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11958:6:7"
																},
																"nativeSrc": "11958:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11958:47:7"
															},
															"nativeSrc": "11958:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11958:47:7"
														},
														{
															"nativeSrc": "12014:139:7",
															"nodeType": "YulAssignment",
															"src": "12014:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12148:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12148:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12022:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12022:124:7"
																},
																"nativeSrc": "12022:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12022:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12014:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11741:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11892:9:7",
														"nodeType": "YulTypedName",
														"src": "11892:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11907:4:7",
														"nodeType": "YulTypedName",
														"src": "11907:4:7",
														"type": ""
													}
												],
												"src": "11741:419:7"
											},
											{
												"body": {
													"nativeSrc": "12194:152:7",
													"nodeType": "YulBlock",
													"src": "12194:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12211:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12211:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12214:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12214:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12204:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12204:6:7"
																},
																"nativeSrc": "12204:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12204:88:7"
															},
															"nativeSrc": "12204:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12204:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12308:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12308:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12311:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12311:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12301:6:7"
																},
																"nativeSrc": "12301:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12301:15:7"
															},
															"nativeSrc": "12301:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12301:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12332:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12335:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12335:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12325:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12325:6:7"
																},
																"nativeSrc": "12325:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12325:15:7"
															},
															"nativeSrc": "12325:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12325:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12166:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12166:180:7"
											},
											{
												"body": {
													"nativeSrc": "12458:61:7",
													"nodeType": "YulBlock",
													"src": "12458:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12480:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12480:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12488:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12476:3:7"
																		},
																		"nativeSrc": "12476:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12476:14:7"
																	},
																	{
																		"hexValue": "73746b206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "12492:19:7",
																		"nodeType": "YulLiteral",
																		"src": "12492:19:7",
																		"type": "",
																		"value": "stk is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12469:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12469:6:7"
																},
																"nativeSrc": "12469:43:7",
																"nodeType": "YulFunctionCall",
																"src": "12469:43:7"
															},
															"nativeSrc": "12469:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "12469:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad",
												"nativeSrc": "12352:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12450:6:7",
														"nodeType": "YulTypedName",
														"src": "12450:6:7",
														"type": ""
													}
												],
												"src": "12352:167:7"
											},
											{
												"body": {
													"nativeSrc": "12671:220:7",
													"nodeType": "YulBlock",
													"src": "12671:220:7",
													"statements": [
														{
															"nativeSrc": "12681:74:7",
															"nodeType": "YulAssignment",
															"src": "12681:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12747:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12747:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12752:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12752:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12688:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12688:58:7"
																},
																"nativeSrc": "12688:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12688:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12681:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12853:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12853:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad",
																	"nativeSrc": "12764:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12764:88:7"
																},
																"nativeSrc": "12764:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12764:93:7"
															},
															"nativeSrc": "12764:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12764:93:7"
														},
														{
															"nativeSrc": "12866:19:7",
															"nodeType": "YulAssignment",
															"src": "12866:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12877:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12882:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12882:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12873:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12873:3:7"
																},
																"nativeSrc": "12873:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12873:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12866:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12866:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12525:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12659:3:7",
														"nodeType": "YulTypedName",
														"src": "12659:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12667:3:7",
														"nodeType": "YulTypedName",
														"src": "12667:3:7",
														"type": ""
													}
												],
												"src": "12525:366:7"
											},
											{
												"body": {
													"nativeSrc": "13068:248:7",
													"nodeType": "YulBlock",
													"src": "13068:248:7",
													"statements": [
														{
															"nativeSrc": "13078:26:7",
															"nodeType": "YulAssignment",
															"src": "13078:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13090:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13090:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13101:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13101:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13086:3:7"
																},
																"nativeSrc": "13086:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13086:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13078:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13078:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13125:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13136:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13136:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13121:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13121:3:7"
																		},
																		"nativeSrc": "13121:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13121:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13144:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13144:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13150:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13140:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13140:3:7"
																		},
																		"nativeSrc": "13140:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13140:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13114:6:7"
																},
																"nativeSrc": "13114:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13114:47:7"
															},
															"nativeSrc": "13114:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13114:47:7"
														},
														{
															"nativeSrc": "13170:139:7",
															"nodeType": "YulAssignment",
															"src": "13170:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13304:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13304:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13178:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13178:124:7"
																},
																"nativeSrc": "13178:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13178:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13170:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13170:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12897:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13048:9:7",
														"nodeType": "YulTypedName",
														"src": "13048:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13063:4:7",
														"nodeType": "YulTypedName",
														"src": "13063:4:7",
														"type": ""
													}
												],
												"src": "12897:419:7"
											},
											{
												"body": {
													"nativeSrc": "13428:70:7",
													"nodeType": "YulBlock",
													"src": "13428:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13450:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13450:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13458:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13458:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13446:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13446:3:7"
																		},
																		"nativeSrc": "13446:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13446:14:7"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206973206e6f74206f766572",
																		"kind": "string",
																		"nativeSrc": "13462:28:7",
																		"nodeType": "YulLiteral",
																		"src": "13462:28:7",
																		"type": "",
																		"value": "Staking period is not over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13439:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13439:6:7"
																},
																"nativeSrc": "13439:52:7",
																"nodeType": "YulFunctionCall",
																"src": "13439:52:7"
															},
															"nativeSrc": "13439:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "13439:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507",
												"nativeSrc": "13322:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13420:6:7",
														"nodeType": "YulTypedName",
														"src": "13420:6:7",
														"type": ""
													}
												],
												"src": "13322:176:7"
											},
											{
												"body": {
													"nativeSrc": "13650:220:7",
													"nodeType": "YulBlock",
													"src": "13650:220:7",
													"statements": [
														{
															"nativeSrc": "13660:74:7",
															"nodeType": "YulAssignment",
															"src": "13660:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13726:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13726:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13731:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13731:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13667:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13667:58:7"
																},
																"nativeSrc": "13667:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13667:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13660:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13832:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13832:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507",
																	"nativeSrc": "13743:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13743:88:7"
																},
																"nativeSrc": "13743:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13743:93:7"
															},
															"nativeSrc": "13743:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13743:93:7"
														},
														{
															"nativeSrc": "13845:19:7",
															"nodeType": "YulAssignment",
															"src": "13845:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13856:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13856:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13861:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13861:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13852:3:7"
																},
																"nativeSrc": "13852:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13852:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13845:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13845:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13504:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13638:3:7",
														"nodeType": "YulTypedName",
														"src": "13638:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13646:3:7",
														"nodeType": "YulTypedName",
														"src": "13646:3:7",
														"type": ""
													}
												],
												"src": "13504:366:7"
											},
											{
												"body": {
													"nativeSrc": "14047:248:7",
													"nodeType": "YulBlock",
													"src": "14047:248:7",
													"statements": [
														{
															"nativeSrc": "14057:26:7",
															"nodeType": "YulAssignment",
															"src": "14057:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14069:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14069:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14080:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14080:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14065:3:7"
																},
																"nativeSrc": "14065:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14065:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14057:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14057:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14104:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14104:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14115:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14115:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14100:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14100:3:7"
																		},
																		"nativeSrc": "14100:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14100:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14123:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14123:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14129:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14129:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14119:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14119:3:7"
																		},
																		"nativeSrc": "14119:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14119:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14093:6:7"
																},
																"nativeSrc": "14093:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14093:47:7"
															},
															"nativeSrc": "14093:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14093:47:7"
														},
														{
															"nativeSrc": "14149:139:7",
															"nodeType": "YulAssignment",
															"src": "14149:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14283:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14283:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14157:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14157:124:7"
																},
																"nativeSrc": "14157:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14157:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14149:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14149:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13876:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14027:9:7",
														"nodeType": "YulTypedName",
														"src": "14027:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14042:4:7",
														"nodeType": "YulTypedName",
														"src": "14042:4:7",
														"type": ""
													}
												],
												"src": "13876:419:7"
											},
											{
												"body": {
													"nativeSrc": "14427:206:7",
													"nodeType": "YulBlock",
													"src": "14427:206:7",
													"statements": [
														{
															"nativeSrc": "14437:26:7",
															"nodeType": "YulAssignment",
															"src": "14437:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14449:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14449:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14460:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14460:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14445:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14445:3:7"
																},
																"nativeSrc": "14445:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14445:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14437:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14437:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14517:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14517:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14530:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14530:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14541:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14541:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14526:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14526:3:7"
																		},
																		"nativeSrc": "14526:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14526:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14473:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14473:43:7"
																},
																"nativeSrc": "14473:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14473:71:7"
															},
															"nativeSrc": "14473:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14473:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14598:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14598:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14611:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14611:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14622:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14607:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14607:3:7"
																		},
																		"nativeSrc": "14607:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14607:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14554:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14554:43:7"
																},
																"nativeSrc": "14554:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14554:72:7"
															},
															"nativeSrc": "14554:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14554:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14301:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14391:9:7",
														"nodeType": "YulTypedName",
														"src": "14391:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14403:6:7",
														"nodeType": "YulTypedName",
														"src": "14403:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14411:6:7",
														"nodeType": "YulTypedName",
														"src": "14411:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14422:4:7",
														"nodeType": "YulTypedName",
														"src": "14422:4:7",
														"type": ""
													}
												],
												"src": "14301:332:7"
											},
											{
												"body": {
													"nativeSrc": "14765:206:7",
													"nodeType": "YulBlock",
													"src": "14765:206:7",
													"statements": [
														{
															"nativeSrc": "14775:26:7",
															"nodeType": "YulAssignment",
															"src": "14775:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14787:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14787:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14798:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14783:3:7"
																},
																"nativeSrc": "14783:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14783:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14775:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14775:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14855:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14855:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14868:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14868:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14879:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14879:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14864:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14864:3:7"
																		},
																		"nativeSrc": "14864:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14864:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14811:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14811:43:7"
																},
																"nativeSrc": "14811:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14811:71:7"
															},
															"nativeSrc": "14811:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14811:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14936:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14936:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14949:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14960:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14960:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14945:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14945:3:7"
																		},
																		"nativeSrc": "14945:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14945:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14892:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14892:43:7"
																},
																"nativeSrc": "14892:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14892:72:7"
															},
															"nativeSrc": "14892:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14892:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14639:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14729:9:7",
														"nodeType": "YulTypedName",
														"src": "14729:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14741:6:7",
														"nodeType": "YulTypedName",
														"src": "14741:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14749:6:7",
														"nodeType": "YulTypedName",
														"src": "14749:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14760:4:7",
														"nodeType": "YulTypedName",
														"src": "14760:4:7",
														"type": ""
													}
												],
												"src": "14639:332:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_StakingPeriod_$942(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_StakingPeriod_$942(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_StakingPeriod_$942(value)\n    }\n\n    function abi_decode_tuple_t_enum$_StakingPeriod_$942(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_StakingPeriod_$942(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$942(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$942(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_assert_t_enum$_StakingPeriod_$942(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakingPeriod_$942(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakingPeriod_$942(value)\n    }\n\n    function convert_t_enum$_StakingPeriod_$942_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakingPeriod_$942(value)\n    }\n\n    function abi_encode_t_enum$_StakingPeriod_$942_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakingPeriod_$942_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$942_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_StakingPeriod_$942_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake index\")\n\n    }\n\n    function abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"stk is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period is not over\")\n\n    }\n\n    function abi_encode_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80632e1a7d4d116100595780632e1a7d4d146100fb5780634931fa751461011757806372f702f314610147578063b5d5b5fa146101655761007b565b80630ae355d31461007f57806310087fb1146100af5780631f1accb2146100cb575b5f5ffd5b61009960048036038101906100949190610952565b61019a565b6040516100a69190610995565b60405180910390f35b6100c960048036038101906100c491906109d8565b6101af565b005b6100e560048036038101906100e09190610952565b610506565b6040516100f29190610995565b60405180910390f35b61011560048036038101906101109190610a16565b61051a565b005b610131600480360381019061012c9190610952565b6107e8565b60405161013e9190610995565b60405180910390f35b61014f6107fd565b60405161015c9190610abb565b60405180910390f35b61017f600480360381019061017a9190610b0f565b610822565b60405161019196959493929190610b67565b60405180910390f35b6004602052805f5260405f205f915090505481565b5f82116101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610c20565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161024f93929190610c4d565b6020604051808303815f875af115801561026b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028f9190610cac565b6102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c590610d21565b60405180910390fd5b5f6102d882610880565b90505f60045f8460038111156102f1576102f0610d3f565b5b600381111561030357610302610d3f565b5b81526020019081526020015f205490505f6101686001835f5f88600381111561032f5761032e610d3f565b5b600381111561034157610340610d3f565b5b81526020019081526020015f20546103599190610d99565b6103639190610d99565b61036d9190610e07565b90505f4290505f84826103809190610e37565b90505f6040518060c0016040528060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050815260200189815260200184815260200183815260200185815260200160011515815250905060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600602015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015f6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167fbde7f0ba1630d25515c7ab99ba47d5640b7ffb4c673b2a5464ae6791955892988989856040516104f493929190610eb0565b60405180910390a25050505050505050565b5f602052805f5260405f205f915090505481565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050811061059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610f2f565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106105ec576105eb610f4d565b5b905f5260205f2090600602019050806005015f9054906101000a900460ff1661064a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064190610fc4565b60405180910390fd5b8060030154421015610691576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106889061102c565b60405180910390fd5b5f816005015f6101000a81548160ff0219169083151502179055505f670de0b6b3a76400006064836004015484600101546106cc9190610d99565b6106d69190610e07565b6106e09190610e07565b90505f8183600101546106f39190610e37565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161075192919061104a565b6020604051808303815f875af115801561076d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107919190610cac565b503373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc682866040516107da929190611071565b60405180910390a250505050565b6003602052805f5260405f205f915090505481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052815f5260405f20818154811061083b575f80fd5b905f5260205f2090600602015f9150915050805f015490806001015490806002015490806003015490806004015490806005015f9054906101000a900460ff16905086565b5f5f600381111561089457610893610d3f565b5b8260038111156108a7576108a6610d3f565b5b036108b557603c9050610926565b600160038111156108c9576108c8610d3f565b5b8260038111156108dc576108db610d3f565b5b036108ea5760b49050610926565b600260038111156108fe576108fd610d3f565b5b82600381111561091157610910610d3f565b5b036109205761012c9050610926565b61025890505b919050565b5f5ffd5b6004811061093b575f5ffd5b50565b5f8135905061094c8161092f565b92915050565b5f602082840312156109675761096661092b565b5b5f6109748482850161093e565b91505092915050565b5f819050919050565b61098f8161097d565b82525050565b5f6020820190506109a85f830184610986565b92915050565b6109b78161097d565b81146109c1575f5ffd5b50565b5f813590506109d2816109ae565b92915050565b5f5f604083850312156109ee576109ed61092b565b5b5f6109fb858286016109c4565b9250506020610a0c8582860161093e565b9150509250929050565b5f60208284031215610a2b57610a2a61092b565b5b5f610a38848285016109c4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a83610a7e610a7984610a41565b610a60565b610a41565b9050919050565b5f610a9482610a69565b9050919050565b5f610aa582610a8a565b9050919050565b610ab581610a9b565b82525050565b5f602082019050610ace5f830184610aac565b92915050565b5f610ade82610a41565b9050919050565b610aee81610ad4565b8114610af8575f5ffd5b50565b5f81359050610b0981610ae5565b92915050565b5f5f60408385031215610b2557610b2461092b565b5b5f610b3285828601610afb565b9250506020610b43858286016109c4565b9150509250929050565b5f8115159050919050565b610b6181610b4d565b82525050565b5f60c082019050610b7a5f830189610986565b610b876020830188610986565b610b946040830187610986565b610ba16060830186610986565b610bae6080830185610986565b610bbb60a0830184610b58565b979650505050505050565b5f82825260208201905092915050565b7f616d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f610c0a602083610bc6565b9150610c1582610bd6565b602082019050919050565b5f6020820190508181035f830152610c3781610bfe565b9050919050565b610c4781610ad4565b82525050565b5f606082019050610c605f830186610c3e565b610c6d6020830185610c3e565b610c7a6040830184610986565b949350505050565b610c8b81610b4d565b8114610c95575f5ffd5b50565b5f81519050610ca681610c82565b92915050565b5f60208284031215610cc157610cc061092b565b5b5f610cce84828501610c98565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610d0b600f83610bc6565b9150610d1682610cd7565b602082019050919050565b5f6020820190508181035f830152610d3881610cff565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da38261097d565b9150610dae8361097d565b9250828202610dbc8161097d565b91508282048414831517610dd357610dd2610d6c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e118261097d565b9150610e1c8361097d565b925082610e2c57610e2b610dda565b5b828204905092915050565b5f610e418261097d565b9150610e4c8361097d565b9250828201905080821115610e6457610e63610d6c565b5b92915050565b60048110610e7b57610e7a610d3f565b5b50565b5f819050610e8b82610e6a565b919050565b5f610e9a82610e7e565b9050919050565b610eaa81610e90565b82525050565b5f606082019050610ec35f830186610986565b610ed06020830185610ea1565b610edd6040830184610986565b949350505050565b7f496e76616c6964207374616b6520696e646578000000000000000000000000005f82015250565b5f610f19601383610bc6565b9150610f2482610ee5565b602082019050919050565b5f6020820190508181035f830152610f4681610f0d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f73746b206973206e6f74206163746976650000000000000000000000000000005f82015250565b5f610fae601183610bc6565b9150610fb982610f7a565b602082019050919050565b5f6020820190508181035f830152610fdb81610fa2565b9050919050565b7f5374616b696e6720706572696f64206973206e6f74206f7665720000000000005f82015250565b5f611016601a83610bc6565b915061102182610fe2565b602082019050919050565b5f6020820190508181035f8301526110438161100a565b9050919050565b5f60408201905061105d5f830185610c3e565b61106a6020830184610986565b9392505050565b5f6040820190506110845f830185610986565b6110916020830184610986565b939250505056fea26469706673582212205d14b7c33087a95e8c5375275840b1677c9f6df2d92e100f6fe407a18426e51764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x4931FA75 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x165 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xAE355D3 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x10087FB1 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x1F1ACCB2 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2D8 DUP3 PUSH2 0x880 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F0 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x168 PUSH1 0x1 DUP4 PUSH0 PUSH0 DUP9 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32F JUMPI PUSH2 0x32E PUSH2 0xD3F JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x341 JUMPI PUSH2 0x340 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x36D SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBDE7F0BA1630D25515C7AB99BA47D5640B7FFB4C673B2A5464AE679195589298 DUP10 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EB PUSH2 0xF4D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 DUP4 PUSH1 0x4 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP3 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x83B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8A7 JUMPI PUSH2 0x8A6 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B5 JUMPI PUSH1 0x3C SWAP1 POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0xD3F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8EA JUMPI PUSH1 0xB4 SWAP1 POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0xD3F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0xD3F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x920 JUMPI PUSH2 0x12C SWAP1 POP PUSH2 0x926 JUMP JUMPDEST PUSH2 0x258 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x93B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94C DUP2 PUSH2 0x92F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x974 DUP5 DUP3 DUP6 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98F DUP2 PUSH2 0x97D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B7 DUP2 PUSH2 0x97D JUMP JUMPDEST DUP2 EQ PUSH2 0x9C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D2 DUP2 PUSH2 0x9AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9FB DUP6 DUP3 DUP7 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA0C DUP6 DUP3 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH2 0xA2A PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA38 DUP5 DUP3 DUP6 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA83 PUSH2 0xA7E PUSH2 0xA79 DUP5 PUSH2 0xA41 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA94 DUP3 PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA5 DUP3 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0xA9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACE PUSH0 DUP4 ADD DUP5 PUSH2 0xAAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xADE DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEE DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB09 DUP2 PUSH2 0xAE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH2 0xB24 PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB32 DUP6 DUP3 DUP7 ADD PUSH2 0xAFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB43 DUP6 DUP3 DUP7 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB61 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xB7A PUSH0 DUP4 ADD DUP10 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xB87 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xB94 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xBA1 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xBAE PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xBBB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xB58 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC0A PUSH1 0x20 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC15 DUP3 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC37 DUP2 PUSH2 0xBFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC60 PUSH0 DUP4 ADD DUP7 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0xC6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0xC7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC8B DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xC95 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA6 DUP2 PUSH2 0xC82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH2 0xCC0 PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCE DUP5 DUP3 DUP6 ADD PUSH2 0xC98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD0B PUSH1 0xF DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD16 DUP3 PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD38 DUP2 PUSH2 0xCFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA3 DUP3 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDBC DUP2 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDD3 JUMPI PUSH2 0xDD2 PUSH2 0xD6C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE11 DUP3 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0xE1C DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0xDDA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE41 DUP3 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0xE4C DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0xD6C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xE7B JUMPI PUSH2 0xE7A PUSH2 0xD3F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0xE8B DUP3 PUSH2 0xE6A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE9A DUP3 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAA DUP2 PUSH2 0xE90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEC3 PUSH0 DUP4 ADD DUP7 PUSH2 0x986 JUMP JUMPDEST PUSH2 0xED0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0xEDD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 PUSH1 0x13 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF46 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x73746B206973206E6F7420616374697665000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAE PUSH1 0x11 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB9 DUP3 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDB DUP2 PUSH2 0xFA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206973206E6F74206F766572000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1016 PUSH1 0x1A DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 PUSH2 0x100A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x105D PUSH0 DUP4 ADD DUP6 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x106A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1084 PUSH0 DUP4 ADD DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x1091 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE EQ 0xB7 0xC3 ADDRESS DUP8 0xA9 MCOPY DUP13 MSTORE8 PUSH22 0x275840B1677C9F6DF2D92E100F6FE407A18426E51764 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "174:3968:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1959:982;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;296:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3428:702;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;939:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1040:48;;;;;;;;;;;;;;;;;:::o;1959:982::-;2056:1;2049:6;:8;2041:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2112:12;;;;;;;;;;;:25;;;2138:10;2158:4;2165:6;2112:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2104:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2205:16;2222:20;2235:6;2222:12;:20::i;:::-;2205:37;;2267:18;2286:9;:17;2296:6;2286:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2267:36;;2314:12;2356:3;2350:5;2339:10;2327:3;:11;2331:6;2327:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;:::i;:::-;:28;;;;:::i;:::-;:32;;;;:::i;:::-;2314:45;;2370:13;2386:15;2370:31;;2432:11;2454:8;2446:5;:16;;;;:::i;:::-;2432:30;;2497:21;2521:283;;;;;;;;2554:10;:22;2565:10;2554:22;;;;;;;;;;;;;;;:29;;;;2521:283;;;;2606:6;2521:283;;;;2638:5;2521:283;;;;2667:3;2521:283;;;;2697:4;2521:283;;;;2763:4;2521:283;;;;;2497:307;;2817:10;:22;2828:10;2817:22;;;;;;;;;;;;;;;2845:8;2817:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2901:10;2894:39;;;2913:6;2921;2929:3;2894:39;;;;;;;;:::i;:::-;;;;;;;;2021:920;;;;;;1959:982;;:::o;296:44::-;;;;;;;;;;;;;;;;;:::o;3428:702::-;3505:10;:22;3516:10;3505:22;;;;;;;;;;;;;;;:29;;;;3494:10;:40;3486:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3568:17;3588:10;:22;3599:10;3588:22;;;;;;;;;;;;;;;3611:10;3588:34;;;;;;;;:::i;:::-;;;;;;;;;;;;3568:54;;3641:3;:12;;;;;;;;;;;;3633:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3746:3;:11;;;3727:15;:30;;3719:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3812:5;3799:3;:12;;;:18;;;;;;;;;;;;;;;;;;3838:14;3890:6;3886:3;3868;:14;;;3855:3;:10;;;:27;;;;:::i;:::-;:34;;;;:::i;:::-;:41;;;;:::i;:::-;3838:58;;3907:19;3942:6;3929:3;:10;;;:19;;;;:::i;:::-;3907:41;;4014:12;;;;;;;;;;;:21;;;4036:10;4048:11;4014:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4086:10;4076:46;;;4098:11;4111:10;4076:46;;;;;;;:::i;:::-;;;;;;;;3475:655;;;3428:702;:::o;939:45::-;;;;;;;;;;;;;;;;;:::o;817:27::-;;;;;;;;;;;;;:::o;856:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2997:401::-;3064:7;3095:24;3087:32;;;;;;;;:::i;:::-;;:6;:32;;;;;;;;:::i;:::-;;;3084:307;;3143:9;3135:17;;;;3084:307;3180:24;3172:32;;;;;;;;:::i;:::-;;:6;:32;;;;;;;;:::i;:::-;;;3169:222;;3228:9;3220:17;;;;3169:222;3265:31;3257:39;;;;;;;;:::i;:::-;;:6;:39;;;;;;;;:::i;:::-;;;3254:137;;3320:9;3312:17;;;;3254:137;3369:10;3361:18;;2997:401;;;;:::o;88:117:7:-;197:1;194;187:12;334:116;424:1;417:5;414:12;404:40;;440:1;437;430:12;404:40;334:116;:::o;456:173::-;519:5;557:6;544:20;535:29;;573:50;617:5;573:50;:::i;:::-;456:173;;;;:::o;635:363::-;711:6;760:2;748:9;739:7;735:23;731:32;728:119;;;766:79;;:::i;:::-;728:119;886:1;911:70;973:7;964:6;953:9;949:22;911:70;:::i;:::-;901:80;;857:134;635:363;;;;:::o;1004:77::-;1041:7;1070:5;1059:16;;1004:77;;;:::o;1087:118::-;1174:24;1192:5;1174:24;:::i;:::-;1169:3;1162:37;1087:118;;:::o;1211:222::-;1304:4;1342:2;1331:9;1327:18;1319:26;;1355:71;1423:1;1412:9;1408:17;1399:6;1355:71;:::i;:::-;1211:222;;;;:::o;1439:122::-;1512:24;1530:5;1512:24;:::i;:::-;1505:5;1502:35;1492:63;;1551:1;1548;1541:12;1492:63;1439:122;:::o;1567:139::-;1613:5;1651:6;1638:20;1629:29;;1667:33;1694:5;1667:33;:::i;:::-;1567:139;;;;:::o;1712:508::-;1797:6;1805;1854:2;1842:9;1833:7;1829:23;1825:32;1822:119;;;1860:79;;:::i;:::-;1822:119;1980:1;2005:53;2050:7;2041:6;2030:9;2026:22;2005:53;:::i;:::-;1995:63;;1951:117;2107:2;2133:70;2195:7;2186:6;2175:9;2171:22;2133:70;:::i;:::-;2123:80;;2078:135;1712:508;;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:60::-;2721:3;2742:5;2735:12;;2693:60;;;:::o;2759:142::-;2809:9;2842:53;2860:34;2869:24;2887:5;2869:24;:::i;:::-;2860:34;:::i;:::-;2842:53;:::i;:::-;2829:66;;2759:142;;;:::o;2907:126::-;2957:9;2990:37;3021:5;2990:37;:::i;:::-;2977:50;;2907:126;;;:::o;3039:140::-;3103:9;3136:37;3167:5;3136:37;:::i;:::-;3123:50;;3039:140;;;:::o;3185:159::-;3286:51;3331:5;3286:51;:::i;:::-;3281:3;3274:64;3185:159;;:::o;3350:250::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3508:85;3590:1;3579:9;3575:17;3566:6;3508:85;:::i;:::-;3350:250;;;;:::o;3606:96::-;3643:7;3672:24;3690:5;3672:24;:::i;:::-;3661:35;;3606:96;;;:::o;3708:122::-;3781:24;3799:5;3781:24;:::i;:::-;3774:5;3771:35;3761:63;;3820:1;3817;3810:12;3761:63;3708:122;:::o;3836:139::-;3882:5;3920:6;3907:20;3898:29;;3936:33;3963:5;3936:33;:::i;:::-;3836:139;;;;:::o;3981:474::-;4049:6;4057;4106:2;4094:9;4085:7;4081:23;4077:32;4074:119;;;4112:79;;:::i;:::-;4074:119;4232:1;4257:53;4302:7;4293:6;4282:9;4278:22;4257:53;:::i;:::-;4247:63;;4203:117;4359:2;4385:53;4430:7;4421:6;4410:9;4406:22;4385:53;:::i;:::-;4375:63;;4330:118;3981:474;;;;;:::o;4461:90::-;4495:7;4538:5;4531:13;4524:21;4513:32;;4461:90;;;:::o;4557:109::-;4638:21;4653:5;4638:21;:::i;:::-;4633:3;4626:34;4557:109;;:::o;4672:763::-;4899:4;4937:3;4926:9;4922:19;4914:27;;4951:71;5019:1;5008:9;5004:17;4995:6;4951:71;:::i;:::-;5032:72;5100:2;5089:9;5085:18;5076:6;5032:72;:::i;:::-;5114;5182:2;5171:9;5167:18;5158:6;5114:72;:::i;:::-;5196;5264:2;5253:9;5249:18;5240:6;5196:72;:::i;:::-;5278:73;5346:3;5335:9;5331:19;5322:6;5278:73;:::i;:::-;5361:67;5423:3;5412:9;5408:19;5399:6;5361:67;:::i;:::-;4672:763;;;;;;;;;:::o;5441:169::-;5525:11;5559:6;5554:3;5547:19;5599:4;5594:3;5590:14;5575:29;;5441:169;;;;:::o;5616:182::-;5756:34;5752:1;5744:6;5740:14;5733:58;5616:182;:::o;5804:366::-;5946:3;5967:67;6031:2;6026:3;5967:67;:::i;:::-;5960:74;;6043:93;6132:3;6043:93;:::i;:::-;6161:2;6156:3;6152:12;6145:19;;5804:366;;;:::o;6176:419::-;6342:4;6380:2;6369:9;6365:18;6357:26;;6429:9;6423:4;6419:20;6415:1;6404:9;6400:17;6393:47;6457:131;6583:4;6457:131;:::i;:::-;6449:139;;6176:419;;;:::o;6601:118::-;6688:24;6706:5;6688:24;:::i;:::-;6683:3;6676:37;6601:118;;:::o;6725:442::-;6874:4;6912:2;6901:9;6897:18;6889:26;;6925:71;6993:1;6982:9;6978:17;6969:6;6925:71;:::i;:::-;7006:72;7074:2;7063:9;7059:18;7050:6;7006:72;:::i;:::-;7088;7156:2;7145:9;7141:18;7132:6;7088:72;:::i;:::-;6725:442;;;;;;:::o;7173:116::-;7243:21;7258:5;7243:21;:::i;:::-;7236:5;7233:32;7223:60;;7279:1;7276;7269:12;7223:60;7173:116;:::o;7295:137::-;7349:5;7380:6;7374:13;7365:22;;7396:30;7420:5;7396:30;:::i;:::-;7295:137;;;;:::o;7438:345::-;7505:6;7554:2;7542:9;7533:7;7529:23;7525:32;7522:119;;;7560:79;;:::i;:::-;7522:119;7680:1;7705:61;7758:7;7749:6;7738:9;7734:22;7705:61;:::i;:::-;7695:71;;7651:125;7438:345;;;;:::o;7789:165::-;7929:17;7925:1;7917:6;7913:14;7906:41;7789:165;:::o;7960:366::-;8102:3;8123:67;8187:2;8182:3;8123:67;:::i;:::-;8116:74;;8199:93;8288:3;8199:93;:::i;:::-;8317:2;8312:3;8308:12;8301:19;;7960:366;;;:::o;8332:419::-;8498:4;8536:2;8525:9;8521:18;8513:26;;8585:9;8579:4;8575:20;8571:1;8560:9;8556:17;8549:47;8613:131;8739:4;8613:131;:::i;:::-;8605:139;;8332:419;;;:::o;8757:180::-;8805:77;8802:1;8795:88;8902:4;8899:1;8892:15;8926:4;8923:1;8916:15;8943:180;8991:77;8988:1;8981:88;9088:4;9085:1;9078:15;9112:4;9109:1;9102:15;9129:410;9169:7;9192:20;9210:1;9192:20;:::i;:::-;9187:25;;9226:20;9244:1;9226:20;:::i;:::-;9221:25;;9281:1;9278;9274:9;9303:30;9321:11;9303:30;:::i;:::-;9292:41;;9482:1;9473:7;9469:15;9466:1;9463:22;9443:1;9436:9;9416:83;9393:139;;9512:18;;:::i;:::-;9393:139;9177:362;9129:410;;;;:::o;9545:180::-;9593:77;9590:1;9583:88;9690:4;9687:1;9680:15;9714:4;9711:1;9704:15;9731:185;9771:1;9788:20;9806:1;9788:20;:::i;:::-;9783:25;;9822:20;9840:1;9822:20;:::i;:::-;9817:25;;9861:1;9851:35;;9866:18;;:::i;:::-;9851:35;9908:1;9905;9901:9;9896:14;;9731:185;;;;:::o;9922:191::-;9962:3;9981:20;9999:1;9981:20;:::i;:::-;9976:25;;10015:20;10033:1;10015:20;:::i;:::-;10010:25;;10058:1;10055;10051:9;10044:16;;10079:3;10076:1;10073:10;10070:36;;;10086:18;;:::i;:::-;10070:36;9922:191;;;;:::o;10119:122::-;10209:1;10202:5;10199:12;10189:46;;10215:18;;:::i;:::-;10189:46;10119:122;:::o;10247:145::-;10301:7;10330:5;10319:16;;10336:50;10380:5;10336:50;:::i;:::-;10247:145;;;:::o;10398:::-;10463:9;10496:41;10531:5;10496:41;:::i;:::-;10483:54;;10398:145;;;:::o;10549:161::-;10651:52;10697:5;10651:52;:::i;:::-;10646:3;10639:65;10549:161;;:::o;10716:472::-;10880:4;10918:2;10907:9;10903:18;10895:26;;10931:71;10999:1;10988:9;10984:17;10975:6;10931:71;:::i;:::-;11012:87;11095:2;11084:9;11080:18;11071:6;11012:87;:::i;:::-;11109:72;11177:2;11166:9;11162:18;11153:6;11109:72;:::i;:::-;10716:472;;;;;;:::o;11194:169::-;11334:21;11330:1;11322:6;11318:14;11311:45;11194:169;:::o;11369:366::-;11511:3;11532:67;11596:2;11591:3;11532:67;:::i;:::-;11525:74;;11608:93;11697:3;11608:93;:::i;:::-;11726:2;11721:3;11717:12;11710:19;;11369:366;;;:::o;11741:419::-;11907:4;11945:2;11934:9;11930:18;11922:26;;11994:9;11988:4;11984:20;11980:1;11969:9;11965:17;11958:47;12022:131;12148:4;12022:131;:::i;:::-;12014:139;;11741:419;;;:::o;12166:180::-;12214:77;12211:1;12204:88;12311:4;12308:1;12301:15;12335:4;12332:1;12325:15;12352:167;12492:19;12488:1;12480:6;12476:14;12469:43;12352:167;:::o;12525:366::-;12667:3;12688:67;12752:2;12747:3;12688:67;:::i;:::-;12681:74;;12764:93;12853:3;12764:93;:::i;:::-;12882:2;12877:3;12873:12;12866:19;;12525:366;;;:::o;12897:419::-;13063:4;13101:2;13090:9;13086:18;13078:26;;13150:9;13144:4;13140:20;13136:1;13125:9;13121:17;13114:47;13178:131;13304:4;13178:131;:::i;:::-;13170:139;;12897:419;;;:::o;13322:176::-;13462:28;13458:1;13450:6;13446:14;13439:52;13322:176;:::o;13504:366::-;13646:3;13667:67;13731:2;13726:3;13667:67;:::i;:::-;13660:74;;13743:93;13832:3;13743:93;:::i;:::-;13861:2;13856:3;13852:12;13845:19;;13504:366;;;:::o;13876:419::-;14042:4;14080:2;14069:9;14065:18;14057:26;;14129:9;14123:4;14119:20;14115:1;14104:9;14100:17;14093:47;14157:131;14283:4;14157:131;:::i;:::-;14149:139;;13876:419;;;:::o;14301:332::-;14422:4;14460:2;14449:9;14445:18;14437:26;;14473:71;14541:1;14530:9;14526:17;14517:6;14473:71;:::i;:::-;14554:72;14622:2;14611:9;14607:18;14598:6;14554:72;:::i;:::-;14301:332;;;;;:::o;14639:::-;14760:4;14798:2;14787:9;14783:18;14775:26;;14811:71;14879:1;14868:9;14864:17;14855:6;14811:71;:::i;:::-;14892:72;14960:2;14949:9;14945:18;14936:6;14892:72;:::i;:::-;14639:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "860400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"aprs(uint8)": "2734",
								"apy(uint8)": "2756",
								"durations(uint8)": "2713",
								"stake(uint256,uint8)": "infinite",
								"stakingToken()": "infinite",
								"userStakes(address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_getDuration(enum MtkContracts.StakingPeriod)": "262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1395,
									"end": 1951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1460,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1448,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1436,
									"end": 1448,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1511,
									"end": 1518,
									"name": "PUSH",
									"source": 6,
									"value": "278D00"
								},
								{
									"begin": 1473,
									"end": 1482,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1483,
									"end": 1507,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1473,
									"end": 1508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1473,
									"end": 1508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 1508,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1518,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1518,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1518,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1518,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1567,
									"end": 1574,
									"name": "PUSH",
									"source": 6,
									"value": "76A700"
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1563,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1529,
									"end": 1564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1529,
									"end": 1564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1529,
									"end": 1564,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1574,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1574,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1574,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1574,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1630,
									"end": 1638,
									"name": "PUSH",
									"source": 6,
									"value": "ED4E00"
								},
								{
									"begin": 1585,
									"end": 1594,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1585,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1585,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1585,
									"end": 1627,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1638,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1638,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1585,
									"end": 1638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1692,
									"name": "PUSH",
									"source": 6,
									"value": "1E13380"
								},
								{
									"begin": 1649,
									"end": 1658,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1659,
									"end": 1680,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1649,
									"end": 1681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1649,
									"end": 1681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1649,
									"end": 1681,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1692,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1692,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1692,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1705,
									"end": 1708,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1709,
									"end": 1733,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1705,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1705,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1734,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1739,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1739,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1739,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1739,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1766,
									"end": 1769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1770,
									"end": 1794,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1766,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1766,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1766,
									"end": 1795,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1868,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1827,
									"end": 1830,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1831,
									"end": 1862,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1827,
									"end": 1863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1827,
									"end": 1863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1827,
									"end": 1863,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1868,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1868,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1868,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1868,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1924,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1897,
									"end": 1918,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1893,
									"end": 1919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1893,
									"end": 1919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1893,
									"end": 1919,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1924,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1924,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1924,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1402,
									"end": 1582,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1402,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1450,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1440,
									"end": 1528,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1551,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1544,
									"end": 1545,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1537,
									"end": 1552,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1575,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1568,
									"end": 1569,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1576,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4142,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d14b7c33087a95e8c5375275840b1677c9f6df2d92e100f6fe407a18426e51764736f6c634300081e0033",
									".code": [
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "4931FA75"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "72F702F3"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "B5D5B5FA"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "AE355D3"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "10087FB1"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "1F1ACCB2"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4142,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1040,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1040,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1040,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1959,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 296,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 296,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 296,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3428,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3428,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 939,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 939,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 939,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 817,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 817,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 856,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 856,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2057,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2041,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2041,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2137,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2138,
											"end": 2148,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2162,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2112,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2112,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2112,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2104,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2104,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2222,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2242,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2222,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2295,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2286,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2286,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2303,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2359,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2350,
											"end": 2355,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2339,
											"end": 2349,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2327,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2327,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2327,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2327,
											"end": 2355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2327,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2355,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2327,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2327,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2401,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2462,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2446,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2643,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2767,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2838,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2839,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2911,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "BDE7F0BA1630D25515C7AB99BA47D5640B7FFB4C673B2A5464AE679195589298"
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2894,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3515,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3534,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3534,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3486,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3486,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3598,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3609,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3588,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3633,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3633,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3757,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3746,
											"end": 3757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3757,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3719,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3719,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3886,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3868,
											"end": 3871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3882,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3868,
											"end": 3882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3882,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3858,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3855,
											"end": 3882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3855,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3882,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3855,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3855,
											"end": 3889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3855,
											"end": 3896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3855,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3896,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3855,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3929,
											"end": 3939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3929,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3929,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3929,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4014,
											"end": 4026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4014,
											"end": 4035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4036,
											"end": 4046,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4014,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4096,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 4098,
											"end": 4109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4121,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4076,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4122,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 4130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 4130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 4130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 844,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 856,
											"end": 901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 856,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3087,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3087,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3084,
											"end": 3391,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3152,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 3135,
											"end": 3152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3135,
											"end": 3152,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3391,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3084,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3172,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3172,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3169,
											"end": 3391,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "B4"
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3220,
											"end": 3237,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3391,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3169,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3257,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3257,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3296,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3254,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3254,
											"end": 3391,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3312,
											"end": 3329,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3254,
											"end": 3391,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3254,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 450,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 334,
											"end": 450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 414,
											"end": 426,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 404,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 404,
											"end": 444,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 442,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 404,
											"end": 444,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 404,
											"end": 444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 334,
											"end": 450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 456,
											"end": 629,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 456,
											"end": 629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 544,
											"end": 564,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 535,
											"end": 564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 573,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 573,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 623,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 573,
											"end": 623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 456,
											"end": 629,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 456,
											"end": 629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 456,
											"end": 629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 456,
											"end": 629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 456,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 635,
											"end": 998,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 739,
											"end": 746,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 735,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 731,
											"end": 763,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 728,
											"end": 847,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 728,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 728,
											"end": 847,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 766,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 766,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 766,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 766,
											"end": 845,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 766,
											"end": 845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 728,
											"end": 847,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 728,
											"end": 847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 886,
											"end": 887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 973,
											"end": 980,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 953,
											"end": 962,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 949,
											"end": 971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 911,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 911,
											"end": 981,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 911,
											"end": 981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 981,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 857,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 635,
											"end": 998,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 635,
											"end": 998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 635,
											"end": 998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 635,
											"end": 998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 635,
											"end": 998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1174,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1355,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1561,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1439,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1512,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1553,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1613,
											"end": 1618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1667,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1856,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1840,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1860,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2005,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2058,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2195,
											"end": 2202,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2175,
											"end": 2184,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2133,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2203,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2133,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2485,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2869,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2860,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2842,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2990,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3136,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3286,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3284,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3508,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3672,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3830,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3708,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3799,
											"end": 3804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3781,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3806,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3907,
											"end": 3927,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3963,
											"end": 3968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3936,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4193,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4074,
											"end": 4193,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4112,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4112,
											"end": 4191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4191,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4112,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4193,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4074,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4302,
											"end": 4309,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4291,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4257,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4203,
											"end": 4320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4430,
											"end": 4437,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4419,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4385,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4438,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4385,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4551,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4461,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4545,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4666,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4557,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4653,
											"end": 4658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4638,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4638,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4660,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4940,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4922,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5019,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5001,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4951,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5022,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4951,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5032,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5104,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5032,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5182,
											"end": 5184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5114,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5186,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5114,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5264,
											"end": 5266,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5253,
											"end": 5262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5196,
											"end": 5268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5268,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5196,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5346,
											"end": 5349,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5278,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5351,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5278,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5423,
											"end": 5426,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5361,
											"end": 5428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5428,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5361,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 5435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5610,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5441,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5566,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5610,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5798,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5616,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5790,
											"name": "PUSH",
											"source": 7,
											"value": "616D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 6170,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5804,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6031,
											"end": 6033,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5967,
											"end": 6034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6034,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5967,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6132,
											"end": 6135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6043,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 6170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 6170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 6170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 6170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6595,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 6176,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6342,
											"end": 6346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6369,
											"end": 6378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6413,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6400,
											"end": 6417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6583,
											"end": 6587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6457,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6588,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6457,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6719,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6601,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6706,
											"end": 6711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6688,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6688,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6874,
											"end": 6878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6914,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6901,
											"end": 6910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6993,
											"end": 6994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 6991,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6925,
											"end": 6996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6996,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6925,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7074,
											"end": 7076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7072,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7056,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7006,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7078,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7006,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7156,
											"end": 7158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7154,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7138,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 7088,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7160,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7088,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7289,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7173,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7258,
											"end": 7263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7243,
											"end": 7264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7243,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7233,
											"end": 7265,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7223,
											"end": 7283,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7281,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7283,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7223,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7432,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7295,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7396,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7783,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 7438,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7542,
											"end": 7551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7540,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7557,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 7560,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7560,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 7522,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7758,
											"end": 7765,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7747,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7705,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7766,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7705,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7695,
											"end": 7766,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7695,
											"end": 7766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7651,
											"end": 7776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7783,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7954,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7789,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7946,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 7925,
											"end": 7926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7960,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8102,
											"end": 8105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8187,
											"end": 8189,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 8182,
											"end": 8185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 8123,
											"end": 8190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8190,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8123,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8288,
											"end": 8291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8199,
											"end": 8292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8292,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8199,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8326,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8332,
											"end": 8751,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8332,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8513,
											"end": 8539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8513,
											"end": 8539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8575,
											"end": 8595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8569,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8549,
											"end": 8596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8739,
											"end": 8743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8613,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8744,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8613,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8332,
											"end": 8751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8332,
											"end": 8751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8332,
											"end": 8751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8332,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8937,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8757,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 8882,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8802,
											"end": 8803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8892,
											"end": 8907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8930,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 9123,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8943,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9068,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8988,
											"end": 8989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 9069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9092,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9078,
											"end": 9093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9112,
											"end": 9116,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9102,
											"end": 9117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9539,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 9129,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9169,
											"end": 9176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9210,
											"end": 9211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9192,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9212,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9192,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9226,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9244,
											"end": 9245,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9226,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9226,
											"end": 9246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9226,
											"end": 9246,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9226,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9221,
											"end": 9246,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9221,
											"end": 9246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9283,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9321,
											"end": 9332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9303,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9333,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9303,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9292,
											"end": 9333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9292,
											"end": 9333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9473,
											"end": 9480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9484,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9466,
											"end": 9467,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9485,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9445,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9416,
											"end": 9499,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9393,
											"end": 9532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9512,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9512,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9532,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9393,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9539,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9545,
											"end": 9725,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9545,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9670,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9694,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9680,
											"end": 9695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9714,
											"end": 9718,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9719,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9916,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9731,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9806,
											"end": 9807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9788,
											"end": 9808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9808,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9788,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9822,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9842,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9861,
											"end": 9862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9851,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9851,
											"end": 9886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9866,
											"end": 9884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9851,
											"end": 9886,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9851,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9905,
											"end": 9906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9901,
											"end": 9910,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9896,
											"end": 9910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9896,
											"end": 9910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9916,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10113,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9922,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 9965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9999,
											"end": 10000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9981,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9981,
											"end": 10001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9981,
											"end": 10001,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9981,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 10001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 10001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10033,
											"end": 10034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 10015,
											"end": 10035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10035,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10015,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10035,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10055,
											"end": 10056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10044,
											"end": 10060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10044,
											"end": 10060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10079,
											"end": 10082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10070,
											"end": 10106,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10070,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10070,
											"end": 10106,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 10086,
											"end": 10104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10070,
											"end": 10106,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10070,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10241,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10119,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10202,
											"end": 10207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10211,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10189,
											"end": 10235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10215,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10235,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10189,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10392,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 10247,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10330,
											"end": 10335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10380,
											"end": 10385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10336,
											"end": 10386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10386,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10336,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10543,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10398,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10496,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 10531,
											"end": 10536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 10496,
											"end": 10537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10496,
											"end": 10537,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 10496,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10710,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 10549,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10651,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10651,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10651,
											"end": 10703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10651,
											"end": 10703,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10651,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10646,
											"end": 10649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10880,
											"end": 10884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10920,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 10921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 10921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10931,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10999,
											"end": 11000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10988,
											"end": 10997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10984,
											"end": 11001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 10981,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10931,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 10931,
											"end": 11002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10931,
											"end": 11002,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10931,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11095,
											"end": 11097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11084,
											"end": 11093,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11080,
											"end": 11098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 11012,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11099,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11012,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 11177,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11166,
											"end": 11175,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 11109,
											"end": 11181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11181,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 11109,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10716,
											"end": 11188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11363,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 11194,
											"end": 11363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11334,
											"end": 11355,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964207374616B6520696E64657800000000000000000000000000"
										},
										{
											"begin": 11330,
											"end": 11331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11318,
											"end": 11332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11356,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11735,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 11369,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11511,
											"end": 11514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11532,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11596,
											"end": 11598,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 11532,
											"end": 11599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11599,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11532,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11608,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11608,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 11608,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11608,
											"end": 11701,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11608,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11726,
											"end": 11728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11721,
											"end": 11724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11717,
											"end": 11729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12160,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11741,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11907,
											"end": 11911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 11947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11934,
											"end": 11943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11930,
											"end": 11948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11922,
											"end": 11948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11922,
											"end": 11948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11994,
											"end": 12003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11984,
											"end": 12004,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 11981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11969,
											"end": 11978,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 11982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 12005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12022,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 12148,
											"end": 12152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12022,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 12022,
											"end": 12153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12022,
											"end": 12153,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 12022,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 12160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12346,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 12166,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12214,
											"end": 12291,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12211,
											"end": 12212,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12204,
											"end": 12292,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12311,
											"end": 12315,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12301,
											"end": 12316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12335,
											"end": 12339,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12332,
											"end": 12333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12340,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12519,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 12352,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12492,
											"end": 12511,
											"name": "PUSH",
											"source": 7,
											"value": "73746B206973206E6F7420616374697665000000000000000000000000000000"
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12480,
											"end": 12486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12476,
											"end": 12490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12525,
											"end": 12891,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 12525,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12667,
											"end": 12670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12688,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 12752,
											"end": 12754,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 12747,
											"end": 12750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 12688,
											"end": 12755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12755,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 12688,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12681,
											"end": 12755,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12681,
											"end": 12755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 12853,
											"end": 12856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 12764,
											"end": 12857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12857,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 12764,
											"end": 12857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12877,
											"end": 12880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12866,
											"end": 12885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12866,
											"end": 12885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12525,
											"end": 12891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12525,
											"end": 12891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12525,
											"end": 12891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12525,
											"end": 12891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12897,
											"end": 13316,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 12897,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13101,
											"end": 13103,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13090,
											"end": 13099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13078,
											"end": 13104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13078,
											"end": 13104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13144,
											"end": 13148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13140,
											"end": 13160,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13125,
											"end": 13134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13121,
											"end": 13138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13114,
											"end": 13161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 13304,
											"end": 13308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 13178,
											"end": 13309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13178,
											"end": 13309,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 13178,
											"end": 13309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12897,
											"end": 13316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12897,
											"end": 13316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12897,
											"end": 13316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12897,
											"end": 13316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13322,
											"end": 13498,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 13322,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13490,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B696E6720706572696F64206973206E6F74206F766572000000000000"
										},
										{
											"begin": 13458,
											"end": 13459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13439,
											"end": 13491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13322,
											"end": 13498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13322,
											"end": 13498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13870,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 13504,
											"end": 13870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13646,
											"end": 13649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 13731,
											"end": 13733,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 13726,
											"end": 13729,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 13667,
											"end": 13734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13734,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 13667,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13660,
											"end": 13734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13660,
											"end": 13734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13743,
											"end": 13836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 13832,
											"end": 13835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13743,
											"end": 13836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 13743,
											"end": 13836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13743,
											"end": 13836,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 13743,
											"end": 13836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13861,
											"end": 13863,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13856,
											"end": 13859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13845,
											"end": 13864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13845,
											"end": 13864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13876,
											"end": 14295,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 13876,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14042,
											"end": 14046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14069,
											"end": 14078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14065,
											"end": 14083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14129,
											"end": 14138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14119,
											"end": 14139,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14104,
											"end": 14113,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14100,
											"end": 14117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14093,
											"end": 14140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14157,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14283,
											"end": 14287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14157,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 14157,
											"end": 14288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14157,
											"end": 14288,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14157,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14149,
											"end": 14288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14149,
											"end": 14288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13876,
											"end": 14295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13876,
											"end": 14295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13876,
											"end": 14295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13876,
											"end": 14295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14422,
											"end": 14426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14460,
											"end": 14462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14449,
											"end": 14458,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14445,
											"end": 14463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14437,
											"end": 14463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14437,
											"end": 14463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 14541,
											"end": 14542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14530,
											"end": 14539,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14526,
											"end": 14543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14517,
											"end": 14523,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 14473,
											"end": 14544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14473,
											"end": 14544,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 14473,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 14622,
											"end": 14624,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14611,
											"end": 14620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14607,
											"end": 14625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14604,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 14554,
											"end": 14626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14626,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 14554,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14760,
											"end": 14764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14798,
											"end": 14800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14787,
											"end": 14796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14783,
											"end": 14801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 14801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14775,
											"end": 14801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 14879,
											"end": 14880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14868,
											"end": 14877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14864,
											"end": 14881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14855,
											"end": 14861,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 14811,
											"end": 14882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 14882,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 14811,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14892,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14960,
											"end": 14962,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14949,
											"end": 14958,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14936,
											"end": 14942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14892,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 14892,
											"end": 14964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14892,
											"end": 14964,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14892,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14639,
											"end": 14971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Basic - 1/contracts/MTK.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"aprs(uint8)": "4931fa75",
							"apy(uint8)": "1f1accb2",
							"durations(uint8)": "0ae355d3",
							"stake(uint256,uint8)": "10087fb1",
							"stakingToken()": "72f702f3",
							"userStakes(address,uint256)": "b5d5b5fa",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_mtkToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"period\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"aprs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"apy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"durations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"period\",\"type\":\"uint8\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Basic - 1/contracts/MTK.sol\":\"MtkContracts\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Basic - 1/contracts/MTK.sol\":{\"keccak256\":\"0x125db728aa4f328aabc7e5c83b7e838faaad40074f8ac521dc75c37196c3d52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bc6ba6c5f9c05024991cce5962840f6bc223fe94a4ac46d3be242be06ca5a98\",\"dweb:/ipfs/QmSzQqSwyEFk4DBkpoXFYYAMtVGTZMvQLiEZLwi2g1CF9e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 947,
								"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
								"label": "apy",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_enum(StakingPeriod)942,t_uint256)"
							},
							{
								"astId": 963,
								"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 969,
								"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
								"label": "userStakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_struct(Stake)960_storage)dyn_storage)"
							},
							{
								"astId": 974,
								"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
								"label": "aprs",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_enum(StakingPeriod)942,t_uint256)"
							},
							{
								"astId": 979,
								"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
								"label": "durations",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_enum(StakingPeriod)942,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake)960_storage)dyn_storage": {
								"base": "t_struct(Stake)960_storage",
								"encoding": "dynamic_array",
								"label": "struct MtkContracts.Stake[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(StakingPeriod)942": {
								"encoding": "inplace",
								"label": "enum MtkContracts.StakingPeriod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(Stake)960_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MtkContracts.Stake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stake)960_storage)dyn_storage"
							},
							"t_mapping(t_enum(StakingPeriod)942,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)942",
								"label": "mapping(enum MtkContracts.StakingPeriod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)960_storage": {
								"encoding": "inplace",
								"label": "struct MtkContracts.Stake",
								"members": [
									{
										"astId": 949,
										"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
										"label": "stakeIndex",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 951,
										"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 953,
										"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 955,
										"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
										"label": "endTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 957,
										"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
										"label": "rewardRate",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 959,
										"contract": "Basic - 1/contracts/MTK.sol:MtkContracts",
										"label": "isActive",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"Basic - 1/contracts/MTK.sol": {
				"ast": {
					"absolutePath": "Basic - 1/contracts/MTK.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MtkContracts": [
							1285
						],
						"Ownable": [
							147
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MtkContracts",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "MtkContracts",
							"nameLocation": "183:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MtkContracts.StakingPeriod",
									"id": 942,
									"members": [
										{
											"id": 938,
											"name": "ThirtyDays",
											"nameLocation": "238:10:6",
											"nodeType": "EnumValue",
											"src": "238:10:6"
										},
										{
											"id": 939,
											"name": "NinetyDays",
											"nameLocation": "250:10:6",
											"nodeType": "EnumValue",
											"src": "250:10:6"
										},
										{
											"id": 940,
											"name": "HundredEightyDays",
											"nameLocation": "262:17:6",
											"nodeType": "EnumValue",
											"src": "262:17:6"
										},
										{
											"id": 941,
											"name": "OneYear",
											"nameLocation": "281:7:6",
											"nodeType": "EnumValue",
											"src": "281:7:6"
										}
									],
									"name": "StakingPeriod",
									"nameLocation": "222:13:6",
									"nodeType": "EnumDefinition",
									"src": "217:73:6"
								},
								{
									"constant": false,
									"functionSelector": "1f1accb2",
									"id": 947,
									"mutability": "mutable",
									"name": "apy",
									"nameLocation": "337:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "296:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
										"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 946,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 944,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 943,
												"name": "StakingPeriod",
												"nameLocations": [
													"304:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 942,
												"src": "304:13:6"
											},
											"referencedDeclaration": 942,
											"src": "304:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$942",
												"typeString": "enum MtkContracts.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "296:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
											"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 945,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "321:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "MtkContracts.Stake",
									"id": 960,
									"members": [
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "stakeIndex",
											"nameLocation": "458:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "450:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "450:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "510:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "502:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 950,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "502:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 953,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "563:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "555:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 952,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "555:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "622:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "614:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 954,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "614:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "681:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "673:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 956,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "673:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "752:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 960,
											"src": "747:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 958,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "747:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "434:5:6",
									"nodeType": "StructDefinition",
									"scope": 1285,
									"src": "427:376:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 963,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "832:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "817:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 962,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 961,
											"name": "IERC20",
											"nameLocations": [
												"817:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "817:6:6"
										},
										"referencedDeclaration": 877,
										"src": "817:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5d5b5fa",
									"id": 969,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "891:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "856:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct MtkContracts.Stake[])"
									},
									"typeName": {
										"id": 968,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 964,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "864:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "856:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct MtkContracts.Stake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 966,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 965,
													"name": "Stake",
													"nameLocations": [
														"875:5:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 960,
													"src": "875:5:6"
												},
												"referencedDeclaration": 960,
												"src": "875:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
													"typeString": "struct MtkContracts.Stake"
												}
											},
											"id": 967,
											"nodeType": "ArrayTypeName",
											"src": "875:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$960_storage_$dyn_storage_ptr",
												"typeString": "struct MtkContracts.Stake[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4931fa75",
									"id": 974,
									"mutability": "mutable",
									"name": "aprs",
									"nameLocation": "980:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "939:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
										"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 973,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 971,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 970,
												"name": "StakingPeriod",
												"nameLocations": [
													"947:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 942,
												"src": "947:13:6"
											},
											"referencedDeclaration": 942,
											"src": "947:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$942",
												"typeString": "enum MtkContracts.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "939:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
											"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 972,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "964:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ae355d3",
									"id": 979,
									"mutability": "mutable",
									"name": "durations",
									"nameLocation": "1079:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "1040:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
										"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 978,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 976,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 975,
												"name": "StakingPeriod",
												"nameLocations": [
													"1048:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 942,
												"src": "1048:13:6"
											},
											"referencedDeclaration": 942,
											"src": "1048:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$942",
												"typeString": "enum MtkContracts.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "1040:31:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
											"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 977,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1063:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bde7f0ba1630d25515c7ab99ba47d5640b7ffb4c673b2a5464ae679195589298",
									"id": 990,
									"name": "Staked",
									"nameLocation": "1137:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1170:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1154:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1193:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1185:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": false,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "1224:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1210:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$942",
													"typeString": "enum MtkContracts.StakingPeriod"
												},
												"typeName": {
													"id": 985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 984,
														"name": "StakingPeriod",
														"nameLocations": [
															"1210:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 942,
														"src": "1210:13:6"
													},
													"referencedDeclaration": 942,
													"src": "1210:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$942",
														"typeString": "enum MtkContracts.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1249:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1241:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:122:6"
									},
									"src": "1131:135:6"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 998,
									"name": "Withdrawn",
									"nameLocation": "1280:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1316:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1300:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "1339:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1331:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1369:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1361:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:97:6"
									},
									"src": "1274:113:6"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1425:526:6",
										"statements": [
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1004,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1436:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1005,
														"name": "_mtkToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "1451:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "1436:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "1436:24:6"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1008,
															"name": "durations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "1473:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1011,
														"indexExpression": {
															"expression": {
																"id": 1009,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1483:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1497:10:6",
															"memberName": "ThirtyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 938,
															"src": "1483:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1473:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3330",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1511:7:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "1473:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:45:6"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1015,
															"name": "durations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "1529:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1018,
														"indexExpression": {
															"expression": {
																"id": 1016,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1539:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1553:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "1539:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1529:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1567:7:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1529:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "1529:45:6"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1022,
															"name": "durations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "1585:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"expression": {
																"id": 1023,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1595:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1609:17:6",
															"memberName": "HundredEightyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 940,
															"src": "1595:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1585:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313830",
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1630:8:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15552000_by_1",
															"typeString": "int_const 15552000"
														},
														"value": "180"
													},
													"src": "1585:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1585:53:6"
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1029,
															"name": "durations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "1649:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"expression": {
																"id": 1030,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1659:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1673:7:6",
															"memberName": "OneYear",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "1659:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1649:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333635",
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1684:8:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "1649:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "1649:43:6"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1036,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1705:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1039,
														"indexExpression": {
															"expression": {
																"id": 1037,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1709:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1723:10:6",
															"memberName": "ThirtyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 938,
															"src": "1709:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1705:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1705:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1705:34:6"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1043,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1766:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1046,
														"indexExpression": {
															"expression": {
																"id": 1044,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1770:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1784:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "1770:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1766:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1798:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1766:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1766:34:6"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1050,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1827:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1053,
														"indexExpression": {
															"expression": {
																"id": 1051,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1831:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1845:17:6",
															"memberName": "HundredEightyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 940,
															"src": "1831:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1827:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1866:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1827:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1827:41:6"
											},
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1057,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1893:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1060,
														"indexExpression": {
															"expression": {
																"id": 1058,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "1897:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1911:7:6",
															"memberName": "OneYear",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "1897:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1893:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "1893:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1893:31:6"
											}
										]
									},
									"id": 1065,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "_mtkToken",
												"nameLocation": "1414:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1407:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 999,
														"name": "IERC20",
														"nameLocations": [
															"1407:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1407:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1407:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:18:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1425:0:6"
									},
									"scope": 1285,
									"src": "1395:556:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "2021:920:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1074,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "2049:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2056:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2049:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2058:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
																"typeString": "literal_string \"amount must be greater than zero\""
															},
															"value": "amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
																"typeString": "literal_string \"amount must be greater than zero\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2041:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2041:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "2041:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1083,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2138:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2142:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2138:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1087,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2158:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MtkContracts_$1285",
																				"typeString": "contract MtkContracts"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MtkContracts_$1285",
																				"typeString": "contract MtkContracts"
																			}
																		],
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2150:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1085,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2150:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2150:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1089,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "2165:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1081,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "2112:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2125:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "2112:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2112:60:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2104:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:88:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "2104:88:6"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "2213:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "2205:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2205:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"arguments": [
														{
															"id": 1097,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2235:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														],
														"id": 1096,
														"name": "_getDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "2222:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_StakingPeriod_$942_$returns$_t_uint256_$",
															"typeString": "function (enum MtkContracts.StakingPeriod) pure returns (uint256)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2222:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2205:37:6"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "periodDays",
														"nameLocation": "2275:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "2267:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2267:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"baseExpression": {
														"id": 1102,
														"name": "durations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2286:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
															"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
														}
													},
													"id": 1104,
													"indexExpression": {
														"id": 1103,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2296:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$942",
															"typeString": "enum MtkContracts.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2286:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2267:36:6"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "2322:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "2314:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2314:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1108,
																	"name": "apy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2327:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$942_$_t_uint256_$",
																		"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
																	}
																},
																"id": 1110,
																"indexExpression": {
																	"id": 1109,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "2331:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$942",
																		"typeString": "enum MtkContracts.StakingPeriod"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2327:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1111,
																"name": "periodDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2339:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2327:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2350:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2353:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "2350:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														},
														"src": "2327:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333630",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2356:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_360_by_1",
															"typeString": "int_const 360"
														},
														"value": "360"
													},
													"src": "2327:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2314:45:6"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "2378:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "2370:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2370:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1124,
												"initialValue": {
													"expression": {
														"id": 1122,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2386:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2392:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2386:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2370:31:6"
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "2440:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "2432:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2432:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1127,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2446:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1128,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "2454:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2446:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2432:30:6"
											},
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2510:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "2497:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$960_memory_ptr",
															"typeString": "struct MtkContracts.Stake"
														},
														"typeName": {
															"id": 1132,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1131,
																"name": "Stake",
																"nameLocations": [
																	"2497:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 960,
																"src": "2497:5:6"
															},
															"referencedDeclaration": 960,
															"src": "2497:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																"typeString": "struct MtkContracts.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1135,
																	"name": "userStakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "2554:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct MtkContracts.Stake storage ref[] storage ref)"
																	}
																},
																"id": 1138,
																"indexExpression": {
																	"expression": {
																		"id": 1136,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2565:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2569:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2565:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2554:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stake_$960_storage_$dyn_storage",
																	"typeString": "struct MtkContracts.Stake storage ref[] storage ref"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2577:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2554:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2606:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1141,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2638:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1142,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "2667:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1143,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "2697:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1134,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2521:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$960_storage_ptr_$",
															"typeString": "type(struct MtkContracts.Stake storage pointer)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2542:10:6",
														"2598:6:6",
														"2627:9:6",
														"2658:7:6",
														"2685:10:6",
														"2753:8:6"
													],
													"names": [
														"stakeIndex",
														"amount",
														"startTime",
														"endTime",
														"rewardRate",
														"isActive"
													],
													"nodeType": "FunctionCall",
													"src": "2521:283:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$960_memory_ptr",
														"typeString": "struct MtkContracts.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:307:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1152,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2845:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$960_memory_ptr",
																"typeString": "struct MtkContracts.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$960_memory_ptr",
																"typeString": "struct MtkContracts.Stake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1147,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "2817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct MtkContracts.Stake storage ref[] storage ref)"
																}
															},
															"id": 1150,
															"indexExpression": {
																"expression": {
																	"id": 1148,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2828:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2832:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2828:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2817:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$960_storage_$dyn_storage",
																"typeString": "struct MtkContracts.Stake storage ref[] storage ref"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2840:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2817:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_ptr_$_t_struct$_Stake_$960_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MtkContracts.Stake storage ref[] storage pointer,struct MtkContracts.Stake storage ref)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2817:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "2817:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1156,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2901:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2905:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2901:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2913:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1159,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2921:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														{
															"id": 1160,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "2929:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1155,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2894:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$942_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum MtkContracts.StakingPeriod,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2894:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "EmitStatement",
												"src": "2889:44:6"
											}
										]
									},
									"functionSelector": "10087fb1",
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1968:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1982:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "1974:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "2004:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "1990:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$942",
													"typeString": "enum MtkContracts.StakingPeriod"
												},
												"typeName": {
													"id": 1069,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1068,
														"name": "StakingPeriod",
														"nameLocations": [
															"1990:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 942,
														"src": "1990:13:6"
													},
													"referencedDeclaration": 942,
													"src": "1990:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$942",
														"typeString": "enum MtkContracts.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:38:6"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2021:0:6"
									},
									"scope": 1285,
									"src": "1959:982:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "3073:325:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_StakingPeriod_$942",
														"typeString": "enum MtkContracts.StakingPeriod"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "3087:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$942",
															"typeString": "enum MtkContracts.StakingPeriod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1173,
															"name": "StakingPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3095:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																"typeString": "type(enum MtkContracts.StakingPeriod)"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3109:10:6",
														"memberName": "ThirtyDays",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "3095:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$942",
															"typeString": "enum MtkContracts.StakingPeriod"
														}
													},
													"src": "3087:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_StakingPeriod_$942",
															"typeString": "enum MtkContracts.StakingPeriod"
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1179,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "3172:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1180,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3180:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3194:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "3180:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"src": "3172:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_StakingPeriod_$942",
																"typeString": "enum MtkContracts.StakingPeriod"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "3257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$942",
																	"typeString": "enum MtkContracts.StakingPeriod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1187,
																	"name": "StakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "3265:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$942_$",
																		"typeString": "type(enum MtkContracts.StakingPeriod)"
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3279:17:6",
																"memberName": "HundredEightyDays",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "3265:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$942",
																	"typeString": "enum MtkContracts.StakingPeriod"
																}
															},
															"src": "3257:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1195,
															"nodeType": "Block",
															"src": "3346:45:6",
															"statements": [
																{
																	"expression": {
																		"hexValue": "3130",
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3369:10:6",
																		"subdenomination": "minutes",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_600_by_1",
																			"typeString": "int_const 600"
																		},
																		"value": "10"
																	},
																	"functionReturnParameters": 1171,
																	"id": 1194,
																	"nodeType": "Return",
																	"src": "3361:18:6"
																}
															]
														},
														"id": 1196,
														"nodeType": "IfStatement",
														"src": "3254:137:6",
														"trueBody": {
															"id": 1192,
															"nodeType": "Block",
															"src": "3297:44:6",
															"statements": [
																{
																	"expression": {
																		"hexValue": "35",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3320:9:6",
																		"subdenomination": "minutes",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "5"
																	},
																	"functionReturnParameters": 1171,
																	"id": 1191,
																	"nodeType": "Return",
																	"src": "3312:17:6"
																}
															]
														}
													},
													"id": 1197,
													"nodeType": "IfStatement",
													"src": "3169:222:6",
													"trueBody": {
														"id": 1185,
														"nodeType": "Block",
														"src": "3205:44:6",
														"statements": [
															{
																"expression": {
																	"hexValue": "33",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3228:9:6",
																	"subdenomination": "minutes",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_180_by_1",
																		"typeString": "int_const 180"
																	},
																	"value": "3"
																},
																"functionReturnParameters": 1171,
																"id": 1184,
																"nodeType": "Return",
																"src": "3220:17:6"
															}
														]
													}
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "3084:307:6",
												"trueBody": {
													"id": 1178,
													"nodeType": "Block",
													"src": "3120:44:6",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3143:9:6",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"functionReturnParameters": 1171,
															"id": 1177,
															"nodeType": "Return",
															"src": "3135:17:6"
														}
													]
												}
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDuration",
									"nameLocation": "3006:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "3033:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3019:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$942",
													"typeString": "enum MtkContracts.StakingPeriod"
												},
												"typeName": {
													"id": 1166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1165,
														"name": "StakingPeriod",
														"nameLocations": [
															"3019:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 942,
														"src": "3019:13:6"
													},
													"referencedDeclaration": 942,
													"src": "3019:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$942",
														"typeString": "enum MtkContracts.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:22:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3064:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3064:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3063:9:6"
									},
									"scope": 1285,
									"src": "2997:401:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "3475:655:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "3494:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1207,
																		"name": "userStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "3505:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct MtkContracts.Stake storage ref[] storage ref)"
																		}
																	},
																	"id": 1210,
																	"indexExpression": {
																		"expression": {
																			"id": 1208,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3516:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3520:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3516:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3505:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stake_$960_storage_$dyn_storage",
																		"typeString": "struct MtkContracts.Stake storage ref[] storage ref"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3528:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3505:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3494:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3535:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3486:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3486:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "3486:71:6"
											},
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "stk",
														"nameLocation": "3582:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3568:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
															"typeString": "struct MtkContracts.Stake"
														},
														"typeName": {
															"id": 1217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1216,
																"name": "Stake",
																"nameLocations": [
																	"3568:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 960,
																"src": "3568:5:6"
															},
															"referencedDeclaration": 960,
															"src": "3568:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																"typeString": "struct MtkContracts.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1219,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "3588:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$960_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct MtkContracts.Stake storage ref[] storage ref)"
															}
														},
														"id": 1222,
														"indexExpression": {
															"expression": {
																"id": 1220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3599:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3603:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3599:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3588:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$960_storage_$dyn_storage",
															"typeString": "struct MtkContracts.Stake storage ref[] storage ref"
														}
													},
													"id": 1224,
													"indexExpression": {
														"id": 1223,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "3611:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3588:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$960_storage",
														"typeString": "struct MtkContracts.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3568:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1227,
																"name": "stk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "3641:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																	"typeString": "struct MtkContracts.Stake storage pointer"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3645:8:6",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 959,
															"src": "3641:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73746b206973206e6f7420616374697665",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3655:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad",
																"typeString": "literal_string \"stk is not active\""
															},
															"value": "stk is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d3a1e6176c07363282aeb3a6fa2ec46355f8127ff27a368f3b4eb87aa8651ad",
																"typeString": "literal_string \"stk is not active\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3633:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3633:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "3633:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1233,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3727:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3733:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3727:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1235,
																	"name": "stk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "3746:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3750:7:6",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 955,
																"src": "3746:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3727:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206973206e6f74206f766572",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3759:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507",
																"typeString": "literal_string \"Staking period is not over\""
															},
															"value": "Staking period is not over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bedd3c102a3f151ffce8df4fba90d1957719f662a629ce7c38414d92b3fb9507",
																"typeString": "literal_string \"Staking period is not over\""
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3719:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3719:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "3719:69:6"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1241,
															"name": "stk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3799:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																"typeString": "struct MtkContracts.Stake storage pointer"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3803:8:6",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 959,
														"src": "3799:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3812:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3799:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "3799:18:6"
											},
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3846:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3838:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3838:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1260,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1249,
																	"name": "stk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "3855:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3859:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 951,
																"src": "3855:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1251,
																	"name": "stk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "3868:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3872:10:6",
																"memberName": "rewardRate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "3868:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3855:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3886:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3855:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3890:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "3890:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "3855:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3838:58:6"
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3915:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3907:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3907:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1263,
															"name": "stk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3929:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$960_storage_ptr",
																"typeString": "struct MtkContracts.Stake storage pointer"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3933:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 951,
														"src": "3929:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1265,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3942:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3929:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3907:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4036:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4040:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4036:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "4048:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1268,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "4014:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4027:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "4014:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4014:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4014:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1277,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4086:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4090:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4086:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1279,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "4098:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1280,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "4111:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1276,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "4076:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4076:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "EmitStatement",
												"src": "4071:51:6"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3437:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3454:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3446:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:20:6"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:6"
									},
									"scope": 1285,
									"src": "3428:702:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1286,
							"src": "174:3968:6",
							"usedErrors": [],
							"usedEvents": [
								990,
								998
							]
						}
					],
					"src": "33:4111:6"
				},
				"id": 6
			}
		}
	}
}